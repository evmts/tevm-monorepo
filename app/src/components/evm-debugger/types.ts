export interface EvmState {
  pc: number; // program counter
  opcode: string; // e.g. "PUSH1", "ADD"
  gasLeft: number; // remaining gas
  depth: number; // call depth
  stack: string[]; // hex values, top last
  memory: string; // full 0xâ€¦ hex dump
  storage: Record<string, string>; // storage as key-value pairs
  logs: string[]; // JSON-encoded events
  returnData: string; // hex buffer
}

export interface SampleContract {
  name: string;
  description: string;
  bytecode: string;
}

export const sampleContracts: SampleContract[] = [
  {
    name: "Counter Contract",
    description: "Simple counter with get, increment, and set functions",
    bytecode:
      "0x608060405234801561001057600080fd5b5060f78061001f6000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80632e64cec114604157806343d726d61460545780636057361d146058575b600080fd5b60476072565b604051605291906085565b60405180910390f35b605660a0565b005b606a60663660046098565b60ab565b005b60008054905090565b6000808055905090565b600080549055565b60008135905060928160b5565b92915050565b60006020828403121560a957600080fd5b5051919050565b6000819050919050565b60bb8160b5565b811460c557600080fd5b5056fea2646970667358221220223a78f5a4128297c82b9a0c68aaa7697e9df75f8b9856bbd05ed0cacfc7c64764736f6c63430008090033",
  },
  {
    name: "Simple Storage",
    description: "Store and retrieve a value",
    bytecode:
      "0x608060405234801561001057600080fd5b50610150806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632e64cec11461003b5780636057361d14610059575b600080fd5b610043610075565b60405161005091906100a1565b60405180910390f35b610073600480360381019061006e91906100ed565b61007e565b005b60008054905090565b8060008190555050565b6000819050919050565b61009b81610088565b82525050565b60006020820190506100b66000830184610092565b92915050565b600080fd5b6100ca81610088565b81146100d557600080fd5b50565b6000813590506100e7816100c1565b92915050565b600060208284031215610103576101026100bc565b5b6000610111848285016100d8565b9150509291505056fea264697066735822122044f0132d3ce474198482cc3f79c22d7ed4cece5e1dcbb2c7cb533a23ca9d9d5364736f6c63430008120033",
  },
  {
    name: "ERC20 Token",
    description: "Basic ERC20 token implementation",
    bytecode:
      "",
  },
];

export const formatHex = (hex: string): string => {
  if (!hex.startsWith("0x")) return hex;
  return hex.length > 10 ? `${hex.slice(0, 6)}...${hex.slice(-4)}` : hex;
};

export const formatMemory = (memory: string): string[] => {
  if (memory === "0x" || memory.length <= 2) return [];

  // Remove 0x prefix
  const hex = memory.slice(2);

  // Group by 32 bytes (64 chars) for readability
  const chunks = [];
  for (let i = 0; i < hex.length; i += 64) {
    chunks.push(hex.slice(i, i + 64));
  }

  return chunks;
};

export const formatStorage = (
  storage: Record<string, string>,
): { key: string; value: string }[] => {
  return Object.entries(storage).map(([key, value]) => ({
    key,
    value,
  }));
};
