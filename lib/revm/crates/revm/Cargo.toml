[package]
authors = ["Dragan Rakita <dragan0rakita@gmail.com>"]
description = "REVM - Rust Ethereum Virtual Machine"
edition = "2021"
keywords = ["no_std", "ethereum", "evm", "revm"]
license = "MIT"
name = "revm"
repository = "https://github.com/bluealloy/revm"
version = "3.4.0"
readme = "../../README.md"

[dependencies]
revm-interpreter = { path = "../interpreter", version = "1.2.0", default-features = false }
revm-precompile = { path = "../precompile", version = "2.1.0", default-features = false }

#misc
auto_impl = { version = "1.1", default-features = false }

# Optional
serde = { version = "1.0", features = ["derive", "rc"], optional = true }
serde_json = { version = "1.0", features = ["preserve_order"], optional = true }

# ethersdb
tokio = { version = "1.32", features = [
    "rt-multi-thread",
    "macros",
], optional = true }
ethers-providers = { version = "2.0", optional = true }
ethers-core = { version = "2.0", optional = true }
futures = { version = "0.3.27", optional = true }

[dev-dependencies]
hex-literal = "0.4"
ethers-contract = { version = "2.0.10", default-features = false }
hex = "0.4.3"
anyhow = "1.0.75"
bytes = "1.5.0"
criterion = "0.5"

[features]
default = ["std", "c-kzg", "secp256k1"]
std = ["revm-interpreter/std", "revm-precompile/std"]
serde = ["dep:serde", "dep:serde_json", "revm-interpreter/serde"]
arbitrary = ["revm-interpreter/arbitrary"]

ethersdb = ["std", "tokio", "futures", "ethers-providers", "ethers-core"]

dev = [
    "memory_limit",
    "optional_balance_check",
    "optional_block_gas_limit",
    "optional_eip3607",
    "optional_gas_refund",
    "optional_no_base_fee",
]
memory_limit = ["revm-interpreter/memory_limit"]
no_gas_measuring = ["revm-interpreter/no_gas_measuring"]
optional_balance_check = ["revm-interpreter/optional_balance_check"]
optional_block_gas_limit = ["revm-interpreter/optional_block_gas_limit"]
optional_eip3607 = ["revm-interpreter/optional_eip3607"]
optional_gas_refund = ["revm-interpreter/optional_gas_refund"]
optional_no_base_fee = ["revm-interpreter/optional_no_base_fee"]

# See comments in `revm-precompile`
secp256k1 = ["revm-precompile/secp256k1"]
c-kzg = ["revm-precompile/c-kzg"]

# deprecated features
web3db = []
with-serde = []
optimism = ["revm-interpreter/optimism", "revm-precompile/optimism"]

[[example]]
name = "fork_ref_transact"
path = "../../examples/fork_ref_transact.rs"
required-features = ["ethersdb"]

[[bench]]
name = "bench"
path = "benches/bench.rs"
harness = false
