{"version":3,"sources":["../../src/viem/tevmViemExtension.js","../../src/viem/tevmViemExtensionOptimistic.ts"],"names":["parse","stringify"],"mappings":"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","sourcesContent":["import { parse, stringify } from 'superjson'\n\n/**\n * @type {import('./types.js').ViemTevmExtension}\n */\nexport const tevmViemExtension = () => {\n\treturn (client) => {\n\t\t/**\n\t\t * @type {import('./types.js').ViemTevmClient['tevmRequest']}\n\t\t */\n\t\tconst tevmRequest = async (request) => {\n\t\t\treturn /** @type {any} */ (\n\t\t\t\tparse(\n\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\tawait client.request({\n\t\t\t\t\t\t\tmethod: /** @type {any}*/ (request.method),\n\t\t\t\t\t\t\tparams: /** @type {any}*/ (JSON.parse(stringify(request.params))),\n\t\t\t\t\t\t}),\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t)\n\t\t}\n\t\treturn {\n\t\t\ttevmRequest,\n\t\t\trunScript: async (action) => {\n\t\t\t\treturn /** @type {any} */ (\n\t\t\t\t\ttevmRequest({\n\t\t\t\t\t\tmethod: 'tevm_script',\n\t\t\t\t\t\tparams: /** @type any*/ (action),\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t},\n\t\t\tputAccount: async (action) => {\n\t\t\t\treturn tevmRequest({\n\t\t\t\t\tmethod: 'tevm_putAccount',\n\t\t\t\t\tparams: action,\n\t\t\t\t})\n\t\t\t},\n\t\t\tputContractCode: async (action) => {\n\t\t\t\treturn tevmRequest({\n\t\t\t\t\tmethod: 'tevm_putContractCode',\n\t\t\t\t\tparams: action,\n\t\t\t\t})\n\t\t\t},\n\t\t\trunCall: async (action) => {\n\t\t\t\treturn tevmRequest({\n\t\t\t\t\tmethod: 'tevm_call',\n\t\t\t\t\tparams: action,\n\t\t\t\t})\n\t\t\t},\n\t\t\trunContractCall: async (action) => {\n\t\t\t\treturn /** @type {any} */ (\n\t\t\t\t\ttevmRequest({\n\t\t\t\t\t\tmethod: 'tevm_contractCall',\n\t\t\t\t\t\tparams: /** @type {any}*/ (action),\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t},\n\t\t}\n\t}\n}\n","import type { OptimisticResult, TypedError, ViemTevmClient } from './types.js'\nimport type { Abi } from 'abitype'\nimport { parse, stringify } from 'superjson'\nimport type {\n\tAccount,\n\tChain,\n\tHex,\n\tTransport,\n\tWriteContractParameters,\n} from 'viem'\nimport { waitForTransactionReceipt } from 'viem/actions'\n\nexport const tevmViemExtensionOptimistic = () => {\n\tconst decorator = <\n\t\tTTransport extends Transport = Transport,\n\t\tTChain extends Chain | undefined = Chain | undefined,\n\t\tTAccount extends Account | undefined = Account | undefined,\n\t>(\n\t\tclient: Pick<\n\t\t\timport('viem').WalletClient<TTransport, TChain, TAccount>,\n\t\t\t'request' | 'writeContract'\n\t\t>,\n\t) => {\n\t\treturn {\n\t\t\twriteContractOptimistic: async function* <\n\t\t\t\tTAbi extends Abi | readonly unknown[] = Abi,\n\t\t\t\tTFunctionName extends string = string,\n\t\t\t\tTChainOverride extends Chain | undefined = Chain | undefined,\n\t\t\t>(\n\t\t\t\taction: WriteContractParameters<\n\t\t\t\t\tTAbi,\n\t\t\t\t\tTFunctionName,\n\t\t\t\t\tTChain,\n\t\t\t\t\tTAccount,\n\t\t\t\t\tTChainOverride\n\t\t\t\t>,\n\t\t\t): AsyncGenerator<OptimisticResult<TAbi, TFunctionName, TChain>> {\n\t\t\t\t/**\n\t\t\t\t * @type {Array<import('./types.js').TypedError<string>>}\n\t\t\t\t */\n\t\t\t\tconst errors: TypedError<string>[] = []\n\t\t\t\tconst getErrorsIfExist = () => (errors.length > 0 ? { errors } : {})\n\t\t\t\tconst tevmRequest: ViemTevmClient['tevmRequest'] = async (request) => {\n\t\t\t\t\treturn parse(\n\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\tawait client.request({\n\t\t\t\t\t\t\t\tmethod: request.method as any,\n\t\t\t\t\t\t\t\tparams: JSON.parse(stringify(request.params)),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\tconst writeContractResult = client.writeContract(action)\n\t\t\t\tconst optimisticResult = tevmRequest({\n\t\t\t\t\tmethod: 'tevm_contractCall',\n\t\t\t\t\tparams: /** @type {any}*/ (action as any),\n\t\t\t\t})\n\n\t\t\t\ttry {\n\t\t\t\t\tyield {\n\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t\ttag: 'OPTIMISTIC_RESULT',\n\t\t\t\t\t\tdata: /** @type {any}*/ (await optimisticResult),\n\t\t\t\t\t\t...getErrorsIfExist(),\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\terrors.push(/** @type {any}*/ (error as any))\n\t\t\t\t\tyield {\n\t\t\t\t\t\tsuccess: false,\n\t\t\t\t\t\ttag: 'OPTIMISTIC_RESULT',\n\t\t\t\t\t\terror: /** @type {any} */ error as any,\n\t\t\t\t\t\t...getErrorsIfExist(),\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * @type {import('viem').Hex | undefined}\n\t\t\t\t **/\n\t\t\t\tlet hash: Hex | undefined = undefined\n\t\t\t\ttry {\n\t\t\t\t\thash = await writeContractResult\n\t\t\t\t\tyield {\n\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t\ttag: 'HASH',\n\t\t\t\t\t\tdata: /** @type {any}*/ hash,\n\t\t\t\t\t\t...getErrorsIfExist(),\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\terrors.push(/** @type {any}*/ (error as any))\n\t\t\t\t\tyield {\n\t\t\t\t\t\tsuccess: false,\n\t\t\t\t\t\ttag: 'HASH',\n\t\t\t\t\t\terror: /** @type {any}*/ error as any,\n\t\t\t\t\t\t...getErrorsIfExist(),\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hash) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst receipt = await waitForTransactionReceipt(\n\t\t\t\t\t\t\t/** @type{any}*/ (client as any),\n\t\t\t\t\t\t\t{ hash },\n\t\t\t\t\t\t)\n\t\t\t\t\t\tyield {\n\t\t\t\t\t\t\tsuccess: true,\n\t\t\t\t\t\t\ttag: 'RECEIPT',\n\t\t\t\t\t\t\tdata: /** @type {any} */ (receipt as any),\n\t\t\t\t\t\t\t...getErrorsIfExist(),\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\terrors.push(/** @type {any}*/ (error as any))\n\t\t\t\t\t\tyield {\n\t\t\t\t\t\t\tsuccess: false,\n\t\t\t\t\t\t\ttag: 'RECEIPT',\n\t\t\t\t\t\t\terror: /** @type {any} */ (error as any),\n\t\t\t\t\t\t\terrors,\n\t\t\t\t\t\t\t...getErrorsIfExist(),\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn\n\t\t\t},\n\t\t}\n\t}\n\treturn decorator\n}\n"]}