/// Generated file. Do not edit.

import { createScript } from '@tevm/contract'
import { type Hex } from '@tevm/utils'

/**
 * Creates a DisputeGameFactory contract instance from a chainId
 * Currently only supports chainId 10
 * @example
 * import { createDisputeGameFactory } from '@tevm/opstack'
 * const DisputeGameFactory = createDisputeGameFactory()
 */
export const createDisputeGameFactory = (chainId: 10 = 10) =>
	createScript({
		name: 'DisputeGameFactory',
		deployedBytecode: DisputeGameFactoryDeployedBytecode,
		bytecode: DisputeGameFactoryBytecode,
		humanReadableAbi: DisputeGameFactoryHumanReadableAbi,
	}).withAddress(DisputeGameFactoryAddresses[chainId])

export const DisputeGameFactoryAddresses = {
	'10': '0x6901690169016901690169016901690169016901',
} as const

export const DisputeGameFactoryBytecode =
	'0x60806040523480156200001157600080fd5b506200001e600062000024565b62000292565b600054610100900460ff1615808015620000455750600054600160ff909116105b8062000075575062000062306200016260201b62000cc91760201c565b15801562000075575060005460ff166001145b620000de5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000102576000805461ff0019166101001790555b6200010c62000171565b6200011782620001d9565b80156200015e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6001600160a01b03163b151590565b600054610100900460ff16620001cd5760405162461bcd60e51b815260206004820152602b6024820152600080516020620017e683398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000d5565b620001d76200022b565b565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620002875760405162461bcd60e51b815260206004820152602b6024820152600080516020620017e683398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000d5565b620001d733620001d9565b61154480620002a26000396000f3fe6080604052600436106100e85760003560e01c80636593dc6e1161008a57806396cd97201161005957806396cd972014610313578063bb8aa1fc14610333578063c4d66de814610394578063f2fde38b146103b457600080fd5b80636593dc6e14610293578063715018a6146102c057806382ecf2f6146102d55780638da5cb5b146102e857600080fd5b8063254bd683116100c6578063254bd6831461019c5780634d1975b4146101c957806354fd4d50146101e85780635f0150cb1461023e57600080fd5b806314f6b1a3146100ed5780631b685b9e1461010f5780631e3342401461017c575b600080fd5b3480156100f957600080fd5b5061010d610108366004611086565b6103d4565b005b34801561011b57600080fd5b5061015261012a3660046110bd565b60656020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561018857600080fd5b5061010d6101973660046110d8565b61045e565b3480156101a857600080fd5b506101bc6101b7366004611102565b6104aa565b60405161017391906111af565b3480156101d557600080fd5b506068545b604051908152602001610173565b3480156101f457600080fd5b506102316040518060400160405280600581526020017f302e312e3000000000000000000000000000000000000000000000000000000081525081565b604051610173919061126c565b34801561024a57600080fd5b5061025e61025936600461127f565b6106ee565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835267ffffffffffffffff909116602083015201610173565b34801561029f57600080fd5b506101da6102ae3660046110bd565b60666020526000908152604090205481565b3480156102cc57600080fd5b5061010d610741565b6101526102e336600461127f565b610755565b3480156102f457600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff16610152565b34801561031f57600080fd5b506101da61032e36600461127f565b6109db565b34801561033f57600080fd5b5061035361034e366004611306565b610a14565b6040805163ffffffff909416845267ffffffffffffffff909216602084015273ffffffffffffffffffffffffffffffffffffffff1690820152606001610173565b3480156103a057600080fd5b5061010d6103af36600461131f565b610a76565b3480156103c057600080fd5b5061010d6103cf36600461131f565b610c12565b6103dc610ce5565b63ffffffff821660008181526065602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8616908117909155905190917fff513d80e2c7fa487608f70a618dfbc0cf415699dc69588c747e8c71566c88de91a35050565b610466610ce5565b63ffffffff8216600081815260666020526040808220849055518392917f74d6665c4b26d5596a5aa13d3014e0c06af4d322075a797f87b03cd4c5bc91ca91a35050565b606854606090831015806104bc575081155b6106e7575060408051600583901b8101602001909152825b8381116106e5576000606882815481106104f0576104f061133c565b600091825260209091200154905060e081901c67ffffffffffffffff60a083901c1673ffffffffffffffffffffffffffffffffffffffff831660ff808a16908416036106b6576001865101865260008173ffffffffffffffffffffffffffffffffffffffff1663609d33346040518163ffffffff1660e01b8152600401600060405180830381865afa15801561058a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105d0919081019061139a565b905060008273ffffffffffffffffffffffffffffffffffffffff1663bcef3b556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190611465565b90506040518060a001604052808881526020018781526020018567ffffffffffffffff168152602001828152602001838152508860018a51610685919061147e565b815181106106955761069561133c565b6020026020010181905250888851106106b3575050505050506106e5565b50505b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191506104d49050565b505b9392505050565b60008060006106ff878787876109db565b60009081526067602052604090205473ffffffffffffffffffffffffffffffffffffffff81169860a09190911c67ffffffffffffffff16975095505050505050565b610749610ce5565b6107536000610d66565b565b63ffffffff841660009081526065602052604081205473ffffffffffffffffffffffffffffffffffffffff16806107c5576040517f031c6de400000000000000000000000000000000000000000000000000000000815263ffffffff871660048201526024015b60405180910390fd5b63ffffffff8616600090815260666020526040902054341015610814576040517fe92c469f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61087785858560405160200161082c939291906114bc565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905273ffffffffffffffffffffffffffffffffffffffff831690610ddd565b91508173ffffffffffffffffffffffffffffffffffffffff16638129fc1c346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156108c157600080fd5b505af11580156108d5573d6000803e3d6000fd5b505050505060006108e8878787876109db565b60008181526067602052604090205490915015610934576040517f014f6fe5000000000000000000000000000000000000000000000000000000008152600481018290526024016107bc565b60004260a01b60e089901b178417600083815260676020526040808220839055606880546001810182559083527fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977530183905551919250889163ffffffff8b169173ffffffffffffffffffffffffffffffffffffffff8816917f5b565efe82411da98814f356d0e7bcb8f0219b8d970307c5afb4a6903a8b2e359190a4505050949350505050565b6000848484846040516020016109f494939291906114d6565b604051602081830303815290604052805190602001209050949350505050565b6000806000610a6960688581548110610a2f57610a2f61133c565b906000526020600020015460e081901c9160a082901c67ffffffffffffffff169173ffffffffffffffffffffffffffffffffffffffff1690565b9196909550909350915050565b600054610100900460ff1615808015610a965750600054600160ff909116105b80610ab05750303b158015610ab0575060005460ff166001145b610b3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016107bc565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610b9a57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610ba2610f11565b610bab82610d66565b8015610c0e57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b610c1a610ce5565b73ffffffffffffffffffffffffffffffffffffffff8116610cbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107bc565b610cc681610d66565b50565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b60335473ffffffffffffffffffffffffffffffffffffffff163314610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107bc565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006002825101603f8101600a81036040518360581b8260e81b177f6100003d81600a3d39f3363d3d373d3d3d3d610000806035363936013d7300001781528660601b601e8201527f5af43d3d93803e603357fd5bf300000000000000000000000000000000000000603282015285519150603f8101602087015b60208410610e9557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09093019260209182019101610e58565b517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602085900360031b1b16815260f085901b9083015282816000f0945084610f02577febfef1880000000000000000000000000000000000000000000000000000000060005260206000fd5b90910160405250909392505050565b600054610100900460ff16610fa8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016107bc565b610753600054610100900460ff16611042576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016107bc565b61075333610d66565b803563ffffffff8116811461105f57600080fd5b919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610cc657600080fd5b6000806040838503121561109957600080fd5b6110a28361104b565b915060208301356110b281611064565b809150509250929050565b6000602082840312156110cf57600080fd5b6106e78261104b565b600080604083850312156110eb57600080fd5b6110f48361104b565b946020939093013593505050565b60008060006060848603121561111757600080fd5b6111208461104b565b95602085013595506040909401359392505050565b60005b83811015611150578181015183820152602001611138565b8381111561115f576000848401525b50505050565b6000815180845261117d816020860160208601611135565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561125e578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001855281518051845287810151888501528681015167ffffffffffffffff16878501526060808201519085015260809081015160a09185018290529061124a81860183611165565b9689019694505050908601906001016111d6565b509098975050505050505050565b6020815260006106e76020830184611165565b6000806000806060858703121561129557600080fd5b61129e8561104b565b935060208501359250604085013567ffffffffffffffff808211156112c257600080fd5b818701915087601f8301126112d657600080fd5b8135818111156112e557600080fd5b8860208285010111156112f757600080fd5b95989497505060200194505050565b60006020828403121561131857600080fd5b5035919050565b60006020828403121561133157600080fd5b81356106e781611064565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156113ac57600080fd5b815167ffffffffffffffff808211156113c457600080fd5b818401915084601f8301126113d857600080fd5b8151818111156113ea576113ea61136b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156114305761143061136b565b8160405282815287602084870101111561144957600080fd5b61145a836020830160208801611135565b979650505050505050565b60006020828403121561147757600080fd5b5051919050565b6000828210156114b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b838152818360208301376000910160200190815292915050565b63ffffffff8516815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101939250505056fea164736f6c634300080f000a496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069' as Hex

export const DisputeGameFactoryDeployedBytecode =
	'0x6080604052600436106100e85760003560e01c80636593dc6e1161008a57806396cd97201161005957806396cd972014610313578063bb8aa1fc14610333578063c4d66de814610394578063f2fde38b146103b457600080fd5b80636593dc6e14610293578063715018a6146102c057806382ecf2f6146102d55780638da5cb5b146102e857600080fd5b8063254bd683116100c6578063254bd6831461019c5780634d1975b4146101c957806354fd4d50146101e85780635f0150cb1461023e57600080fd5b806314f6b1a3146100ed5780631b685b9e1461010f5780631e3342401461017c575b600080fd5b3480156100f957600080fd5b5061010d610108366004611086565b6103d4565b005b34801561011b57600080fd5b5061015261012a3660046110bd565b60656020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561018857600080fd5b5061010d6101973660046110d8565b61045e565b3480156101a857600080fd5b506101bc6101b7366004611102565b6104aa565b60405161017391906111af565b3480156101d557600080fd5b506068545b604051908152602001610173565b3480156101f457600080fd5b506102316040518060400160405280600581526020017f302e312e3000000000000000000000000000000000000000000000000000000081525081565b604051610173919061126c565b34801561024a57600080fd5b5061025e61025936600461127f565b6106ee565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835267ffffffffffffffff909116602083015201610173565b34801561029f57600080fd5b506101da6102ae3660046110bd565b60666020526000908152604090205481565b3480156102cc57600080fd5b5061010d610741565b6101526102e336600461127f565b610755565b3480156102f457600080fd5b5060335473ffffffffffffffffffffffffffffffffffffffff16610152565b34801561031f57600080fd5b506101da61032e36600461127f565b6109db565b34801561033f57600080fd5b5061035361034e366004611306565b610a14565b6040805163ffffffff909416845267ffffffffffffffff909216602084015273ffffffffffffffffffffffffffffffffffffffff1690820152606001610173565b3480156103a057600080fd5b5061010d6103af36600461131f565b610a76565b3480156103c057600080fd5b5061010d6103cf36600461131f565b610c12565b6103dc610ce5565b63ffffffff821660008181526065602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8616908117909155905190917fff513d80e2c7fa487608f70a618dfbc0cf415699dc69588c747e8c71566c88de91a35050565b610466610ce5565b63ffffffff8216600081815260666020526040808220849055518392917f74d6665c4b26d5596a5aa13d3014e0c06af4d322075a797f87b03cd4c5bc91ca91a35050565b606854606090831015806104bc575081155b6106e7575060408051600583901b8101602001909152825b8381116106e5576000606882815481106104f0576104f061133c565b600091825260209091200154905060e081901c67ffffffffffffffff60a083901c1673ffffffffffffffffffffffffffffffffffffffff831660ff808a16908416036106b6576001865101865260008173ffffffffffffffffffffffffffffffffffffffff1663609d33346040518163ffffffff1660e01b8152600401600060405180830381865afa15801561058a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105d0919081019061139a565b905060008273ffffffffffffffffffffffffffffffffffffffff1663bcef3b556040518163ffffffff1660e01b8152600401602060405180830381865afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190611465565b90506040518060a001604052808881526020018781526020018567ffffffffffffffff168152602001828152602001838152508860018a51610685919061147e565b815181106106955761069561133c565b6020026020010181905250888851106106b3575050505050506106e5565b50505b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191506104d49050565b505b9392505050565b60008060006106ff878787876109db565b60009081526067602052604090205473ffffffffffffffffffffffffffffffffffffffff81169860a09190911c67ffffffffffffffff16975095505050505050565b610749610ce5565b6107536000610d66565b565b63ffffffff841660009081526065602052604081205473ffffffffffffffffffffffffffffffffffffffff16806107c5576040517f031c6de400000000000000000000000000000000000000000000000000000000815263ffffffff871660048201526024015b60405180910390fd5b63ffffffff8616600090815260666020526040902054341015610814576040517fe92c469f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61087785858560405160200161082c939291906114bc565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905273ffffffffffffffffffffffffffffffffffffffff831690610ddd565b91508173ffffffffffffffffffffffffffffffffffffffff16638129fc1c346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156108c157600080fd5b505af11580156108d5573d6000803e3d6000fd5b505050505060006108e8878787876109db565b60008181526067602052604090205490915015610934576040517f014f6fe5000000000000000000000000000000000000000000000000000000008152600481018290526024016107bc565b60004260a01b60e089901b178417600083815260676020526040808220839055606880546001810182559083527fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977530183905551919250889163ffffffff8b169173ffffffffffffffffffffffffffffffffffffffff8816917f5b565efe82411da98814f356d0e7bcb8f0219b8d970307c5afb4a6903a8b2e359190a4505050949350505050565b6000848484846040516020016109f494939291906114d6565b604051602081830303815290604052805190602001209050949350505050565b6000806000610a6960688581548110610a2f57610a2f61133c565b906000526020600020015460e081901c9160a082901c67ffffffffffffffff169173ffffffffffffffffffffffffffffffffffffffff1690565b9196909550909350915050565b600054610100900460ff1615808015610a965750600054600160ff909116105b80610ab05750303b158015610ab0575060005460ff166001145b610b3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016107bc565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558015610b9a57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b610ba2610f11565b610bab82610d66565b8015610c0e57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b610c1a610ce5565b73ffffffffffffffffffffffffffffffffffffffff8116610cbd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107bc565b610cc681610d66565b50565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b60335473ffffffffffffffffffffffffffffffffffffffff163314610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107bc565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006002825101603f8101600a81036040518360581b8260e81b177f6100003d81600a3d39f3363d3d373d3d3d3d610000806035363936013d7300001781528660601b601e8201527f5af43d3d93803e603357fd5bf300000000000000000000000000000000000000603282015285519150603f8101602087015b60208410610e9557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09093019260209182019101610e58565b517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602085900360031b1b16815260f085901b9083015282816000f0945084610f02577febfef1880000000000000000000000000000000000000000000000000000000060005260206000fd5b90910160405250909392505050565b600054610100900460ff16610fa8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016107bc565b610753600054610100900460ff16611042576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016107bc565b61075333610d66565b803563ffffffff8116811461105f57600080fd5b919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610cc657600080fd5b6000806040838503121561109957600080fd5b6110a28361104b565b915060208301356110b281611064565b809150509250929050565b6000602082840312156110cf57600080fd5b6106e78261104b565b600080604083850312156110eb57600080fd5b6110f48361104b565b946020939093013593505050565b60008060006060848603121561111757600080fd5b6111208461104b565b95602085013595506040909401359392505050565b60005b83811015611150578181015183820152602001611138565b8381111561115f576000848401525b50505050565b6000815180845261117d816020860160208601611135565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561125e578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc001855281518051845287810151888501528681015167ffffffffffffffff16878501526060808201519085015260809081015160a09185018290529061124a81860183611165565b9689019694505050908601906001016111d6565b509098975050505050505050565b6020815260006106e76020830184611165565b6000806000806060858703121561129557600080fd5b61129e8561104b565b935060208501359250604085013567ffffffffffffffff808211156112c257600080fd5b818701915087601f8301126112d657600080fd5b8135818111156112e557600080fd5b8860208285010111156112f757600080fd5b95989497505060200194505050565b60006020828403121561131857600080fd5b5035919050565b60006020828403121561133157600080fd5b81356106e781611064565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156113ac57600080fd5b815167ffffffffffffffff808211156113c457600080fd5b818401915084601f8301126113d857600080fd5b8151818111156113ea576113ea61136b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156114305761143061136b565b8160405282815287602084870101111561144957600080fd5b61145a836020830160208801611135565b979650505050505050565b60006020828403121561147757600080fd5b5051919050565b6000828210156114b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b838152818360208301376000910160200190815292915050565b63ffffffff8516815283602082015260606040820152816060820152818360808301376000818301608090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101939250505056fea164736f6c634300080f000a' as Hex

export const DisputeGameFactoryHumanReadableAbi = [
	'constructor()',
	'function create(uint32 _gameType, bytes32 _rootClaim, bytes _extraData) payable returns (address proxy_)',
	'function findLatestGames(uint32 _gameType, uint256 _start, uint256 _n) view returns ((uint256 index, bytes32 metadata, uint64 timestamp, bytes32 rootClaim, bytes extraData)[] games_)',
	'function gameAtIndex(uint256 _index) view returns (uint32 gameType_, uint64 timestamp_, address proxy_)',
	'function gameCount() view returns (uint256 gameCount_)',
	'function gameImpls(uint32) view returns (address)',
	'function games(uint32 _gameType, bytes32 _rootClaim, bytes _extraData) view returns (address proxy_, uint64 timestamp_)',
	'function getGameUUID(uint32 _gameType, bytes32 _rootClaim, bytes _extraData) pure returns (bytes32 uuid_)',
	'function initBonds(uint32) view returns (uint256)',
	'function initialize(address _owner)',
	'function owner() view returns (address)',
	'function renounceOwnership()',
	'function setImplementation(uint32 _gameType, address _impl)',
	'function setInitBond(uint32 _gameType, uint256 _initBond)',
	'function transferOwnership(address newOwner)',
	'function version() view returns (string)',
	'event DisputeGameCreated(address indexed disputeProxy, uint32 indexed gameType, bytes32 indexed rootClaim)',
	'event ImplementationSet(address indexed impl, uint32 indexed gameType)',
	'event InitBondUpdated(uint32 indexed gameType, uint256 indexed newBond)',
	'event Initialized(uint8 version)',
	'event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)',
	'error GameAlreadyExists(bytes32 uuid)',
	'error InsufficientBond()',
	'error NoImplementation(uint32 gameType)',
] as const

export const DisputeGameFactoryAbi = [
	{
		type: 'constructor',
		inputs: [],
		stateMutability: 'nonpayable',
	},
	{
		type: 'function',
		name: 'create',
		inputs: [
			{
				name: '_gameType',
				type: 'uint32',
				internalType: 'GameType',
			},
			{
				name: '_rootClaim',
				type: 'bytes32',
				internalType: 'Claim',
			},
			{
				name: '_extraData',
				type: 'bytes',
				internalType: 'bytes',
			},
		],
		outputs: [
			{
				name: 'proxy_',
				type: 'address',
				internalType: 'contract IDisputeGame',
			},
		],
		stateMutability: 'payable',
	},
	{
		type: 'function',
		name: 'findLatestGames',
		inputs: [
			{
				name: '_gameType',
				type: 'uint32',
				internalType: 'GameType',
			},
			{
				name: '_start',
				type: 'uint256',
				internalType: 'uint256',
			},
			{
				name: '_n',
				type: 'uint256',
				internalType: 'uint256',
			},
		],
		outputs: [
			{
				name: 'games_',
				type: 'tuple[]',
				internalType: 'struct IDisputeGameFactory.GameSearchResult[]',
				components: [
					{
						name: 'index',
						type: 'uint256',
						internalType: 'uint256',
					},
					{
						name: 'metadata',
						type: 'bytes32',
						internalType: 'GameId',
					},
					{
						name: 'timestamp',
						type: 'uint64',
						internalType: 'Timestamp',
					},
					{
						name: 'rootClaim',
						type: 'bytes32',
						internalType: 'Claim',
					},
					{
						name: 'extraData',
						type: 'bytes',
						internalType: 'bytes',
					},
				],
			},
		],
		stateMutability: 'view',
	},
	{
		type: 'function',
		name: 'gameAtIndex',
		inputs: [
			{
				name: '_index',
				type: 'uint256',
				internalType: 'uint256',
			},
		],
		outputs: [
			{
				name: 'gameType_',
				type: 'uint32',
				internalType: 'GameType',
			},
			{
				name: 'timestamp_',
				type: 'uint64',
				internalType: 'Timestamp',
			},
			{
				name: 'proxy_',
				type: 'address',
				internalType: 'contract IDisputeGame',
			},
		],
		stateMutability: 'view',
	},
	{
		type: 'function',
		name: 'gameCount',
		inputs: [],
		outputs: [
			{
				name: 'gameCount_',
				type: 'uint256',
				internalType: 'uint256',
			},
		],
		stateMutability: 'view',
	},
	{
		type: 'function',
		name: 'gameImpls',
		inputs: [
			{
				name: '',
				type: 'uint32',
				internalType: 'GameType',
			},
		],
		outputs: [
			{
				name: '',
				type: 'address',
				internalType: 'contract IDisputeGame',
			},
		],
		stateMutability: 'view',
	},
	{
		type: 'function',
		name: 'games',
		inputs: [
			{
				name: '_gameType',
				type: 'uint32',
				internalType: 'GameType',
			},
			{
				name: '_rootClaim',
				type: 'bytes32',
				internalType: 'Claim',
			},
			{
				name: '_extraData',
				type: 'bytes',
				internalType: 'bytes',
			},
		],
		outputs: [
			{
				name: 'proxy_',
				type: 'address',
				internalType: 'contract IDisputeGame',
			},
			{
				name: 'timestamp_',
				type: 'uint64',
				internalType: 'Timestamp',
			},
		],
		stateMutability: 'view',
	},
	{
		type: 'function',
		name: 'getGameUUID',
		inputs: [
			{
				name: '_gameType',
				type: 'uint32',
				internalType: 'GameType',
			},
			{
				name: '_rootClaim',
				type: 'bytes32',
				internalType: 'Claim',
			},
			{
				name: '_extraData',
				type: 'bytes',
				internalType: 'bytes',
			},
		],
		outputs: [
			{
				name: 'uuid_',
				type: 'bytes32',
				internalType: 'Hash',
			},
		],
		stateMutability: 'pure',
	},
	{
		type: 'function',
		name: 'initBonds',
		inputs: [
			{
				name: '',
				type: 'uint32',
				internalType: 'GameType',
			},
		],
		outputs: [
			{
				name: '',
				type: 'uint256',
				internalType: 'uint256',
			},
		],
		stateMutability: 'view',
	},
	{
		type: 'function',
		name: 'initialize',
		inputs: [
			{
				name: '_owner',
				type: 'address',
				internalType: 'address',
			},
		],
		outputs: [],
		stateMutability: 'nonpayable',
	},
	{
		type: 'function',
		name: 'owner',
		inputs: [],
		outputs: [
			{
				name: '',
				type: 'address',
				internalType: 'address',
			},
		],
		stateMutability: 'view',
	},
	{
		type: 'function',
		name: 'renounceOwnership',
		inputs: [],
		outputs: [],
		stateMutability: 'nonpayable',
	},
	{
		type: 'function',
		name: 'setImplementation',
		inputs: [
			{
				name: '_gameType',
				type: 'uint32',
				internalType: 'GameType',
			},
			{
				name: '_impl',
				type: 'address',
				internalType: 'contract IDisputeGame',
			},
		],
		outputs: [],
		stateMutability: 'nonpayable',
	},
	{
		type: 'function',
		name: 'setInitBond',
		inputs: [
			{
				name: '_gameType',
				type: 'uint32',
				internalType: 'GameType',
			},
			{
				name: '_initBond',
				type: 'uint256',
				internalType: 'uint256',
			},
		],
		outputs: [],
		stateMutability: 'nonpayable',
	},
	{
		type: 'function',
		name: 'transferOwnership',
		inputs: [
			{
				name: 'newOwner',
				type: 'address',
				internalType: 'address',
			},
		],
		outputs: [],
		stateMutability: 'nonpayable',
	},
	{
		type: 'function',
		name: 'version',
		inputs: [],
		outputs: [
			{
				name: '',
				type: 'string',
				internalType: 'string',
			},
		],
		stateMutability: 'view',
	},
	{
		type: 'event',
		name: 'DisputeGameCreated',
		inputs: [
			{
				name: 'disputeProxy',
				type: 'address',
				indexed: true,
				internalType: 'address',
			},
			{
				name: 'gameType',
				type: 'uint32',
				indexed: true,
				internalType: 'GameType',
			},
			{
				name: 'rootClaim',
				type: 'bytes32',
				indexed: true,
				internalType: 'Claim',
			},
		],
		anonymous: false,
	},
	{
		type: 'event',
		name: 'ImplementationSet',
		inputs: [
			{
				name: 'impl',
				type: 'address',
				indexed: true,
				internalType: 'address',
			},
			{
				name: 'gameType',
				type: 'uint32',
				indexed: true,
				internalType: 'GameType',
			},
		],
		anonymous: false,
	},
	{
		type: 'event',
		name: 'InitBondUpdated',
		inputs: [
			{
				name: 'gameType',
				type: 'uint32',
				indexed: true,
				internalType: 'GameType',
			},
			{
				name: 'newBond',
				type: 'uint256',
				indexed: true,
				internalType: 'uint256',
			},
		],
		anonymous: false,
	},
	{
		type: 'event',
		name: 'Initialized',
		inputs: [
			{
				name: 'version',
				type: 'uint8',
				indexed: false,
				internalType: 'uint8',
			},
		],
		anonymous: false,
	},
	{
		type: 'event',
		name: 'OwnershipTransferred',
		inputs: [
			{
				name: 'previousOwner',
				type: 'address',
				indexed: true,
				internalType: 'address',
			},
			{
				name: 'newOwner',
				type: 'address',
				indexed: true,
				internalType: 'address',
			},
		],
		anonymous: false,
	},
	{
		type: 'error',
		name: 'GameAlreadyExists',
		inputs: [
			{
				name: 'uuid',
				type: 'bytes32',
				internalType: 'Hash',
			},
		],
	},
	{
		type: 'error',
		name: 'InsufficientBond',
		inputs: [],
	},
	{
		type: 'error',
		name: 'NoImplementation',
		inputs: [
			{
				name: 'gameType',
				type: 'uint32',
				internalType: 'GameType',
			},
		],
	},
] as const
