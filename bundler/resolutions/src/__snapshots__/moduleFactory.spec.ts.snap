// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`moduleFactory > should resolve correctly for case $s 1`] = `{}`;

exports[`moduleFactory > should resolve correctly for case $s 2`] = `
"{
  \\"id\\": \\"/bundler/resolutions/src/fixtures/basic/Contract.sol\\",
  \\"rawCode\\": \\"// SPDX-License-Identifier: MIT\\\\npragma solidity >0.8.16;\\\\n\\\\nimport \\\\\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\\\\";\\\\nimport \\\\\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\\\\";\\\\n// import \\\\\\"this shouldn't be imorted\\\\\\";\\\\n\\\\n/// @author Wagmi\\\\n/// @author EVMts\\\\n/// @title  WagmiMintExample\\\\n/// @notice An example token original from the wagmi template\\\\ncontract WagmiMintExample is ERC721 {\\\\n    uint256 public totalSupply;\\\\n\\\\n// import \\\\\\"@openzeppelin/contracts/utils/Base64.sol\\\\\\";\\\\n    uint256 private nextTokenId = 0;\\\\n\\\\n    constructor() ERC721(\\\\\\"wagmi\\\\\\", \\\\\\"WAGMI\\\\\\") {}\\\\n\\\\n    /// @notice Allows an address to mint\\\\n    function mint() external {\\\\n        uint256 tokenId = nextTokenId;\\\\n        while (_exists(tokenId)) {\\\\n            unchecked {\\\\n                tokenId++;\\\\n            }\\\\n        }\\\\n        _safeMint(msg.sender, tokenId);\\\\n        unchecked {\\\\n            totalSupply++;\\\\n            nextTokenId = tokenId + 1;\\\\n        }\\\\n    }\\\\n\\\\n    /// @notice Returns the token URI for a given token by ID\\\\n    /// @param tokenId Token ID to mint.\\\\n    function mint(uint256 tokenId) external {\\\\n        require(!_exists(tokenId), \\\\\\"Token ID is taken\\\\\\");\\\\n        _safeMint(msg.sender, tokenId);\\\\n        unchecked {\\\\n            totalSupply++;\\\\n        }\\\\n    }\\\\n\\\\n    /// @notice Returns the token URI for a given token by ID\\\\n    /// @param tokenId Token ID to query.\\\\n    /// @return uri_ Token URI for the given token by ID.\\\\n    function tokenURI(\\\\n        uint256 tokenId\\\\n    ) public pure override returns (string memory) {\\\\n        uint256 foregroundHue = uint256(\\\\n            keccak256(abi.encodePacked(\\\\\\"foreground\\\\\\", tokenId))\\\\n        ) % 360;\\\\n        uint256 backgroundHue = uint256(\\\\n            keccak256(abi.encodePacked(\\\\\\"background\\\\\\", tokenId))\\\\n        ) % 360;\\\\n        string memory json = Base64.encode(\\\\n            bytes(\\\\n                abi.encodePacked(\\\\n                    '{\\\\\\"name\\\\\\": \\\\\\"wagmi #',\\\\n                    toString(tokenId),\\\\n                    '\\\\\\", \\\\\\"image\\\\\\": \\\\\\"data:image/svg+xml;base64,',\\\\n                    Base64.encode(\\\\n                        bytes(\\\\n                            abi.encodePacked(\\\\n                                '<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" width=\\\\\\"1024\\\\\\" height=\\\\\\"1024\\\\\\" fill=\\\\\\"none\\\\\\"><path fill=\\\\\\"hsl(',\\\\n                                toString(foregroundHue),\\\\n                                ', 100%, 10%)\\\\\\" d=\\\\\\"M0 0h1024v1024H0z\\\\\\" /><g fill=\\\\\\"hsl(',\\\\n                                toString(backgroundHue),\\\\n                                ', 100%, 90%)\\\\\\"><path d=\\\\\\"M903 437.5c0 9.113-7.388 16.5-16.5 16.5s-16.5-7.387-16.5-16.5 7.388-16.5 16.5-16.5 16.5 7.387 16.5 16.5zM698.529 566c6.921 0 12.53-5.596 12.53-12.5v-50c0-6.904 5.609-12.5 12.529-12.5h25.059c6.92 0 12.529 5.596 12.529 12.5v50c0 6.904 5.609 12.5 12.53 12.5s12.529-5.596 12.529-12.5v-50c0-6.904 5.609-12.5 12.53-12.5h25.059c6.92 0 12.529 5.596 12.529 12.5v50c0 6.904 5.609 12.5 12.529 12.5h37.589c6.92 0 12.529-5.596 12.529-12.5v-75c0-6.904-5.609-12.5-12.529-12.5s-12.53 5.596-12.53 12.5v56.25a6.264 6.264 0 1 1-12.529 0V478.5c0-6.904-5.609-12.5-12.53-12.5H698.529c-6.92 0-12.529 5.596-12.529 12.5v75c0 6.904 5.609 12.5 12.529 12.5z\\\\\\" /><path d=\\\\\\"M157.655 541c-6.932 0-12.552-5.596-12.552-12.5v-50c0-6.904-5.619-12.5-12.551-12.5S120 471.596 120 478.5v75c0 6.904 5.62 12.5 12.552 12.5h150.62c6.933 0 12.552-5.596 12.552-12.5v-50c0-6.904 5.619-12.5 12.552-12.5h144.345c3.465 0 6.276 2.798 6.276 6.25s-2.811 6.25-6.276 6.25H320.828c-6.933 0-12.552 5.596-12.552 12.5v37.5c0 6.904 5.619 12.5 12.552 12.5h150.62c6.933 0 12.552-5.596 12.552-12.5v-75c0-6.904-5.619-12.5-12.552-12.5H283.172c-6.932 0-12.551 5.596-12.551 12.5v50c0 6.904-5.619 12.5-12.552 12.5h-25.103c-6.933 0-12.552-5.596-12.552-12.5v-50c0-6.904-5.62-12.5-12.552-12.5s-12.552 5.596-12.552 12.5v50c0 6.904-5.619 12.5-12.551 12.5h-25.104zm301.242-6.25c0 3.452-2.811 6.25-6.276 6.25H339.655c-3.465 0-6.276-2.798-6.276-6.25s2.811-6.25 6.276-6.25h112.966c3.465 0 6.276 2.798 6.276 6.25zM497 553.818c0 6.929 5.628 12.546 12.571 12.546h132a6.28 6.28 0 0 1 6.286 6.272 6.28 6.28 0 0 1-6.286 6.273h-132c-6.943 0-12.571 5.616-12.571 12.546A12.56 12.56 0 0 0 509.571 604h150.858c6.943 0 12.571-5.616 12.571-12.545v-112.91c0-6.928-5.628-12.545-12.571-12.545H509.571c-6.943 0-12.571 5.617-12.571 12.545v75.273zm37.714-62.727c-6.943 0-12.571 5.617-12.571 12.545v25.091c0 6.929 5.628 12.546 12.571 12.546h100.572c6.943 0 12.571-5.617 12.571-12.546v-25.091c0-6.928-5.628-12.545-12.571-12.545H534.714z\\\\\\" fill-rule=\\\\\\"evenodd\\\\\\" /></g></svg>'\\\\n                            )\\\\n                        )\\\\n                    ),\\\\n                    '\\\\\\"}'\\\\n                )\\\\n            )\\\\n        );\\\\n        string memory output = string(\\\\n            abi.encodePacked(\\\\\\"data:application/json;base64,\\\\\\", json)\\\\n        );\\\\n        return output;\\\\n    }\\\\n\\\\n    function toString(uint256 value) internal pure returns (string memory) {\\\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\\\n\\\\n        if (value == 0) {\\\\n            return \\\\\\"0\\\\\\";\\\\n        }\\\\n        uint256 temp = value;\\\\n        uint256 digits;\\\\n        while (temp != 0) {\\\\n            digits++;\\\\n            temp /= 10;\\\\n        }\\\\n        bytes memory buffer = new bytes(digits);\\\\n        while (value != 0) {\\\\n            digits -= 1;\\\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\\\n            value /= 10;\\\\n        }\\\\n        return string(buffer);\\\\n    }\\\\n}\\\\n\\",
  \\"importedIds\\": [
    \\"/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\",
    \\"/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\\"
  ],
  \\"code\\": \\"// SPDX-License-Identifier: MIT\\\\npragma solidity >0.8.16;\\\\n\\\\nimport \\\\\\"/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\\\\";\\\\nimport \\\\\\"/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\\\\\\";\\\\n// import \\\\\\"this shouldn't be imorted\\\\\\";\\\\n\\\\n/// @author Wagmi\\\\n/// @author EVMts\\\\n/// @title  WagmiMintExample\\\\n/// @notice An example token original from the wagmi template\\\\ncontract WagmiMintExample is ERC721 {\\\\n    uint256 public totalSupply;\\\\n\\\\n// import \\\\\\"@openzeppelin/contracts/utils/Base64.sol\\\\\\";\\\\n    uint256 private nextTokenId = 0;\\\\n\\\\n    constructor() ERC721(\\\\\\"wagmi\\\\\\", \\\\\\"WAGMI\\\\\\") {}\\\\n\\\\n    /// @notice Allows an address to mint\\\\n    function mint() external {\\\\n        uint256 tokenId = nextTokenId;\\\\n        while (_exists(tokenId)) {\\\\n            unchecked {\\\\n                tokenId++;\\\\n            }\\\\n        }\\\\n        _safeMint(msg.sender, tokenId);\\\\n        unchecked {\\\\n            totalSupply++;\\\\n            nextTokenId = tokenId + 1;\\\\n        }\\\\n    }\\\\n\\\\n    /// @notice Returns the token URI for a given token by ID\\\\n    /// @param tokenId Token ID to mint.\\\\n    function mint(uint256 tokenId) external {\\\\n        require(!_exists(tokenId), \\\\\\"Token ID is taken\\\\\\");\\\\n        _safeMint(msg.sender, tokenId);\\\\n        unchecked {\\\\n            totalSupply++;\\\\n        }\\\\n    }\\\\n\\\\n    /// @notice Returns the token URI for a given token by ID\\\\n    /// @param tokenId Token ID to query.\\\\n    /// @return uri_ Token URI for the given token by ID.\\\\n    function tokenURI(\\\\n        uint256 tokenId\\\\n    ) public pure override returns (string memory) {\\\\n        uint256 foregroundHue = uint256(\\\\n            keccak256(abi.encodePacked(\\\\\\"foreground\\\\\\", tokenId))\\\\n        ) % 360;\\\\n        uint256 backgroundHue = uint256(\\\\n            keccak256(abi.encodePacked(\\\\\\"background\\\\\\", tokenId))\\\\n        ) % 360;\\\\n        string memory json = Base64.encode(\\\\n            bytes(\\\\n                abi.encodePacked(\\\\n                    '{\\\\\\"name\\\\\\": \\\\\\"wagmi #',\\\\n                    toString(tokenId),\\\\n                    '\\\\\\", \\\\\\"image\\\\\\": \\\\\\"data:image/svg+xml;base64,',\\\\n                    Base64.encode(\\\\n                        bytes(\\\\n                            abi.encodePacked(\\\\n                                '<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" width=\\\\\\"1024\\\\\\" height=\\\\\\"1024\\\\\\" fill=\\\\\\"none\\\\\\"><path fill=\\\\\\"hsl(',\\\\n                                toString(foregroundHue),\\\\n                                ', 100%, 10%)\\\\\\" d=\\\\\\"M0 0h1024v1024H0z\\\\\\" /><g fill=\\\\\\"hsl(',\\\\n                                toString(backgroundHue),\\\\n                                ', 100%, 90%)\\\\\\"><path d=\\\\\\"M903 437.5c0 9.113-7.388 16.5-16.5 16.5s-16.5-7.387-16.5-16.5 7.388-16.5 16.5-16.5 16.5 7.387 16.5 16.5zM698.529 566c6.921 0 12.53-5.596 12.53-12.5v-50c0-6.904 5.609-12.5 12.529-12.5h25.059c6.92 0 12.529 5.596 12.529 12.5v50c0 6.904 5.609 12.5 12.53 12.5s12.529-5.596 12.529-12.5v-50c0-6.904 5.609-12.5 12.53-12.5h25.059c6.92 0 12.529 5.596 12.529 12.5v50c0 6.904 5.609 12.5 12.529 12.5h37.589c6.92 0 12.529-5.596 12.529-12.5v-75c0-6.904-5.609-12.5-12.529-12.5s-12.53 5.596-12.53 12.5v56.25a6.264 6.264 0 1 1-12.529 0V478.5c0-6.904-5.609-12.5-12.53-12.5H698.529c-6.92 0-12.529 5.596-12.529 12.5v75c0 6.904 5.609 12.5 12.529 12.5z\\\\\\" /><path d=\\\\\\"M157.655 541c-6.932 0-12.552-5.596-12.552-12.5v-50c0-6.904-5.619-12.5-12.551-12.5S120 471.596 120 478.5v75c0 6.904 5.62 12.5 12.552 12.5h150.62c6.933 0 12.552-5.596 12.552-12.5v-50c0-6.904 5.619-12.5 12.552-12.5h144.345c3.465 0 6.276 2.798 6.276 6.25s-2.811 6.25-6.276 6.25H320.828c-6.933 0-12.552 5.596-12.552 12.5v37.5c0 6.904 5.619 12.5 12.552 12.5h150.62c6.933 0 12.552-5.596 12.552-12.5v-75c0-6.904-5.619-12.5-12.552-12.5H283.172c-6.932 0-12.551 5.596-12.551 12.5v50c0 6.904-5.619 12.5-12.552 12.5h-25.103c-6.933 0-12.552-5.596-12.552-12.5v-50c0-6.904-5.62-12.5-12.552-12.5s-12.552 5.596-12.552 12.5v50c0 6.904-5.619 12.5-12.551 12.5h-25.104zm301.242-6.25c0 3.452-2.811 6.25-6.276 6.25H339.655c-3.465 0-6.276-2.798-6.276-6.25s2.811-6.25 6.276-6.25h112.966c3.465 0 6.276 2.798 6.276 6.25zM497 553.818c0 6.929 5.628 12.546 12.571 12.546h132a6.28 6.28 0 0 1 6.286 6.272 6.28 6.28 0 0 1-6.286 6.273h-132c-6.943 0-12.571 5.616-12.571 12.546A12.56 12.56 0 0 0 509.571 604h150.858c6.943 0 12.571-5.616 12.571-12.545v-112.91c0-6.928-5.628-12.545-12.571-12.545H509.571c-6.943 0-12.571 5.617-12.571 12.545v75.273zm37.714-62.727c-6.943 0-12.571 5.617-12.571 12.545v25.091c0 6.929 5.628 12.546 12.571 12.546h100.572c6.943 0 12.571-5.617 12.571-12.546v-25.091c0-6.928-5.628-12.545-12.571-12.545H534.714z\\\\\\" fill-rule=\\\\\\"evenodd\\\\\\" /></g></svg>'\\\\n                            )\\\\n                        )\\\\n                    ),\\\\n                    '\\\\\\"}'\\\\n                )\\\\n            )\\\\n        );\\\\n        string memory output = string(\\\\n            abi.encodePacked(\\\\\\"data:application/json;base64,\\\\\\", json)\\\\n        );\\\\n        return output;\\\\n    }\\\\n\\\\n    function toString(uint256 value) internal pure returns (string memory) {\\\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\\\n\\\\n        if (value == 0) {\\\\n            return \\\\\\"0\\\\\\";\\\\n        }\\\\n        uint256 temp = value;\\\\n        uint256 digits;\\\\n        while (temp != 0) {\\\\n            digits++;\\\\n            temp /= 10;\\\\n        }\\\\n        bytes memory buffer = new bytes(digits);\\\\n        while (value != 0) {\\\\n            digits -= 1;\\\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\\\n            value /= 10;\\\\n        }\\\\n        return string(buffer);\\\\n    }\\\\n}\\\\n\\"
}"
`;

exports[`moduleFactory > should resolve correctly for case $s 3`] = `{}`;

exports[`moduleFactory > should resolve correctly for case $s 4`] = `
"{
  \\"id\\": \\"/bundler/resolutions/src/fixtures/basic/Contract.sol\\",
  \\"rawCode\\": \\"// SPDX-License-Identifier: MIT\\\\npragma solidity >0.8.16;\\\\n\\\\nimport \\\\\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\\\\";\\\\nimport \\\\\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\\\\";\\\\n// import \\\\\\"this shouldn't be imorted\\\\\\";\\\\n\\\\n/// @author Wagmi\\\\n/// @author EVMts\\\\n/// @title  WagmiMintExample\\\\n/// @notice An example token original from the wagmi template\\\\ncontract WagmiMintExample is ERC721 {\\\\n    uint256 public totalSupply;\\\\n\\\\n// import \\\\\\"@openzeppelin/contracts/utils/Base64.sol\\\\\\";\\\\n    uint256 private nextTokenId = 0;\\\\n\\\\n    constructor() ERC721(\\\\\\"wagmi\\\\\\", \\\\\\"WAGMI\\\\\\") {}\\\\n\\\\n    /// @notice Allows an address to mint\\\\n    function mint() external {\\\\n        uint256 tokenId = nextTokenId;\\\\n        while (_exists(tokenId)) {\\\\n            unchecked {\\\\n                tokenId++;\\\\n            }\\\\n        }\\\\n        _safeMint(msg.sender, tokenId);\\\\n        unchecked {\\\\n            totalSupply++;\\\\n            nextTokenId = tokenId + 1;\\\\n        }\\\\n    }\\\\n\\\\n    /// @notice Returns the token URI for a given token by ID\\\\n    /// @param tokenId Token ID to mint.\\\\n    function mint(uint256 tokenId) external {\\\\n        require(!_exists(tokenId), \\\\\\"Token ID is taken\\\\\\");\\\\n        _safeMint(msg.sender, tokenId);\\\\n        unchecked {\\\\n            totalSupply++;\\\\n        }\\\\n    }\\\\n\\\\n    /// @notice Returns the token URI for a given token by ID\\\\n    /// @param tokenId Token ID to query.\\\\n    /// @return uri_ Token URI for the given token by ID.\\\\n    function tokenURI(\\\\n        uint256 tokenId\\\\n    ) public pure override returns (string memory) {\\\\n        uint256 foregroundHue = uint256(\\\\n            keccak256(abi.encodePacked(\\\\\\"foreground\\\\\\", tokenId))\\\\n        ) % 360;\\\\n        uint256 backgroundHue = uint256(\\\\n            keccak256(abi.encodePacked(\\\\\\"background\\\\\\", tokenId))\\\\n        ) % 360;\\\\n        string memory json = Base64.encode(\\\\n            bytes(\\\\n                abi.encodePacked(\\\\n                    '{\\\\\\"name\\\\\\": \\\\\\"wagmi #',\\\\n                    toString(tokenId),\\\\n                    '\\\\\\", \\\\\\"image\\\\\\": \\\\\\"data:image/svg+xml;base64,',\\\\n                    Base64.encode(\\\\n                        bytes(\\\\n                            abi.encodePacked(\\\\n                                '<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" width=\\\\\\"1024\\\\\\" height=\\\\\\"1024\\\\\\" fill=\\\\\\"none\\\\\\"><path fill=\\\\\\"hsl(',\\\\n                                toString(foregroundHue),\\\\n                                ', 100%, 10%)\\\\\\" d=\\\\\\"M0 0h1024v1024H0z\\\\\\" /><g fill=\\\\\\"hsl(',\\\\n                                toString(backgroundHue),\\\\n                                ', 100%, 90%)\\\\\\"><path d=\\\\\\"M903 437.5c0 9.113-7.388 16.5-16.5 16.5s-16.5-7.387-16.5-16.5 7.388-16.5 16.5-16.5 16.5 7.387 16.5 16.5zM698.529 566c6.921 0 12.53-5.596 12.53-12.5v-50c0-6.904 5.609-12.5 12.529-12.5h25.059c6.92 0 12.529 5.596 12.529 12.5v50c0 6.904 5.609 12.5 12.53 12.5s12.529-5.596 12.529-12.5v-50c0-6.904 5.609-12.5 12.53-12.5h25.059c6.92 0 12.529 5.596 12.529 12.5v50c0 6.904 5.609 12.5 12.529 12.5h37.589c6.92 0 12.529-5.596 12.529-12.5v-75c0-6.904-5.609-12.5-12.529-12.5s-12.53 5.596-12.53 12.5v56.25a6.264 6.264 0 1 1-12.529 0V478.5c0-6.904-5.609-12.5-12.53-12.5H698.529c-6.92 0-12.529 5.596-12.529 12.5v75c0 6.904 5.609 12.5 12.529 12.5z\\\\\\" /><path d=\\\\\\"M157.655 541c-6.932 0-12.552-5.596-12.552-12.5v-50c0-6.904-5.619-12.5-12.551-12.5S120 471.596 120 478.5v75c0 6.904 5.62 12.5 12.552 12.5h150.62c6.933 0 12.552-5.596 12.552-12.5v-50c0-6.904 5.619-12.5 12.552-12.5h144.345c3.465 0 6.276 2.798 6.276 6.25s-2.811 6.25-6.276 6.25H320.828c-6.933 0-12.552 5.596-12.552 12.5v37.5c0 6.904 5.619 12.5 12.552 12.5h150.62c6.933 0 12.552-5.596 12.552-12.5v-75c0-6.904-5.619-12.5-12.552-12.5H283.172c-6.932 0-12.551 5.596-12.551 12.5v50c0 6.904-5.619 12.5-12.552 12.5h-25.103c-6.933 0-12.552-5.596-12.552-12.5v-50c0-6.904-5.62-12.5-12.552-12.5s-12.552 5.596-12.552 12.5v50c0 6.904-5.619 12.5-12.551 12.5h-25.104zm301.242-6.25c0 3.452-2.811 6.25-6.276 6.25H339.655c-3.465 0-6.276-2.798-6.276-6.25s2.811-6.25 6.276-6.25h112.966c3.465 0 6.276 2.798 6.276 6.25zM497 553.818c0 6.929 5.628 12.546 12.571 12.546h132a6.28 6.28 0 0 1 6.286 6.272 6.28 6.28 0 0 1-6.286 6.273h-132c-6.943 0-12.571 5.616-12.571 12.546A12.56 12.56 0 0 0 509.571 604h150.858c6.943 0 12.571-5.616 12.571-12.545v-112.91c0-6.928-5.628-12.545-12.571-12.545H509.571c-6.943 0-12.571 5.617-12.571 12.545v75.273zm37.714-62.727c-6.943 0-12.571 5.617-12.571 12.545v25.091c0 6.929 5.628 12.546 12.571 12.546h100.572c6.943 0 12.571-5.617 12.571-12.546v-25.091c0-6.928-5.628-12.545-12.571-12.545H534.714z\\\\\\" fill-rule=\\\\\\"evenodd\\\\\\" /></g></svg>'\\\\n                            )\\\\n                        )\\\\n                    ),\\\\n                    '\\\\\\"}'\\\\n                )\\\\n            )\\\\n        );\\\\n        string memory output = string(\\\\n            abi.encodePacked(\\\\\\"data:application/json;base64,\\\\\\", json)\\\\n        );\\\\n        return output;\\\\n    }\\\\n\\\\n    function toString(uint256 value) internal pure returns (string memory) {\\\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\\\n\\\\n        if (value == 0) {\\\\n            return \\\\\\"0\\\\\\";\\\\n        }\\\\n        uint256 temp = value;\\\\n        uint256 digits;\\\\n        while (temp != 0) {\\\\n            digits++;\\\\n            temp /= 10;\\\\n        }\\\\n        bytes memory buffer = new bytes(digits);\\\\n        while (value != 0) {\\\\n            digits -= 1;\\\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\\\n            value /= 10;\\\\n        }\\\\n        return string(buffer);\\\\n    }\\\\n}\\\\n\\",
  \\"importedIds\\": [
    \\"/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\",
    \\"/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\\"
  ],
  \\"code\\": \\"// SPDX-License-Identifier: MIT\\\\npragma solidity >0.8.16;\\\\n\\\\nimport \\\\\\"/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\\\\\\";\\\\nimport \\\\\\"/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\\\\\\";\\\\n// import \\\\\\"this shouldn't be imorted\\\\\\";\\\\n\\\\n/// @author Wagmi\\\\n/// @author EVMts\\\\n/// @title  WagmiMintExample\\\\n/// @notice An example token original from the wagmi template\\\\ncontract WagmiMintExample is ERC721 {\\\\n    uint256 public totalSupply;\\\\n\\\\n// import \\\\\\"@openzeppelin/contracts/utils/Base64.sol\\\\\\";\\\\n    uint256 private nextTokenId = 0;\\\\n\\\\n    constructor() ERC721(\\\\\\"wagmi\\\\\\", \\\\\\"WAGMI\\\\\\") {}\\\\n\\\\n    /// @notice Allows an address to mint\\\\n    function mint() external {\\\\n        uint256 tokenId = nextTokenId;\\\\n        while (_exists(tokenId)) {\\\\n            unchecked {\\\\n                tokenId++;\\\\n            }\\\\n        }\\\\n        _safeMint(msg.sender, tokenId);\\\\n        unchecked {\\\\n            totalSupply++;\\\\n            nextTokenId = tokenId + 1;\\\\n        }\\\\n    }\\\\n\\\\n    /// @notice Returns the token URI for a given token by ID\\\\n    /// @param tokenId Token ID to mint.\\\\n    function mint(uint256 tokenId) external {\\\\n        require(!_exists(tokenId), \\\\\\"Token ID is taken\\\\\\");\\\\n        _safeMint(msg.sender, tokenId);\\\\n        unchecked {\\\\n            totalSupply++;\\\\n        }\\\\n    }\\\\n\\\\n    /// @notice Returns the token URI for a given token by ID\\\\n    /// @param tokenId Token ID to query.\\\\n    /// @return uri_ Token URI for the given token by ID.\\\\n    function tokenURI(\\\\n        uint256 tokenId\\\\n    ) public pure override returns (string memory) {\\\\n        uint256 foregroundHue = uint256(\\\\n            keccak256(abi.encodePacked(\\\\\\"foreground\\\\\\", tokenId))\\\\n        ) % 360;\\\\n        uint256 backgroundHue = uint256(\\\\n            keccak256(abi.encodePacked(\\\\\\"background\\\\\\", tokenId))\\\\n        ) % 360;\\\\n        string memory json = Base64.encode(\\\\n            bytes(\\\\n                abi.encodePacked(\\\\n                    '{\\\\\\"name\\\\\\": \\\\\\"wagmi #',\\\\n                    toString(tokenId),\\\\n                    '\\\\\\", \\\\\\"image\\\\\\": \\\\\\"data:image/svg+xml;base64,',\\\\n                    Base64.encode(\\\\n                        bytes(\\\\n                            abi.encodePacked(\\\\n                                '<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" width=\\\\\\"1024\\\\\\" height=\\\\\\"1024\\\\\\" fill=\\\\\\"none\\\\\\"><path fill=\\\\\\"hsl(',\\\\n                                toString(foregroundHue),\\\\n                                ', 100%, 10%)\\\\\\" d=\\\\\\"M0 0h1024v1024H0z\\\\\\" /><g fill=\\\\\\"hsl(',\\\\n                                toString(backgroundHue),\\\\n                                ', 100%, 90%)\\\\\\"><path d=\\\\\\"M903 437.5c0 9.113-7.388 16.5-16.5 16.5s-16.5-7.387-16.5-16.5 7.388-16.5 16.5-16.5 16.5 7.387 16.5 16.5zM698.529 566c6.921 0 12.53-5.596 12.53-12.5v-50c0-6.904 5.609-12.5 12.529-12.5h25.059c6.92 0 12.529 5.596 12.529 12.5v50c0 6.904 5.609 12.5 12.53 12.5s12.529-5.596 12.529-12.5v-50c0-6.904 5.609-12.5 12.53-12.5h25.059c6.92 0 12.529 5.596 12.529 12.5v50c0 6.904 5.609 12.5 12.529 12.5h37.589c6.92 0 12.529-5.596 12.529-12.5v-75c0-6.904-5.609-12.5-12.529-12.5s-12.53 5.596-12.53 12.5v56.25a6.264 6.264 0 1 1-12.529 0V478.5c0-6.904-5.609-12.5-12.53-12.5H698.529c-6.92 0-12.529 5.596-12.529 12.5v75c0 6.904 5.609 12.5 12.529 12.5z\\\\\\" /><path d=\\\\\\"M157.655 541c-6.932 0-12.552-5.596-12.552-12.5v-50c0-6.904-5.619-12.5-12.551-12.5S120 471.596 120 478.5v75c0 6.904 5.62 12.5 12.552 12.5h150.62c6.933 0 12.552-5.596 12.552-12.5v-50c0-6.904 5.619-12.5 12.552-12.5h144.345c3.465 0 6.276 2.798 6.276 6.25s-2.811 6.25-6.276 6.25H320.828c-6.933 0-12.552 5.596-12.552 12.5v37.5c0 6.904 5.619 12.5 12.552 12.5h150.62c6.933 0 12.552-5.596 12.552-12.5v-75c0-6.904-5.619-12.5-12.552-12.5H283.172c-6.932 0-12.551 5.596-12.551 12.5v50c0 6.904-5.619 12.5-12.552 12.5h-25.103c-6.933 0-12.552-5.596-12.552-12.5v-50c0-6.904-5.62-12.5-12.552-12.5s-12.552 5.596-12.552 12.5v50c0 6.904-5.619 12.5-12.551 12.5h-25.104zm301.242-6.25c0 3.452-2.811 6.25-6.276 6.25H339.655c-3.465 0-6.276-2.798-6.276-6.25s2.811-6.25 6.276-6.25h112.966c3.465 0 6.276 2.798 6.276 6.25zM497 553.818c0 6.929 5.628 12.546 12.571 12.546h132a6.28 6.28 0 0 1 6.286 6.272 6.28 6.28 0 0 1-6.286 6.273h-132c-6.943 0-12.571 5.616-12.571 12.546A12.56 12.56 0 0 0 509.571 604h150.858c6.943 0 12.571-5.616 12.571-12.545v-112.91c0-6.928-5.628-12.545-12.571-12.545H509.571c-6.943 0-12.571 5.617-12.571 12.545v75.273zm37.714-62.727c-6.943 0-12.571 5.617-12.571 12.545v25.091c0 6.929 5.628 12.546 12.571 12.546h100.572c6.943 0 12.571-5.617 12.571-12.546v-25.091c0-6.928-5.628-12.545-12.571-12.545H534.714z\\\\\\" fill-rule=\\\\\\"evenodd\\\\\\" /></g></svg>'\\\\n                            )\\\\n                        )\\\\n                    ),\\\\n                    '\\\\\\"}'\\\\n                )\\\\n            )\\\\n        );\\\\n        string memory output = string(\\\\n            abi.encodePacked(\\\\\\"data:application/json;base64,\\\\\\", json)\\\\n        );\\\\n        return output;\\\\n    }\\\\n\\\\n    function toString(uint256 value) internal pure returns (string memory) {\\\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\\\n\\\\n        if (value == 0) {\\\\n            return \\\\\\"0\\\\\\";\\\\n        }\\\\n        uint256 temp = value;\\\\n        uint256 digits;\\\\n        while (temp != 0) {\\\\n            digits++;\\\\n            temp /= 10;\\\\n        }\\\\n        bytes memory buffer = new bytes(digits);\\\\n        while (value != 0) {\\\\n            digits -= 1;\\\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\\\n            value /= 10;\\\\n        }\\\\n        return string(buffer);\\\\n    }\\\\n}\\\\n\\"
}"
`;

exports[`moduleFactory > should resolve correctly for case $s 5`] = `{}`;

exports[`moduleFactory > should resolve correctly for case $s 6`] = `
"{
  \\"id\\": \\"/bundler/resolutions/src/fixtures/withlib/Contract.sol\\",
  \\"rawCode\\": \\"// SPDX-License-Identifier: MIT\\\\npragma solidity >0.8.0;\\\\n\\\\nimport {BaseContract} from \\\\\\"mylib/BaseContract.sol\\\\\\"\\\\n\\\\n// Derived contract that inherits from BaseContract\\\\ncontract DerivedContract is BaseContract {\\\\n\\\\n    // This variable is additional to the one in the BaseContract\\\\n    string public name;\\\\n\\\\n    constructor(uint256 _value, string memory _name) BaseContract(_value) {\\\\n        name = _name;\\\\n    }\\\\n\\\\n    function setName(string memory _name) public {\\\\n        name = _name;\\\\n    }\\\\n}\\\\n\\\\n\\",
  \\"importedIds\\": [
    \\"/bundler/resolutions/src/fixtures/withlib/lib/mylib/BaseContract.sol\\"
  ],
  \\"code\\": \\"// SPDX-License-Identifier: MIT\\\\npragma solidity >0.8.0;\\\\n\\\\nimport {BaseContract} from \\\\\\"/bundler/resolutions/src/fixtures/withlib/lib/mylib/BaseContract.sol\\\\\\"\\\\n\\\\n// Derived contract that inherits from BaseContract\\\\ncontract DerivedContract is BaseContract {\\\\n\\\\n    // This variable is additional to the one in the BaseContract\\\\n    string public name;\\\\n\\\\n    constructor(uint256 _value, string memory _name) BaseContract(_value) {\\\\n        name = _name;\\\\n    }\\\\n\\\\n    function setName(string memory _name) public {\\\\n        name = _name;\\\\n    }\\\\n}\\\\n\\\\n\\"
}"
`;

exports[`moduleFactory > should resolve correctly for case $s 7`] = `{}`;

exports[`moduleFactory > should resolve correctly for case $s 8`] = `
"{
  \\"id\\": \\"/bundler/resolutions/src/fixtures/withlib/Contract.sol\\",
  \\"rawCode\\": \\"// SPDX-License-Identifier: MIT\\\\npragma solidity >0.8.0;\\\\n\\\\nimport {BaseContract} from \\\\\\"mylib/BaseContract.sol\\\\\\"\\\\n\\\\n// Derived contract that inherits from BaseContract\\\\ncontract DerivedContract is BaseContract {\\\\n\\\\n    // This variable is additional to the one in the BaseContract\\\\n    string public name;\\\\n\\\\n    constructor(uint256 _value, string memory _name) BaseContract(_value) {\\\\n        name = _name;\\\\n    }\\\\n\\\\n    function setName(string memory _name) public {\\\\n        name = _name;\\\\n    }\\\\n}\\\\n\\\\n\\",
  \\"importedIds\\": [
    \\"/bundler/resolutions/src/fixtures/withlib/lib/mylib/BaseContract.sol\\"
  ],
  \\"code\\": \\"// SPDX-License-Identifier: MIT\\\\npragma solidity >0.8.0;\\\\n\\\\nimport {BaseContract} from \\\\\\"/bundler/resolutions/src/fixtures/withlib/lib/mylib/BaseContract.sol\\\\\\"\\\\n\\\\n// Derived contract that inherits from BaseContract\\\\ncontract DerivedContract is BaseContract {\\\\n\\\\n    // This variable is additional to the one in the BaseContract\\\\n    string public name;\\\\n\\\\n    constructor(uint256 _value, string memory _name) BaseContract(_value) {\\\\n        name = _name;\\\\n    }\\\\n\\\\n    function setName(string memory _name) public {\\\\n        name = _name;\\\\n    }\\\\n}\\\\n\\\\n\\"
}"
`;

exports[`moduleFactory > should resolve correctly for case $s 9`] = `{}`;

exports[`moduleFactory > should resolve correctly for case $s 10`] = `
"{
  \\"id\\": \\"/bundler/resolutions/src/fixtures/withremappings/Contract.sol\\",
  \\"rawCode\\": \\"// SPDX-License-Identifier: MIT\\\\npragma solidity >0.8.0;\\\\n\\\\nimport {BaseContract} from \\\\\\"mylib/BaseContract.sol\\\\\\"\\\\n\\\\n// Derived contract that inherits from BaseContract\\\\ncontract DerivedContract is BaseContract {\\\\n\\\\n    // This variable is additional to the one in the BaseContract\\\\n    string public name;\\\\n\\\\n    constructor(uint256 _value, string memory _name) BaseContract(_value) {\\\\n        name = _name;\\\\n    }\\\\n\\\\n    function setName(string memory _name) public {\\\\n        name = _name;\\\\n    }\\\\n}\\\\n\\\\n\\",
  \\"importedIds\\": [
    \\"/bundler/resolutions/src/fixtures/withremappings/lib/mylib/BaseContract.sol\\"
  ],
  \\"code\\": \\"// SPDX-License-Identifier: MIT\\\\npragma solidity >0.8.0;\\\\n\\\\nimport {BaseContract} from \\\\\\"/bundler/resolutions/src/fixtures/withremappings/lib/mylib/BaseContract.sol\\\\\\"\\\\n\\\\n// Derived contract that inherits from BaseContract\\\\ncontract DerivedContract is BaseContract {\\\\n\\\\n    // This variable is additional to the one in the BaseContract\\\\n    string public name;\\\\n\\\\n    constructor(uint256 _value, string memory _name) BaseContract(_value) {\\\\n        name = _name;\\\\n    }\\\\n\\\\n    function setName(string memory _name) public {\\\\n        name = _name;\\\\n    }\\\\n}\\\\n\\\\n\\"
}"
`;

exports[`moduleFactory > should resolve correctly for case $s 11`] = `{}`;

exports[`moduleFactory > should resolve correctly for case $s 12`] = `
"{
  \\"id\\": \\"/bundler/resolutions/src/fixtures/withremappings/Contract.sol\\",
  \\"rawCode\\": \\"// SPDX-License-Identifier: MIT\\\\npragma solidity >0.8.0;\\\\n\\\\nimport {BaseContract} from \\\\\\"mylib/BaseContract.sol\\\\\\"\\\\n\\\\n// Derived contract that inherits from BaseContract\\\\ncontract DerivedContract is BaseContract {\\\\n\\\\n    // This variable is additional to the one in the BaseContract\\\\n    string public name;\\\\n\\\\n    constructor(uint256 _value, string memory _name) BaseContract(_value) {\\\\n        name = _name;\\\\n    }\\\\n\\\\n    function setName(string memory _name) public {\\\\n        name = _name;\\\\n    }\\\\n}\\\\n\\\\n\\",
  \\"importedIds\\": [
    \\"/bundler/resolutions/src/fixtures/withremappings/lib/mylib/BaseContract.sol\\"
  ],
  \\"code\\": \\"// SPDX-License-Identifier: MIT\\\\npragma solidity >0.8.0;\\\\n\\\\nimport {BaseContract} from \\\\\\"/bundler/resolutions/src/fixtures/withremappings/lib/mylib/BaseContract.sol\\\\\\"\\\\n\\\\n// Derived contract that inherits from BaseContract\\\\ncontract DerivedContract is BaseContract {\\\\n\\\\n    // This variable is additional to the one in the BaseContract\\\\n    string public name;\\\\n\\\\n    constructor(uint256 _value, string memory _name) BaseContract(_value) {\\\\n        name = _name;\\\\n    }\\\\n\\\\n    function setName(string memory _name) public {\\\\n        name = _name;\\\\n    }\\\\n}\\\\n\\\\n\\"
}"
`;
