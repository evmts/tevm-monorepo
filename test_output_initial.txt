Building Rust Foundry wrapper...
Looking for cbindgen...
cbindgen command configured
warning: profiles for the non root package will be ignored, specify profiles at the workspace root:
package:   /Users/williamcory/tevm/main/src/Compilers/Cargo.toml
workspace: /Users/williamcory/tevm/main/Cargo.toml
    Finished `release` profile [optimized] target(s) in 0.95s
test
+- run server-test stderr
--- Starting server test ---
Creating server on port 18545
Starting server thread
Waiting for server to start
Server thread started
Connecting to server
Creating request
Sending request: POST / HTTP/1.1
Host: localhost:18545
Content-Type: application/json
Content-Length: 65

{"id":1,"method":"eth_blockNumber","jsonrpc":"2.0","params":null}
Reading response
Request: POST / -> Status: 200 (took 55us)
Received response: HTTP/1.1 200 
Content-Type: application/json; charset=UTF-8
Content-Length: 63

{"id":1,"method":"eth_blockNumber","jsonrpc":"2.0","result":[]}
--- Test completed successfully ---
Stopping server
test
+- run static-protection-test stderr
CREATE: Calculated address: 0x89c45e282d4d4a761e3cd1d4b5dfacc194144f13 for creator: 0x606060606060606060606060606060606060606, nonce: 0
CREATE: Checking balance. Creator: 0x606060606060606060606060606060606060606, balance: 0, required value: 1000
CREATE: Insufficient balance. Returning failure with zero address
CREATE2: Insufficient balance. Creator balance: 0, required value: 1000
test
+- run gas-test stderr
\n[Test MSTORE 1] Gas before executeOpcodeWithGas: 100000\n[Test MSTORE 1] Gas after executeOpcodeWithGas: 99994\n[Test MSTORE 1] gas_used_32 = 6 (expected 6, found 6)
\n[Test MSTORE 2] Gas before executeOpcodeWithGas: 99994\n[Test MSTORE 2] Gas after executeOpcodeWithGas: 99988\n[Test MSTORE 2] gas_used_64 = 6 (expected 6, found 6)
\n[Test MSTORE 3] Gas before executeOpcodeWithGas: 99988\n[Test MSTORE 3] Gas after executeOpcodeWithGas: 99893\n[Test MSTORE 3] gas_used_1024 = 95 (expected 95, found 95)
KECCAK256: offset=0, size=32, data=000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f, hash=8ae1aa597fa146ebd3aa2ceddf360668dea5e526567e92b0321816a4e895bd2d
*** LOG0: FUNCTION CALLED ***
LOG0: gas_remaining=9625
*** LOG0: offset=0, size=8, memory_size=8 ***
LOG0: popped offset=0, size=8)
LOG0: current memory size=8
LOG0: NON-EMPTY data path, size=8
LOG0: offset_usize=0, size_usize=8
LOG0: memory expansion: current=8, new=8, gas_cost=0
LOG0: byte_cost=64 (8 * 8)
LOG0: about to consume byte_cost gas
LOG0: successfully consumed byte_cost gas
LOG0: emitting log with data len=8, data={ 1, 2, 3, 4, 5, 6, 7, 8 }
*** LOG1: FUNCTION CALLED ***
LOG1: gas_remaining=8811
*** LOG1: offset=0, size=8, memory_size=8 ***
LOG1: popped offset=0, size=8)
LOG1: current memory size=8
LOG1: popped topic -> topics[0]=4369
LOG1: NON-EMPTY data path, size=8
LOG1: offset_usize=0, size_usize=8
LOG1: memory expansion: current=8, new=8, gas_cost=0
LOG1: byte_cost=64 (8 * 8)
LOG1: about to consume byte_cost gas
LOG1: successfully consumed byte_cost gas
LOG1: emitting log with data len=8, data={ 1, 2, 3, 4, 5, 6, 7, 8 }
*** LOG4: FUNCTION CALLED ***
LOG4: gas_remaining=6872
*** LOG4: offset=0, size=8, memory_size=8 ***
LOG4: popped offset=0, size=8)
LOG4: current memory size=8
LOG4: popped topic -> topics[3]=4369
LOG4: popped topic -> topics[2]=8738
LOG4: popped topic -> topics[1]=13107
LOG4: popped topic -> topics[0]=17476
LOG4: NON-EMPTY data path, size=8
LOG4: offset_usize=0, size_usize=8
LOG4: memory expansion: current=8, new=8, gas_cost=0
LOG4: byte_cost=64 (8 * 8)
LOG4: about to consume byte_cost gas
LOG4: successfully consumed byte_cost gas
LOG4: emitting log with data len=8, data={ 1, 2, 3, 4, 5, 6, 7, 8 }

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=12345
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=100000
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=12345
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=97900
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
test
+- run integration-test 33/40 passed, 7 failed
error: 'control_flow_test.test.Integration: Return data handling' failed: === HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=42
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=10000
SLOAD: Getting storage value
SLOAD: Got value=100
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=5003
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=7892
SLOAD: Getting storage value
SLOAD: Got value=999
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=777
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=10000
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=777
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=7900
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
/Users/williamcory/tevm/main/src/evm/frame.zig:90:9: 0x102443c67 in consume_gas (integration-test)
        return ExecutionError.Error.OutOfGas;
        ^
/Users/williamcory/tevm/main/src/evm/opcodes/memory.zig:85:9: 0x10246600b in op_mstore (integration-test)
        try frame.consume_gas(expansion_gas_cost);
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:77:17: 0x102436c6f in execute (integration-test)
    const res = try operation.execute(pc, interpreter, state);
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102433dcb in executeOpcode (integration-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/test/evm/integration/control_flow_test.zig:157:9: 0x1024d4123 in test.Integration: Return data handling (integration-test)
    _ = try helpers.executeOpcode(0x52, &test_vm.vm, test_frame.frame);
        ^
error: 'environment_system_test.test.Integration: Log emission with topics' failed: Invalid opcode test: Gas before execution: 10000
Invalid opcode test: Gas after execution: 0
=== HELPER: Executing LOG opcode 0xa3 ===
*** LOG3: FUNCTION CALLED ***
LOG3: gas_remaining=8500
*** LOG3: offset=194866884977453722427157977695504402620791005730, size=97433442488726861213578988847752201310395502865, memory_size=19 ***
LOG3: popped offset=194866884977453722427157977695504402620791005730, size=97433442488726861213578988847752201310395502865)
LOG3: current memory size=19
LOG3: popped topic -> topics[2]=1311768467294899695
LOG3: popped topic -> topics[1]=19
LOG3: popped topic -> topics[0]=0
LOG3: NON-EMPTY data path, size=97433442488726861213578988847752201310395502865
LOG3: OutOfOffset - offset=194866884977453722427157977695504402620791005730, size=97433442488726861213578988847752201310395502865
/Users/williamcory/tevm/main/src/evm/opcodes/log.zig:80:17: 0x102440607 in log (integration-test)
                return ExecutionError.Error.OutOfOffset;
                ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:77:17: 0x102436c6f in execute (integration-test)
    const res = try operation.execute(pc, interpreter, state);
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102433dcb in executeOpcode (integration-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/test/evm/integration/environment_system_test.zig:265:9: 0x1024dffe7 in test.Integration: Log emission with topics (integration-test)
    _ = try helpers.executeOpcode(0xA3, &test_vm.vm, test_frame.frame);
        ^
error: 'environment_system_test.test.Integration: External code operations' failed: /Users/williamcory/tevm/main/src/evm/opcodes/environment.zig:138:9: 0x102464387 in op_extcodecopy (integration-test)
        return ExecutionError.Error.OutOfOffset;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:77:17: 0x102436c6f in execute (integration-test)
    const res = try operation.execute(pc, interpreter, state);
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102433dcb in executeOpcode (integration-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/test/evm/integration/environment_system_test.zig:321:9: 0x1024e0f63 in test.Integration: External code operations (integration-test)
    _ = try helpers.executeOpcode(0x3C, &test_vm.vm, test_frame.frame);
        ^
error: 'environment_system_test.test.Integration: Calldata operations' failed: /Users/williamcory/tevm/main/src/evm/memory.zig:315:9: 0x1024438f7 in get_slice (integration-test)
        return MemoryError.InvalidOffset;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:152:16: 0x1024e07c3 in getMemory (integration-test)
        return try self.frame.memory.get_slice(offset, size);
               ^
/Users/williamcory/tevm/main/test/evm/integration/environment_system_test.zig:394:25: 0x1024e1e83 in test.Integration: Calldata operations (integration-test)
    const copied_data = try test_frame.getMemory(0, calldata.len);
                        ^
error: 'environment_system_test.test.Integration: Self balance and code operations' failed: /Users/williamcory/tevm/main/src/evm/memory.zig:315:9: 0x1024438f7 in get_slice (integration-test)
        return MemoryError.InvalidOffset;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:152:16: 0x1024e07c3 in getMemory (integration-test)
        return try self.frame.memory.get_slice(offset, size);
               ^
/Users/williamcory/tevm/main/test/evm/integration/environment_system_test.zig:452:25: 0x1024e2773 in test.Integration: Self balance and code operations (integration-test)
    const copied_code = try test_frame.getMemory(0, contract_code.len);
                        ^
error: 'complex_interactions_test.test.Integration: Packed struct storage' failed: === HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=108674822486142356301189141061314847573925677614647792079318359668746819109871
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=77840
SLOAD: Getting storage value
SLOAD: Got value=1000
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=5
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=77891
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
expected 12345, found 0
/opt/homebrew/Cellar/zig/0.14.0_2/lib/zig/std/testing.zig:103:17: 0x102432bff in expectEqualInner__anon_25597 (integration-test)
                return error.TestExpectedEqual;
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:258:5: 0x102432dbb in expectStackValue (integration-test)
    try testing.expectEqual(expected, actual);
    ^
/Users/williamcory/tevm/main/test/evm/integration/complex_interactions_test.zig:118:5: 0x1024e3f4b in test.Integration: Packed struct storage (integration-test)
    try helpers.expectStackValue(test_frame.frame, 0, a);
    ^
error: 'complex_interactions_test.test.Integration: Multi-sig wallet threshold check' failed: === HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=10
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=100000
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=99
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=100000
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=99
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=77887
SLOAD: Getting storage value
SLOAD: Got value=2
SLOAD: Pushed value to stack
KECCAK256: offset=0, size=16, data=48656c6c6f2c20457468657265756d21, hash=0a1e2723bd7f1996832b7ed7406df8ad975deba1aa04020b5bfc3e6fe70ecc29
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=1
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=52900
SLOAD: Getting storage value
SLOAD: Got value=2
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=0
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=52800
SLOAD: Getting storage value
SLOAD: Got value=3
SLOAD: Pushed value to stack
expected 1, found 0
/opt/homebrew/Cellar/zig/0.14.0_2/lib/zig/std/testing.zig:103:17: 0x102432bff in expectEqualInner__anon_25597 (integration-test)
                return error.TestExpectedEqual;
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:258:5: 0x102432dbb in expectStackValue (integration-test)
    try testing.expectEqual(expected, actual);
    ^
/Users/williamcory/tevm/main/test/evm/integration/complex_interactions_test.zig:423:5: 0x1024e8b27 in test.Integration: Multi-sig wallet threshold check (integration-test)
    try helpers.expectStackValue(test_frame.frame, 0, 1); // Actually checking required <= confirmations
    ^
error: while executing test 'complex_interactions_test.test.Integration: Multi-sig wallet threshold check', the following test command failed:
/Users/williamcory/tevm/main/.zig-cache/o/bc8f801b2c94327cb281c21040a4d6ae/integration-test --seed=0x5bc3b26d --cache-dir=/Users/williamcory/tevm/main/.zig-cache --listen=- 
test
+- run vm-opcode-test 69/73 passed, 4 failed
error: 'vm_opcode_test.test.VM: JUMPI conditional jump taken' failed: /opt/homebrew/Cellar/zig/0.14.0_2/lib/zig/std/testing.zig:580:14: 0x1043808db in expect (vm-opcode-test)
    if (!ok) return error.TestUnexpectedResult;
             ^
/Users/williamcory/tevm/main/test/evm/vm_opcode_test.zig:101:5: 0x1044a98e7 in test.VM: JUMPI conditional jump taken (vm-opcode-test)
    try testing.expect(result.status == .Success);
    ^
error: 'vm_opcode_test.test.VM: JUMPI conditional jump not taken' failed: /opt/homebrew/Cellar/zig/0.14.0_2/lib/zig/std/testing.zig:580:14: 0x1043808db in expect (vm-opcode-test)
    if (!ok) return error.TestUnexpectedResult;
             ^
/Users/williamcory/tevm/main/test/evm/vm_opcode_test.zig:129:5: 0x1044a9ccb in test.VM: JUMPI conditional jump not taken (vm-opcode-test)
    try testing.expect(result.status == .Success);
    ^
error: 'vm_opcode_test.test.VM: SUB large numbers' failed: expected 28948022309329048855892746252171976963317496166410141009864396001978282409984, found 57896044618658097711785492504343953926634992332820282019728792003956564819968
/opt/homebrew/Cellar/zig/0.14.0_2/lib/zig/std/testing.zig:103:17: 0x1044a8e43 in expectEqualInner__anon_28438 (vm-opcode-test)
                return error.TestExpectedEqual;
                ^
/Users/williamcory/tevm/main/test/evm/vm_opcode_test.zig:635:5: 0x1044adc13 in test.VM: SUB large numbers (vm-opcode-test)
    try testing.expectEqual(expected, vm.last_stack_value.?);
    ^
error: 'vm_opcode_test.test.VM: Conditional logic with comparison' failed: JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=1
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=77891
SLOAD: Getting storage value
SLOAD: Got value=66
SLOAD: Pushed value to stack
/opt/homebrew/Cellar/zig/0.14.0_2/lib/zig/std/testing.zig:580:14: 0x1043808db in expect (vm-opcode-test)
    if (!ok) return error.TestUnexpectedResult;
             ^
/Users/williamcory/tevm/main/test/evm/vm_opcode_test.zig:2238:5: 0x1044bc233 in test.VM: Conditional logic with comparison (vm-opcode-test)
    try testing.expect(result.status == .Success);
    ^
error: while executing test 'vm_opcode_test.test.VM: Out of gas', the following test command failed:
/Users/williamcory/tevm/main/.zig-cache/o/fc2be62bd943defa3c5b749937fa4583/vm-opcode-test --seed=0x5bc3b26d --cache-dir=/Users/williamcory/tevm/main/.zig-cache --listen=- 
test
+- run opcodes-test 384/401 passed, 17 failed
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=128
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=27900
SLOAD: Getting storage value
SLOAD: Got value=115792089237316195423570985008687907853269984665640564039457584007913129639935
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=144
SLOAD: Pre-Berlin rules
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=0
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=55785
SLOAD: Getting storage value
SLOAD: Got value=1
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=1
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=55682
SLOAD: Getting storage value
SLOAD: Got value=2
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
error: 'msize_gas_jumpdest_comprehensive_test.test.JUMPDEST: Code analysis integration' failed: KECCAK256: offset=0, size=1, data=01, hash=5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2
KECCAK256: offset=0, size=32, data=ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, hash=a9c584056064687e149968cbab758a3376d22aedc6a55823d1b3ecbee81b8fb9
KECCAK256: offset=64, size=32, data=404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f, hash=a30deb53092e526e575698e9f7b2efd08a80c33e563f098e48bfe43369f26951
=== HELPER: Executing LOG opcode 0xa0 ===
*** LOG0: FUNCTION CALLED ***
LOG0: gas_remaining=9625
*** LOG0: offset=0, size=4, memory_size=4 ***
LOG0: popped offset=0, size=4)
LOG0: current memory size=4
LOG0: NON-EMPTY data path, size=4
LOG0: offset_usize=0, size_usize=4
LOG0: memory expansion: current=4, new=4, gas_cost=0
LOG0: byte_cost=32 (8 * 4)
LOG0: about to consume byte_cost gas
LOG0: successfully consumed byte_cost gas
LOG0: emitting log with data len=4, data={ 17, 34, 51, 68 }
=== HELPER: Executing LOG opcode 0xa0 ===
*** LOG0: FUNCTION CALLED ***
LOG0: gas_remaining=9625
*** LOG0: offset=0, size=0, memory_size=0 ***
LOG0: popped offset=0, size=0)
LOG0: current memory size=0
LOG0: emitting empty log
=== HELPER: Executing LOG opcode 0xa1 ===
*** LOG1: FUNCTION CALLED ***
LOG1: gas_remaining=9250
*** LOG1: offset=0, size=2, memory_size=2 ***
LOG1: popped offset=0, size=2)
LOG1: current memory size=2
LOG1: popped topic -> topics[0]=1193046
LOG1: NON-EMPTY data path, size=2
LOG1: offset_usize=0, size_usize=2
LOG1: memory expansion: current=2, new=2, gas_cost=0
LOG1: byte_cost=16 (8 * 2)
LOG1: about to consume byte_cost gas
LOG1: successfully consumed byte_cost gas
LOG1: emitting log with data len=2, data={ 170, 187 }
=== HELPER: Executing LOG opcode 0xa2 ===
*** LOG2: FUNCTION CALLED ***
LOG2: gas_remaining=8875
*** LOG2: offset=10, size=3, memory_size=13 ***
LOG2: popped offset=10, size=3)
LOG2: current memory size=13
LOG2: popped topic -> topics[1]=48879
LOG2: popped topic -> topics[0]=51966
LOG2: NON-EMPTY data path, size=3
LOG2: offset_usize=10, size_usize=3
LOG2: memory expansion: current=13, new=13, gas_cost=0
LOG2: byte_cost=24 (8 * 3)
LOG2: about to consume byte_cost gas
LOG2: successfully consumed byte_cost gas
LOG2: emitting log with data len=3, data={ 1, 2, 3 }
=== HELPER: Executing LOG opcode 0xa3 ===
*** LOG3: FUNCTION CALLED ***
LOG3: gas_remaining=8500
*** LOG3: offset=0, size=0, memory_size=0 ***
LOG3: popped offset=0, size=0)
LOG3: current memory size=0
LOG3: popped topic -> topics[2]=819
LOG3: popped topic -> topics[1]=546
LOG3: popped topic -> topics[0]=273
LOG3: emitting empty log
=== HELPER: Executing LOG opcode 0xa4 ===
*** LOG4: FUNCTION CALLED ***
LOG4: gas_remaining=8125
*** LOG4: offset=0, size=100, memory_size=100 ***
LOG4: popped offset=0, size=100)
LOG4: current memory size=100
LOG4: popped topic -> topics[3]=17476
LOG4: popped topic -> topics[2]=13107
LOG4: popped topic -> topics[1]=8738
LOG4: popped topic -> topics[0]=4369
LOG4: NON-EMPTY data path, size=100
LOG4: offset_usize=0, size_usize=100
LOG4: memory expansion: current=100, new=100, gas_cost=0
LOG4: byte_cost=800 (8 * 100)
LOG4: about to consume byte_cost gas
LOG4: successfully consumed byte_cost gas
LOG4: emitting log with data len=100, data={ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99 }
=== HELPER: Executing LOG opcode 0xa0 ===
*** LOG0: FUNCTION CALLED ***
LOG0: gas_remaining=9625
=== HELPER: Executing LOG opcode 0xa1 ===
*** LOG1: FUNCTION CALLED ***
LOG1: gas_remaining=9250
=== HELPER: Executing LOG opcode 0xa0 ===
*** LOG0: FUNCTION CALLED ***
LOG0: gas_remaining=9625
*** LOG0: offset=0, size=32, memory_size=0 ***
LOG0: popped offset=0, size=32)
LOG0: current memory size=0
LOG0: NON-EMPTY data path, size=32
LOG0: offset_usize=0, size_usize=32
LOG0: memory expansion: current=0, new=32, gas_cost=3
LOG0: byte_cost=256 (8 * 32)
LOG0: about to consume byte_cost gas
LOG0: successfully consumed byte_cost gas
LOG0: emitting log with data len=32, data={ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
=== HELPER: Executing LOG opcode 0xa4 ===
*** LOG4: FUNCTION CALLED ***
LOG4: gas_remaining=8125
*** LOG4: offset=0, size=10, memory_size=0 ***
LOG4: popped offset=0, size=10)
LOG4: current memory size=0
LOG4: popped topic -> topics[3]=4
LOG4: popped topic -> topics[2]=3
LOG4: popped topic -> topics[1]=2
LOG4: popped topic -> topics[0]=1
LOG4: NON-EMPTY data path, size=10
LOG4: offset_usize=0, size_usize=10
LOG4: memory expansion: current=0, new=10, gas_cost=3
LOG4: byte_cost=80 (8 * 10)
LOG4: about to consume byte_cost gas
LOG4: successfully consumed byte_cost gas
LOG4: emitting log with data len=10, data={ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
=== HELPER: Executing LOG opcode 0xa0 ===
*** LOG0: FUNCTION CALLED ***
LOG0: gas_remaining=9625
*** LOG0: offset=256, size=32, memory_size=0 ***
LOG0: popped offset=256, size=32)
LOG0: current memory size=0
LOG0: NON-EMPTY data path, size=32
LOG0: offset_usize=256, size_usize=32
LOG0: memory expansion: current=0, new=288, gas_cost=27
LOG0: byte_cost=256 (8 * 32)
LOG0: about to consume byte_cost gas
LOG0: successfully consumed byte_cost gas
LOG0: emitting log with data len=32, data={ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
=== HELPER: Executing LOG opcode 0xa0 ===
=== HELPER: Executing LOG opcode 0xa4 ===
=== HELPER: Executing LOG opcode 0xa0 ===
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=291
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=3000
SLOAD: Getting storage value
SLOAD: Got value=4548489
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=2457
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=3000
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=291
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=3000
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=291
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=900
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=256
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=4900
SLOAD: Getting storage value
SLOAD: Got value=273
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
=== HELPER: Executing opcode 0x55 ===
KECCAK256: offset=100, size=1, data=61, hash=3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb
KECCAK256: offset=200, size=3, data=616263, hash=4e03657aea45a94fc7d47ba826c8d667c0d1e6e33a64a036ec44f58fa12d6c45
KECCAK256: offset=300, size=14, data=6d65737361676520646967657374, hash=856ab8a3ad0f6168a4d0ba8d77487243f3655db6fc5b0e1669bc05b1287e0147
KECCAK256: offset=0, size=1, data=00, hash=bc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a
KECCAK256: offset=0, size=31, data=000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e, hash=3e50547cf72e8583ee91462f9d99fe624f53282f78e1a5ec2347b1d0123d0d9b
KECCAK256: offset=0, size=32, data=000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f, hash=8ae1aa597fa146ebd3aa2ceddf360668dea5e526567e92b0321816a4e895bd2d
KECCAK256: offset=0, size=31, data=74657374206461746120666f72206f666673657420636f6d70617269736f6e, hash=40ee0089e02a75432755add1714e881429ad235add58ae8775798be1cd17944f
KECCAK256: offset=1000, size=31, data=74657374206461746120666f72206f666673657420636f6d70617269736f6e, hash=40ee0089e02a75432755add1714e881429ad235add58ae8775798be1cd17944f
KECCAK256: offset=0, size=1, data=00, hash=bc36789e7a1e281436464229828f817d6612f7b477d66591ff96a9e064bcc98a
KECCAK256: offset=0, size=31, data=00000000000000000000000000000000000000000000000000000000000000, hash=15fed0451499512d95f3ec5a41c878b9de55f21878b5b4e190d4667ec709b4cf
KECCAK256: offset=0, size=32, data=0000000000000000000000000000000000000000000000000000000000000000, hash=290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
KECCAK256: offset=10000, size=32, data=0000000000000000000000000000000000000000000000000000000000000000, hash=290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563
KECCAK256: offset=0, size=1, data=08, hash=d33e25809fcaa2b6900567812852539da8559dc8b76a7ce3fc5ddd77e8d19a69
KECCAK256: offset=0, size=4, data=00000000, hash=e8e77626586f73b955364c7b4bbf0bb7f7685ebd40e852b164633a4acbd3244c
KECCAK256: offset=0, size=4, data=01000000, hash=e37890bf230cf36ea140a5dbb9a561aa7ef84f8f995873db8386eba4a95c7bbe
KECCAK256: offset=0, size=4, data=02000000, hash=2b97a4b75a93aa1ac8581fac0f7d4ab42406569409a737bdf9de584903b372c5
KECCAK256: offset=0, size=4, data=03000000, hash=a4a7208a40e95acaf2fe1a3c675b1b5d8c341060e4f179b76ba79493582a95a6
KECCAK256: offset=0, size=4, data=04000000, hash=989a7025bda9312b19569d9e84e33a624e7fc007e54db23b6758d5f819647071
KECCAK256: offset=0, size=4, data=05000000, hash=d279eb4bf22b2aeded31e65a126516215a9d93f83e3e425fdcd1a05ab347e535
KECCAK256: offset=0, size=4, data=06000000, hash=291bd553ea938a33785762f076cbad142bde4a0caf55fbf122ac07d7489414ed
KECCAK256: offset=0, size=4, data=07000000, hash=28a5afdffa07b3715cdbd190c060c5fcd057a11c4b215cba2e6960e8a068745f
KECCAK256: offset=0, size=4, data=08000000, hash=38e18ac9b4d78020e0f164d6da9ea61b962ab1975bcf6e8e80e9a9fc2ae509f8
KECCAK256: offset=0, size=4, data=09000000, hash=754310be011a7a378b07fa7cbac39dbedcadf645c518ddec58deeaa8c29e0634
KECCAK256: offset=0, size=4, data=0a000000, hash=1a3930f70948f7eb1ceab07ecdb0967986091fd8b4b4f447406045431abd9795
KECCAK256: offset=0, size=4, data=0b000000, hash=06be3c46e5a06d7b3e438a9d698f4319dc628624a63e484d97f00b92d09edce7
KECCAK256: offset=0, size=4, data=0c000000, hash=e54ccfb12a140c2dddb6cf78d1c6121610260412c66d00658ed1267863427ab9
KECCAK256: offset=0, size=4, data=0d000000, hash=7463c9b814b5d9081938e21346fe8bf81a9a9a0dcfa7bcc03b644a361e395a3b
KECCAK256: offset=0, size=4, data=0e000000, hash=50989ffd5c1c310e7d0f33aa0a6e14f54d48b531719aebb3ee25bbcfa8818228
KECCAK256: offset=0, size=4, data=0f000000, hash=72a6853e7ca96e9c6ab194fe48a2e4b726e739f834ce81df1d6c2415453df1cb
KECCAK256: offset=0, size=4, data=10000000, hash=ff378508790a61b04b5e204f0fb82a188112eb4a3ec0d39f28cce1fd40a3f72c
KECCAK256: offset=0, size=4, data=11000000, hash=faf8c93e6f63ebc2f53be3fff7948eca8cb5f033608436ba8f0cb280b392e316
KECCAK256: offset=0, size=4, data=12000000, hash=1d732d45f0d0ef80b65a3b7f8db5319532b3916ee960f3a1c35591209004e767
KECCAK256: offset=0, size=4, data=13000000, hash=f88a1ebeab9ec9f63bb3dd61c7fa5af21e55b85e8d11d0a3ea6e10b2cc3ddfa4
KECCAK256: offset=0, size=4, data=14000000, hash=f4f967449e79d553b92424b97414eee6e31f7bedb855377e2e5ebb9af94c00c5
KECCAK256: offset=0, size=4, data=15000000, hash=96ce2e6272f825cb6d08446e8ed88fa6f95f9c3b252738b3d74bac900cff1876
KECCAK256: offset=0, size=4, data=16000000, hash=1d841596288a312d0a5d3ed180869cf6323a5194a0b3f914a561b55b5b38a2ad
KECCAK256: offset=0, size=4, data=17000000, hash=ac87b9b0d99583bd745c68019dd3992354fc2421385408f0e2b079f051fb2af4
KECCAK256: offset=0, size=4, data=18000000, hash=c8ff464a4f57de5018eacc860654d8cbf7896947f1c7722b811305cd51aa3960
KECCAK256: offset=0, size=4, data=19000000, hash=faa5e59a0347f6aaad39a02cb14a3eaf5c9726a886808cd9ed719f56acb6a2b7
KECCAK256: offset=0, size=4, data=1a000000, hash=2284c8c6fd99c88cea601d52737c270fa5f63dfb254d72b6417129ea2dd9120b
KECCAK256: offset=0, size=4, data=1b000000, hash=2491968c02a1b60b88f97bb6a92a2b5c7e95d8c5e0c20eb29a7e5444c2ad9c02
KECCAK256: offset=0, size=4, data=1c000000, hash=8feb1d3ae0ea5cbd44572568189ef950eca062f8293c96c5af0fb1d4b2c63bd6
KECCAK256: offset=0, size=4, data=1d000000, hash=ab1afad1cb0ecd7ffa3b973de82d7bb8fc9fd851de6792b723e75fc0f1455a8c
KECCAK256: offset=0, size=4, data=1e000000, hash=8269e02810fc64f3dc4ac493d197202e7c393db60bf5676584b6e2236e19e293
KECCAK256: offset=0, size=4, data=1f000000, hash=d0725781e2ba576d8f79753b970c6e934307ef1b20cfdfc724f4a3bdfbc70063
KECCAK256: offset=0, size=4, data=20000000, hash=2d1db9ac2e0436c2269b8c2c1ba8cb606e18411b63d4c4c3171d2ceb385174e6
KECCAK256: offset=0, size=4, data=21000000, hash=d7721b812f74ab63685345cc4759f5291d1b14c6832bb1ab59afe0f363d162e0
KECCAK256: offset=0, size=4, data=22000000, hash=28ffe109eca24e24d3146de24663402f2af4bbd274982dc451031c37f2b047b5
KECCAK256: offset=0, size=4, data=23000000, hash=0702063e6f2ba2e5bd1cb2947b5074c491a346d94cbac70b0838a4e9b8bc9a53
KECCAK256: offset=0, size=4, data=24000000, hash=e0ce77fb882608599431e569dff90fc80e86411bb66b9c13d5984fc61d2977ec
KECCAK256: offset=0, size=4, data=25000000, hash=73ae54c62efa61c54514f3ea208b2b14fb0f2dd2d3685ba30ebe0c1d05770245
KECCAK256: offset=0, size=4, data=26000000, hash=4f507ee6b990ec6dee9ae7a1f068fd3b55111572b1759d4cbfb9432f8169fe34
KECCAK256: offset=0, size=4, data=27000000, hash=4514e5c57dbeced395be3246cda7dbac3ef4bae74d62001fa58cb07ba864cc28
KECCAK256: offset=0, size=4, data=28000000, hash=cb50c6d3079b98e8a5c9b59cc44c2434b7288589ff24ebc1abdacbb0982d7f68
KECCAK256: offset=0, size=4, data=29000000, hash=51ea26132e5a67e7b36482cee55ff68ba1601b583dc68e717d1feae452cdfa0c
KECCAK256: offset=0, size=4, data=2a000000, hash=298c8f103b5a4112a1ab1da335986cfc363f068fcd72c0393382d02a71faa24a
KECCAK256: offset=0, size=4, data=2b000000, hash=b81c9c72c6322c9aa98c64259488c6a7d27d3638aa329cf272a2c5d1c5637cd6
KECCAK256: offset=0, size=4, data=2c000000, hash=68044662b778be6fd264f740c1fa679da8231be325b84074a7c1d5851f074ded
KECCAK256: offset=0, size=4, data=2d000000, hash=7c2e46c2d36086edef2b8faa3944fce9b3c41cfce9e3f4d14e2cb54cbe7ab1da
KECCAK256: offset=0, size=4, data=2e000000, hash=f4fe50a5da93e7cd3bb6f108c0187f4a8b85f7190ac69e0ce8ee62b6139c5ab3
KECCAK256: offset=0, size=4, data=2f000000, hash=942f6b3a004682d21255e1533dc186bf19096ad48b326f121eab9597c9d51dd4
KECCAK256: offset=0, size=4, data=30000000, hash=f315d26c5bd4e712b257d886fe2d9405f972da277bf6961e0039949dbe563904
KECCAK256: offset=0, size=4, data=31000000, hash=802179b586e4a43f42ac472726b5797af3a4b24a28389f47788c7edecc07ee77
KECCAK256: offset=0, size=4, data=32000000, hash=7f5c5890b1a517763d0676eb307e06554c7947fc8fec3211de387490a499b720
KECCAK256: offset=0, size=4, data=33000000, hash=f41c16dee1bbe42c121101d095aab8e1f72146cd5ca0315acfb6de740526ccb6
KECCAK256: offset=0, size=4, data=34000000, hash=fa0e691f900769a5ec1616bf6669e3d886b767e94f936dad1d618d7e92e2caf3
KECCAK256: offset=0, size=4, data=35000000, hash=69f5acf3b94cc6b01c2ca4b04f4d365c5588485d7c66bc7860ce02a2f534e118
KECCAK256: offset=0, size=4, data=36000000, hash=956a20dbc6f39fe2243fbfaf72e637e2fbcfb490dd23a689094808d8d811f754
KECCAK256: offset=0, size=4, data=37000000, hash=65584ab9fc37e4d1a5cae58000798610d77a284334cfbf3d1f33407d11815ede
KECCAK256: offset=0, size=4, data=38000000, hash=78b71530ddedc42dbf673d657d567db046485bb25ce51d3f105de1cae28ca316
KECCAK256: offset=0, size=4, data=39000000, hash=ebe93f01ae4ac395b00b8956f09772d3e06dbe2203be98d4591fc6fea3041f31
KECCAK256: offset=0, size=4, data=3a000000, hash=0af194538bb88834c31c5ab2d507f449a48d581877e9db95862a4cfa8d6f12a5
KECCAK256: offset=0, size=4, data=3b000000, hash=07e4b13286c36bb965d49c51cf304df82c12655f903e6abf8638fd6c846db326
KECCAK256: offset=0, size=4, data=3c000000, hash=80a81e7c221bf235f0cb50015151f9acaa47f102352226a7ef6814393b9dfe12
KECCAK256: offset=0, size=4, data=3d000000, hash=ca796968e291c15dfe59bd2b10608969977c5c4fa008b6bc96006ab29c12d7a1
KECCAK256: offset=0, size=4, data=3e000000, hash=ba705ffce176edcdedc6b6f90e49725843cbe0c47ba45710d3fb279045c88ffa
KECCAK256: offset=0, size=4, data=3f000000, hash=bcc3e2228b0a9e0dcf3a9ad4e94fb7678edb06b6d1122b13852ae044da466618
KECCAK256: offset=0, size=4, data=40000000, hash=99354934cb9f2d7e68cdfefb3e0a39020c69be35b7e5df3b16be78d7e72de6dc
KECCAK256: offset=0, size=4, data=41000000, hash=612d3963c07ca6c317080ec1720875caeac13b8dfaa0cb120649d809da2e3808
KECCAK256: offset=0, size=4, data=42000000, hash=a14566a0a75791df3d406b893ddf8512a88526c317d11a34ddfd6cbb0152372b
KECCAK256: offset=0, size=4, data=43000000, hash=0edac78f22f6e3b3e2eb94b4e6784e64669d0eee55dfb11ea5dfe7e774a5d8a7
KECCAK256: offset=0, size=4, data=44000000, hash=e1915a833835a7b30bee2615380f3f9c3984a9f92c75cfb2d0d9b90306d0d6f6
KECCAK256: offset=0, size=4, data=45000000, hash=7932b6ee86e4b77126a737591455dea1bb6370e77bd955a71c396905a2ba7a1e
KECCAK256: offset=0, size=4, data=46000000, hash=c06ab2f8869fb5523e4c7e0ce5ad290114f8ae1e8dea07af6cedb3ef8dcceb5d
KECCAK256: offset=0, size=4, data=47000000, hash=a77f47bdfeb144a342eacf113bfc5e2ac8d9b42b26826797436a3179070939f1
KECCAK256: offset=0, size=4, data=48000000, hash=2c78f4a192afb4b328cb7985255b13e7fff9d6c71349015c51a5e286fddfb7c8
KECCAK256: offset=0, size=4, data=49000000, hash=cb9af994f18aa08627e5a033875e0cfd11280cb583d57f2355661d43df2aef9e
KECCAK256: offset=0, size=4, data=4a000000, hash=1386823fdb1852dc9ec6f0279bd572b8c0ffd2d9a16d627ad08240ef469f74a1
KECCAK256: offset=0, size=4, data=4b000000, hash=3160623b4c4675c535f63f643d7c88ee629017a2e29ddd155ab3f07d31d3f419
KECCAK256: offset=0, size=4, data=4c000000, hash=827bc1566699ba6c700c826dd9341454653673db2823210604f9cdc6040ff586
KECCAK256: offset=0, size=4, data=4d000000, hash=53e00061f297b6b7efe9a37223cd55c30bb1d4aa4ae7b2f734c95963b3cb25c7
KECCAK256: offset=0, size=4, data=4e000000, hash=613d232b7bd9f942990b50553fc5100487231f290b84c7fabc2420479c7edb27
KECCAK256: offset=0, size=4, data=4f000000, hash=1778d46af66dc940b25b97632b44a2e1f130c1472bbe47160f7af5418f5ffe99
KECCAK256: offset=0, size=4, data=50000000, hash=5500c1b60222eecc73132ed0e2c9894fdf178e7632e96efa429dd9cf64d2b218
KECCAK256: offset=0, size=4, data=51000000, hash=b8bee2c6fd9ba092bac8f791684cd89bedbb69e738370eb1e46ab4fcffb06f06
KECCAK256: offset=0, size=4, data=52000000, hash=65c7e58e9358fef913b9cafc1739d9cade16a5f8438b64c3f34b563211dcea5e
KECCAK256: offset=0, size=4, data=53000000, hash=01fbf2978df4c41ffb845b6271fb8d8c02719ab3b8bdbe89b86046e00f31e024
KECCAK256: offset=0, size=4, data=54000000, hash=8961e2f188695ae5fbf724124076fdb63a24772e653eacfd142589f235cf665b
KECCAK256: offset=0, size=4, data=55000000, hash=9dd098a3e3c8e55a7b079027d4ab69761854ec353f043e381d2afae33569b2b3
KECCAK256: offset=0, size=4, data=56000000, hash=823c0682ace2a67f1c4f7d7e9eecf7aebb2abafb1d549bc9a4b3bee1998f911b
KECCAK256: offset=0, size=4, data=57000000, hash=1bd8ffff943e9e88805a1606139c1a8323cb1cd4018ebb80dd0a7b066d6ea4e6
KECCAK256: offset=0, size=4, data=58000000, hash=e3aa74ad4edc7ececb5edfadcd6408b224f67dc44e405e9c1e5fd9cce203c0ec
KECCAK256: offset=0, size=4, data=59000000, hash=6fd944e99acad27c9dc8ec177dbd13a02693b497a574ab0084f72b6fb438a785
KECCAK256: offset=0, size=4, data=5a000000, hash=d3256069d5f460b1442467b74736734efac5204cd4878736d6b24cef75b349bb
KECCAK256: offset=0, size=4, data=5b000000, hash=f3a22b905ca6e33f7e91ee07be37bc078e16e70a45452129faec46289a93c19f
KECCAK256: offset=0, size=4, data=5c000000, hash=157adcecf046b54219d1ad333ee84571734d6aef02a2563ccdaf5ad48b86a72d
KECCAK256: offset=0, size=4, data=5d000000, hash=10e788805c8538028db89b3582693bd9ce055ecacab990f47e4c2f0dd34f314b
KECCAK256: offset=0, size=4, data=5e000000, hash=808ab96ad9c6c44467cec6e54770e6c28418359b8a9b1b5ee092cde6d2dfb11a
KECCAK256: offset=0, size=4, data=5f000000, hash=22b2c744aafbd65037e5e17ef89c8e04ee4533b0e760751f02fded230cb0dc10
KECCAK256: offset=0, size=4, data=60000000, hash=d782e767c34755a74a3fe292876f71b4ac56dcf6fb1c7ee685da39020f7d2c22
KECCAK256: offset=0, size=4, data=61000000, hash=ddbe62d51f9b7bb1f8a9bdbdabfec39f0217d1f6ce20e4d71adaf97be15ed14f
KECCAK256: offset=0, size=4, data=62000000, hash=bde7fe15066f532209af5ab03e0899a1b140b0779a16f33ab485c23263b8c784
KECCAK256: offset=0, size=4, data=63000000, hash=cc26aa1ac8f5b1220594ea677c554edb9cc4da01423300583029bc7eac9dd032

ERROR: Undefined opcode 0x21 at pc=0

ERROR: Undefined opcode 0x22 at pc=0

ERROR: Undefined opcode 0x23 at pc=0

ERROR: Undefined opcode 0x24 at pc=0

ERROR: Undefined opcode 0x21 at pc=0

ERROR: Undefined opcode 0x22 at pc=0

ERROR: Undefined opcode 0x23 at pc=0

ERROR: Undefined opcode 0x24 at pc=0

ERROR: Undefined opcode 0x25 at pc=0

ERROR: Undefined opcode 0x26 at pc=0

ERROR: Undefined opcode 0x27 at pc=0

ERROR: Undefined opcode 0x28 at pc=0

ERROR: Undefined opcode 0x29 at pc=0

ERROR: Undefined opcode 0x2a at pc=0

ERROR: Undefined opcode 0x2b at pc=0

ERROR: Undefined opcode 0x2c at pc=0

ERROR: Undefined opcode 0x2d at pc=0

ERROR: Undefined opcode 0x2e at pc=0

ERROR: Undefined opcode 0x2f at pc=0

ERROR: Undefined opcode 0x4b at pc=0

ERROR: Undefined opcode 0x4c at pc=0

ERROR: Undefined opcode 0x4d at pc=0

ERROR: Undefined opcode 0x4e at pc=0

=== Starting SLOAD test ===
Test 1: Loading from empty slot 42
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=42
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=50000
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
Test 1: PASSED
Test 2: Loading from populated slot
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=100
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=47900
SLOAD: Getting storage value
SLOAD: Got value=3735928559
SLOAD: Pushed value to stack
Test 2: PASSED
Test 3: Loading multiple different slots
  Test 3.0: slot=0, value=1
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=0
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=45800
SLOAD: Getting storage value
SLOAD: Got value=1
SLOAD: Pushed value to stack
  Test 3.0: Stack value after SLOAD: 1
  Test 3.0: PASSED
  Test 3.1: slot=1, value=1000
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=1
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=43700
SLOAD: Getting storage value
SLOAD: Got value=1000
SLOAD: Pushed value to stack
  Test 3.1: Stack value after SLOAD: 1000
  Test 3.1: PASSED
  Test 3.2: slot=115792089237316195423570985008687907853269984665640564039457584007913129639935, value=42
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=115792089237316195423570985008687907853269984665640564039457584007913129639935
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=41600
SLOAD: Getting storage value
SLOAD: Got value=42
SLOAD: Pushed value to stack
  Test 3.2: Stack value after SLOAD: 42
  Test 3.2: PASSED
Test 3: PASSED

=== SLOAD test completed successfully ===


=== Starting SSTORE test ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=42
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=50000
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=42
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=47900
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack

ERROR: Undefined opcode 0x4f at pc=0
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:64:9: 0x102c8f543 in execute (opcodes-test)
        return ExecutionError.Error.InvalidOpcode;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
(37 additional stack frames skipped...)
error: 'create_call_comprehensive_test.test.CREATE (0xF0): Basic contract creation' failed: Before DUP3:
Stack (size=5): 0x55 0x44 0x33 0x22 0x11 
After DUP3:
Stack (size=6): 0x33 0x55 0x44 0x33 0x22 0x11 
Before DUP5:
Stack (size=7): 0x33 0x33 0x55 0x44 0x33 0x22 0x11 
After DUP5:
Stack (size=8): 0x33 0x33 0x33 0x55 0x44 0x33 0x22 0x11 
Stack (size=10): 0xa0 0x90 0x80 0x70 0x60 0x50 0x40 0x30 0x20 0x10 
After DUP6:
Stack (size=11): 0x50 0xa0 0x90 0x80 0x70 0x60 0x50 0x40 0x30 0x20 0x10 
After DUP7:
Stack (size=12): 0x50 0x50 0xa0 0x90 0x80 0x70 0x60 0x50 0x40 0x30 0x20 0x10 
After DUP8:
Stack (size=13): 0x50 0x50 0x50 0xa0 0x90 0x80 0x70 0x60 0x50 0x40 0x30 0x20 0x10 
After DUP9:
Stack (size=14): 0x50 0x50 0x50 0x50 0xa0 0x90 0x80 0x70 0x60 0x50 0x40 0x30 0x20 0x10 
After DUP10:
Stack (size=15): 0x50 0x50 0x50 0x50 0x50 0xa0 0x90 0x80 0x70 0x60 0x50 0x40 0x30 0x20 0x10 

DUP underflow test: Empty stack size = 0
DUP1 on empty stack result: error.StackUnderflow

Before DUP5, stack size=17, looking for 5th from top:
  Position 1 from top (index 16): 0x110
  Position 2 from top (index 15): 0x110
  Position 3 from top (index 14): 0xff
  Position 4 from top (index 13): 0xee
  Position 5 from top (index 12): 0xdd
  Position 6 from top (index 11): 0xcc
  Position 7 from top (index 10): 0xbb
  Position 8 from top (index 9): 0xaa
  Position 9 from top (index 8): 0x99
  Position 10 from top (index 7): 0x88
After DUP5, top of stack: 0xu256@10c7e4220
Before DUP9:
Stack (size=18): 0xdd 0x110 0x110 0xff 0xee 0xdd 0xcc 0xbb 0xaa 0x99 0x88 0x77 0x66 0x55 0x44 0x33 0x22 0x11 
After DUP9:
Stack (size=19): 0xaa 0xdd 0x110 0x110 0xff 0xee 0xdd 0xcc 0xbb 0xaa 0x99 0x88 0x77 0x66 0x55 0x44 0x33 0x22 0x11 
Before SWAP3:
Stack (size=6): 0x60 0x50 0x40 0x30 0x20 0x10 
After SWAP3:
Stack (size=6): 0x30 0x50 0x40 0x60 0x20 0x10 
Before SWAP3:
Stack (size=5): 0x55 0x44 0x33 0x22 0x11 
After SWAP3:
Stack (size=5): 0x22 0x44 0x33 0x55 0x11 
=== HELPER: Executing LOG opcode 0xa0 ===
*** LOG0: FUNCTION CALLED ***
LOG0: gas_remaining=9619
*** LOG0: offset=0, size=32, memory_size=32 ***
LOG0: popped offset=0, size=32)
LOG0: current memory size=32
LOG0: NON-EMPTY data path, size=32
LOG0: offset_usize=0, size_usize=32
LOG0: memory expansion: current=32, new=32, gas_cost=0
LOG0: byte_cost=256 (8 * 32)
LOG0: about to consume byte_cost gas
LOG0: successfully consumed byte_cost gas
LOG0: emitting log with data len=32, data={ 72, 101, 108, 108, 111, 44, 32, 69, 116, 104, 101, 114, 101, 117, 109, 32, 108, 111, 103, 115, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
=== HELPER: Executing LOG opcode 0xa1 ===
*** LOG1: FUNCTION CALLED ***
LOG1: gas_remaining=9241
*** LOG1: offset=32, size=16, memory_size=48 ***
LOG1: popped offset=32, size=16)
LOG1: current memory size=48
LOG1: popped topic -> topics[0]=100389287136786176327247604509743168900146139575972864366142685224231313322991
LOG1: NON-EMPTY data path, size=16
LOG1: offset_usize=32, size_usize=16
LOG1: memory expansion: current=48, new=48, gas_cost=0
LOG1: byte_cost=128 (8 * 16)
LOG1: about to consume byte_cost gas
LOG1: successfully consumed byte_cost gas
LOG1: emitting log with data len=16, data={ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
=== HELPER: Executing LOG opcode 0xa2 ===
*** LOG2: FUNCTION CALLED ***
LOG2: gas_remaining=8863
*** LOG2: offset=0, size=8, memory_size=24 ***
LOG2: popped offset=0, size=8)
LOG2: current memory size=24
LOG2: popped topic -> topics[1]=170
LOG2: popped topic -> topics[0]=187
LOG2: NON-EMPTY data path, size=8
LOG2: offset_usize=0, size_usize=8
LOG2: memory expansion: current=24, new=8, gas_cost=0
LOG2: byte_cost=64 (8 * 8)
LOG2: about to consume byte_cost gas
LOG2: successfully consumed byte_cost gas
LOG2: emitting log with data len=8, data={ 1, 2, 3, 4, 5, 6, 7, 8 }
=== HELPER: Executing LOG opcode 0xa3 ===
*** LOG3: FUNCTION CALLED ***
LOG3: gas_remaining=7284
*** LOG3: offset=8, size=8, memory_size=24 ***
LOG3: popped offset=8, size=8)
LOG3: current memory size=24
LOG3: popped topic -> topics[2]=204
LOG3: popped topic -> topics[1]=221
LOG3: popped topic -> topics[0]=238
LOG3: NON-EMPTY data path, size=8
LOG3: offset_usize=8, size_usize=8
LOG3: memory expansion: current=24, new=16, gas_cost=0
LOG3: byte_cost=64 (8 * 8)
LOG3: about to consume byte_cost gas
LOG3: successfully consumed byte_cost gas
LOG3: emitting log with data len=8, data={ 17, 18, 19, 20, 21, 22, 23, 24 }
=== HELPER: Executing LOG opcode 0xa4 ===
*** LOG4: FUNCTION CALLED ***
LOG4: gas_remaining=5327
*** LOG4: offset=16, size=8, memory_size=24 ***
LOG4: popped offset=16, size=8)
LOG4: current memory size=24
LOG4: popped topic -> topics[3]=17
LOG4: popped topic -> topics[2]=34
LOG4: popped topic -> topics[1]=51
LOG4: popped topic -> topics[0]=68
LOG4: NON-EMPTY data path, size=8
LOG4: offset_usize=16, size_usize=8
LOG4: memory expansion: current=24, new=24, gas_cost=0
LOG4: byte_cost=64 (8 * 8)
LOG4: about to consume byte_cost gas
LOG4: successfully consumed byte_cost gas
LOG4: emitting log with data len=8, data={ 33, 34, 35, 36, 37, 38, 39, 40 }
=== HELPER: Executing LOG opcode 0xa0 ===
*** LOG0: FUNCTION CALLED ***
LOG0: gas_remaining=9625
*** LOG0: offset=0, size=32, memory_size=0 ***
LOG0: popped offset=0, size=32)
LOG0: current memory size=0
LOG0: NON-EMPTY data path, size=32
LOG0: offset_usize=0, size_usize=32
LOG0: memory expansion: current=0, new=32, gas_cost=3
LOG0: byte_cost=256 (8 * 32)
LOG0: about to consume byte_cost gas
LOG0: successfully consumed byte_cost gas
LOG0: emitting log with data len=32, data={ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
=== HELPER: Executing LOG opcode 0xa1 ===
*** LOG1: FUNCTION CALLED ***
LOG1: gas_remaining=8616
*** LOG1: offset=0, size=16, memory_size=32 ***
LOG1: popped offset=0, size=16)
LOG1: current memory size=32
LOG1: popped topic -> topics[0]=291
LOG1: NON-EMPTY data path, size=16
LOG1: offset_usize=0, size_usize=16
LOG1: memory expansion: current=32, new=16, gas_cost=0
LOG1: byte_cost=128 (8 * 16)
LOG1: about to consume byte_cost gas
LOG1: successfully consumed byte_cost gas
LOG1: emitting log with data len=16, data={ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
=== HELPER: Executing LOG opcode 0xa4 ===
*** LOG4: FUNCTION CALLED ***
LOG4: gas_remaining=6613
*** LOG4: offset=0, size=0, memory_size=32 ***
LOG4: popped offset=0, size=0)
LOG4: current memory size=32
LOG4: popped topic -> topics[3]=1092
LOG4: popped topic -> topics[2]=819
LOG4: popped topic -> topics[1]=546
LOG4: popped topic -> topics[0]=273
LOG4: emitting empty log
=== HELPER: Executing LOG opcode 0xa0 ===
*** LOG0: FUNCTION CALLED ***
LOG0: gas_remaining=9625
=== HELPER: Executing LOG opcode 0xa0 ===
*** LOG0: FUNCTION CALLED ***
LOG0: gas_remaining=9250
=== HELPER: Executing LOG opcode 0xa1 ===
*** LOG1: FUNCTION CALLED ***
LOG1: gas_remaining=8500
=== HELPER: Executing LOG opcode 0xa2 ===
*** LOG2: FUNCTION CALLED ***
LOG2: gas_remaining=7375
=== HELPER: Executing LOG opcode 0xa3 ===
*** LOG3: FUNCTION CALLED ***
LOG3: gas_remaining=5875
=== HELPER: Executing LOG opcode 0xa4 ===
*** LOG4: FUNCTION CALLED ***
LOG4: gas_remaining=4000
=== HELPER: Executing LOG opcode 0xa0 ===
=== HELPER: Executing LOG opcode 0xa0 ===
=== HELPER: Executing LOG opcode 0xa4 ===
=== HELPER: Executing LOG opcode 0xa1 ===
*** LOG1: FUNCTION CALLED ***
LOG1: gas_remaining=9241
*** LOG1: offset=255, size=0, memory_size=0 ***
LOG1: popped offset=255, size=0)
LOG1: current memory size=0
LOG1: popped topic -> topics[0]=66
LOG1: emitting empty log
=== HELPER: Executing LOG opcode 0xa0 ===
*** LOG0: FUNCTION CALLED ***
LOG0: gas_remaining=9625
*** LOG0: offset=4096, size=32, memory_size=0 ***
LOG0: popped offset=4096, size=32)
LOG0: current memory size=0
LOG0: NON-EMPTY data path, size=32
LOG0: offset_usize=4096, size_usize=32
LOG0: memory expansion: current=0, new=4128, gas_cost=419
LOG0: byte_cost=256 (8 * 32)
LOG0: about to consume byte_cost gas
LOG0: successfully consumed byte_cost gas
LOG0: emitting log with data len=32, data={ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
=== HELPER: Executing LOG opcode 0xa3 ===
*** LOG3: FUNCTION CALLED ***
LOG3: gas_remaining=8485
*** LOG3: offset=0, size=32, memory_size=32 ***
LOG3: popped offset=0, size=32)
LOG3: current memory size=32
LOG3: popped topic -> topics[2]=100389287136786176327247604509743168900146139575972864366142685224231313322991
LOG3: popped topic -> topics[1]=97433442488726861213578988847752201310395502865
LOG3: popped topic -> topics[0]=194866884977453722427157977695504402620791005730
LOG3: NON-EMPTY data path, size=32
LOG3: offset_usize=0, size_usize=32
LOG3: memory expansion: current=32, new=32, gas_cost=0
LOG3: byte_cost=256 (8 * 32)
LOG3: about to consume byte_cost gas
LOG3: successfully consumed byte_cost gas
LOG3: emitting log with data len=32, data={ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 232 }
=== HELPER: Executing LOG opcode 0xa0 ===
*** LOG0: FUNCTION CALLED ***
LOG0: gas_remaining=9619
*** LOG0: offset=0, size=4, memory_size=12 ***
LOG0: popped offset=0, size=4)
LOG0: current memory size=12
LOG0: NON-EMPTY data path, size=4
LOG0: offset_usize=0, size_usize=4
LOG0: memory expansion: current=12, new=4, gas_cost=0
LOG0: byte_cost=32 (8 * 4)
LOG0: about to consume byte_cost gas
LOG0: successfully consumed byte_cost gas
LOG0: emitting log with data len=4, data={ 170, 187, 204, 221 }
=== HELPER: Executing LOG opcode 0xa1 ===
*** LOG1: FUNCTION CALLED ***
LOG1: gas_remaining=8828
*** LOG1: offset=4, size=4, memory_size=12 ***
LOG1: popped offset=4, size=4)
LOG1: current memory size=12
LOG1: popped topic -> topics[0]=153
LOG1: NON-EMPTY data path, size=4
LOG1: offset_usize=4, size_usize=4
LOG1: memory expansion: current=12, new=8, gas_cost=0
LOG1: byte_cost=32 (8 * 4)
LOG1: about to consume byte_cost gas
LOG1: successfully consumed byte_cost gas
LOG1: emitting log with data len=4, data={ 17, 34, 51, 68 }
=== HELPER: Executing LOG opcode 0xa0 ===
*** LOG0: FUNCTION CALLED ***
LOG0: gas_remaining=8415
*** LOG0: offset=8, size=4, memory_size=12 ***
LOG0: popped offset=8, size=4)
LOG0: current memory size=12
LOG0: NON-EMPTY data path, size=4
LOG0: offset_usize=8, size_usize=4
LOG0: memory expansion: current=12, new=12, gas_cost=0
LOG0: byte_cost=32 (8 * 4)
LOG0: about to consume byte_cost gas
LOG0: successfully consumed byte_cost gas
LOG0: emitting log with data len=4, data={ 255, 238, 221, 204 }
/Users/williamcory/tevm/main/src/evm/frame.zig:90:9: 0x102c93d77 in consume_gas (opcodes-test)
        return ExecutionError.Error.OutOfGas;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:73:9: 0x102c8f65b in execute (opcodes-test)
        try frame.consume_gas(operation.constant_gas);
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/test/evm/opcodes/create_call_comprehensive_test.zig:60:20: 0x102dd4aaf in test.CREATE (0xF0): Basic contract creation (opcodes-test)
    const result = try helpers.executeOpcode(0xF0, &test_vm.vm, test_frame.frame);
                   ^
error: 'create_call_comprehensive_test.test.CREATE: Static call protection' failed: expected error.WriteProtection, found error.OutOfGas
/Users/williamcory/tevm/main/src/evm/frame.zig:90:9: 0x102c93d77 in consume_gas (opcodes-test)
        return ExecutionError.Error.OutOfGas;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:73:9: 0x102c8f65b in execute (opcodes-test)
        try frame.consume_gas(operation.constant_gas);
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/opt/homebrew/Cellar/zig/0.14.0_2/lib/zig/std/testing.zig:57:13: 0x102d2a917 in expectError__anon_36440 (opcodes-test)
            return error.TestUnexpectedError;
            ^
/Users/williamcory/tevm/main/test/evm/opcodes/create_call_comprehensive_test.zig:102:5: 0x102dd53ff in test.CREATE: Static call protection (opcodes-test)
    try testing.expectError(helpers.ExecutionError.Error.WriteProtection, result);
    ^
error: 'create_call_comprehensive_test.test.CREATE: EIP-3860 initcode size limit' failed: CREATE: Calculated address: 0x504c121153ff3534566430504c2b05ad27c7cd6f for creator: 0x3333333333333333333333333333333333333333, nonce: 0
CREATE: Checking balance. Creator: 0x3333333333333333333333333333333333333333, balance: 0, required value: 49153
CREATE: Insufficient balance. Returning failure with zero address
expected error.MaxCodeSizeExceeded, found operation.ExecutionResult{ .bytes_consumed = 1, .output = {  } }
/opt/homebrew/Cellar/zig/0.14.0_2/lib/zig/std/testing.zig:50:9: 0x102d2a867 in expectError__anon_36440 (opcodes-test)
        return error.TestExpectedError;
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/create_call_comprehensive_test.zig:133:5: 0x102dd5967 in test.CREATE: EIP-3860 initcode size limit (opcodes-test)
    try testing.expectError(helpers.ExecutionError.Error.MaxCodeSizeExceeded, result);
    ^
error: 'create_call_comprehensive_test.test.CREATE: Depth limit' failed: /Users/williamcory/tevm/main/src/evm/frame.zig:90:9: 0x102c93d77 in consume_gas (opcodes-test)
        return ExecutionError.Error.OutOfGas;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:73:9: 0x102c8f65b in execute (opcodes-test)
        try frame.consume_gas(operation.constant_gas);
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/test/evm/opcodes/create_call_comprehensive_test.zig:163:20: 0x102dd5e83 in test.CREATE: Depth limit (opcodes-test)
    const result = try helpers.executeOpcode(0xF0, &test_vm.vm, test_frame.frame);
                   ^
error: 'create_call_comprehensive_test.test.CREATE2 (0xF5): Deterministic contract creation' failed: /Users/williamcory/tevm/main/src/evm/frame.zig:90:9: 0x102c93d77 in consume_gas (opcodes-test)
        return ExecutionError.Error.OutOfGas;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:73:9: 0x102c8f65b in execute (opcodes-test)
        try frame.consume_gas(operation.constant_gas);
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/test/evm/opcodes/create_call_comprehensive_test.zig:221:20: 0x102dd662b in test.CREATE2 (0xF5): Deterministic contract creation (opcodes-test)
    const result = try helpers.executeOpcode(0xF5, &test_vm.vm, test_frame.frame);
                   ^
error: 'create_call_comprehensive_test.test.CALL (0xF1): Basic external call' failed: /Users/williamcory/tevm/main/src/evm/opcodes/system.zig:23:9: 0x102ca02b3 in check_offset_bounds (opcodes-test)
        return ExecutionError.Error.InvalidOffset;
        ^
/Users/williamcory/tevm/main/src/evm/opcodes/system.zig:228:9: 0x102cdb107 in op_call (opcodes-test)
        try check_offset_bounds(ret_offset);
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:77:17: 0x102c8f6b3 in execute (opcodes-test)
    const res = try operation.execute(pc, interpreter, state);
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/test/evm/opcodes/create_call_comprehensive_test.zig:275:20: 0x102dd7187 in test.CALL (0xF1): Basic external call (opcodes-test)
    const result = try helpers.executeOpcode(0xF1, &test_vm.vm, test_frame.frame);
                   ^
error: 'create_call_comprehensive_test.test.CALL: Value transfer in static context' failed: expected error.WriteProtection, found error.InvalidOffset
/Users/williamcory/tevm/main/src/evm/opcodes/system.zig:23:9: 0x102ca02b3 in check_offset_bounds (opcodes-test)
        return ExecutionError.Error.InvalidOffset;
        ^
/Users/williamcory/tevm/main/src/evm/opcodes/system.zig:228:9: 0x102cdb107 in op_call (opcodes-test)
        try check_offset_bounds(ret_offset);
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:77:17: 0x102c8f6b3 in execute (opcodes-test)
    const res = try operation.execute(pc, interpreter, state);
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/opt/homebrew/Cellar/zig/0.14.0_2/lib/zig/std/testing.zig:57:13: 0x102d2a917 in expectError__anon_36440 (opcodes-test)
            return error.TestUnexpectedError;
            ^
/Users/williamcory/tevm/main/test/evm/opcodes/create_call_comprehensive_test.zig:319:5: 0x102dd7ce7 in test.CALL: Value transfer in static context (opcodes-test)
    try testing.expectError(helpers.ExecutionError.Error.WriteProtection, result);
    ^
error: 'create_call_comprehensive_test.test.CALL: Cold address access (EIP-2929)' failed: /Users/williamcory/tevm/main/src/evm/opcodes/system.zig:23:9: 0x102ca02b3 in check_offset_bounds (opcodes-test)
        return ExecutionError.Error.InvalidOffset;
        ^
/Users/williamcory/tevm/main/src/evm/opcodes/system.zig:228:9: 0x102cdb107 in op_call (opcodes-test)
        try check_offset_bounds(ret_offset);
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:77:17: 0x102c8f6b3 in execute (opcodes-test)
    const res = try operation.execute(pc, interpreter, state);
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/test/evm/opcodes/create_call_comprehensive_test.zig:362:9: 0x102dd851b in test.CALL: Cold address access (EIP-2929) (opcodes-test)
    _ = try helpers.executeOpcode(0xF1, &test_vm.vm, test_frame.frame);
        ^
error: 'create_call_comprehensive_test.test.CALLCODE (0xF2): Execute external code with current storage' failed: /Users/williamcory/tevm/main/src/evm/opcodes/system.zig:23:9: 0x102ca02b3 in check_offset_bounds (opcodes-test)
        return ExecutionError.Error.InvalidOffset;
        ^
/Users/williamcory/tevm/main/src/evm/opcodes/system.zig:323:9: 0x102cdc7d3 in op_callcode (opcodes-test)
        try check_offset_bounds(ret_offset);
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:77:17: 0x102c8f6b3 in execute (opcodes-test)
    const res = try operation.execute(pc, interpreter, state);
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/test/evm/opcodes/create_call_comprehensive_test.zig:409:20: 0x102dd8ddb in test.CALLCODE (0xF2): Execute external code with current storage (opcodes-test)
    const result = try helpers.executeOpcode(0xF2, &test_vm.vm, test_frame.frame);
                   ^
error: 'create_call_comprehensive_test.test.DELEGATECALL (0xF4): Execute with current context' failed: /Users/williamcory/tevm/main/src/evm/opcodes/system.zig:23:9: 0x102ca02b3 in check_offset_bounds (opcodes-test)
        return ExecutionError.Error.InvalidOffset;
        ^
/Users/williamcory/tevm/main/src/evm/opcodes/system.zig:417:9: 0x102c9f5f7 in op_delegatecall (opcodes-test)
        try check_offset_bounds(ret_offset);
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:77:17: 0x102c8f6b3 in execute (opcodes-test)
    const res = try operation.execute(pc, interpreter, state);
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/test/evm/opcodes/create_call_comprehensive_test.zig:459:20: 0x102dd981f in test.DELEGATECALL (0xF4): Execute with current context (opcodes-test)
    const result = try helpers.executeOpcode(0xF4, &test_vm.vm, test_frame.frame);
                   ^
error: 'create_call_comprehensive_test.test.STATICCALL (0xFA): Read-only external call' failed: /Users/williamcory/tevm/main/src/evm/opcodes/system.zig:23:9: 0x102ca02b3 in check_offset_bounds (opcodes-test)
        return ExecutionError.Error.InvalidOffset;
        ^
/Users/williamcory/tevm/main/src/evm/opcodes/system.zig:508:9: 0x102ca2c1b in op_staticcall (opcodes-test)
        try check_offset_bounds(ret_offset);
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:77:17: 0x102c8f6b3 in execute (opcodes-test)
    const res = try operation.execute(pc, interpreter, state);
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/test/evm/opcodes/create_call_comprehensive_test.zig:506:20: 0x102dda1b7 in test.STATICCALL (0xFA): Read-only external call (opcodes-test)
    const result = try helpers.executeOpcode(0xFA, &test_vm.vm, test_frame.frame);
                   ^
error: 'create_call_comprehensive_test.test.CREATE/CREATE2: Failed creation scenarios' failed: /Users/williamcory/tevm/main/src/evm/frame.zig:90:9: 0x102c93d77 in consume_gas (opcodes-test)
        return ExecutionError.Error.OutOfGas;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:73:9: 0x102c8f65b in execute (opcodes-test)
        try frame.consume_gas(operation.constant_gas);
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/test/evm/opcodes/create_call_comprehensive_test.zig:656:9: 0x102ddbed7 in test.CREATE/CREATE2: Failed creation scenarios (opcodes-test)
    _ = try helpers.executeOpcode(0xF0, &test_vm.vm, test_frame.frame);
        ^
error: 'control_system_comprehensive_test.test.SELFDESTRUCT: Static call protection' failed: expected error.WriteProtection, found error.OutOfGas
/Users/williamcory/tevm/main/src/evm/frame.zig:90:9: 0x102c93d77 in consume_gas (opcodes-test)
        return ExecutionError.Error.OutOfGas;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:73:9: 0x102c8f65b in execute (opcodes-test)
        try frame.consume_gas(operation.constant_gas);
        ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/opt/homebrew/Cellar/zig/0.14.0_2/lib/zig/std/testing.zig:57:13: 0x102d2a917 in expectError__anon_36440 (opcodes-test)
            return error.TestUnexpectedError;
            ^
/Users/williamcory/tevm/main/test/evm/opcodes/control_system_comprehensive_test.zig:281:5: 0x102dde56f in test.SELFDESTRUCT: Static call protection (opcodes-test)
    try testing.expectError(helpers.ExecutionError.Error.WriteProtection, result);
    ^
error: 'control_system_comprehensive_test.test.Control flow interaction: Call with REVERT' failed: /Users/williamcory/tevm/main/src/evm/opcodes/control.zig:134:5: 0x102cdd483 in op_return (opcodes-test)
    return ExecutionError.Error.STOP; // RETURN ends execution normally
    ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:77:17: 0x102c8f6b3 in execute (opcodes-test)
    const res = try operation.execute(pc, interpreter, state);
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/opcodes/control.zig:175:5: 0x102ca1dbf in op_revert (opcodes-test)
    return ExecutionError.Error.REVERT;
    ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:77:17: 0x102c8f6b3 in execute (opcodes-test)
    const res = try operation.execute(pc, interpreter, state);
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/opcodes/system.zig:23:9: 0x102ca02b3 in check_offset_bounds (opcodes-test)
        return ExecutionError.Error.InvalidOffset;
        ^
/Users/williamcory/tevm/main/src/evm/opcodes/system.zig:228:9: 0x102cdb107 in op_call (opcodes-test)
        try check_offset_bounds(ret_offset);
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:77:17: 0x102c8f6b3 in execute (opcodes-test)
    const res = try operation.execute(pc, interpreter, state);
                ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/test/evm/opcodes/control_system_comprehensive_test.zig:468:9: 0x102de0483 in test.Control flow interaction: Call with REVERT (opcodes-test)
    _ = try helpers.executeOpcode(0xF1, &test_vm.vm, test_frame.frame);
        ^
error: 'storage_comprehensive_test.test.SSTORE (0x55): Store to storage' failed: === HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=66
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=3000
SLOAD: Getting storage value
SLOAD: Got value=1193046
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=153
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=3000
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=16
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=6000
SLOAD: Getting storage value
SLOAD: Got value=11259375
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=16
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=3900
SLOAD: Getting storage value
SLOAD: Got value=11259375
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=16
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=3800
SLOAD: Getting storage value
SLOAD: Got value=11259375
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=256
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=true, gas_cost=2100, gas_remaining=10000
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x54 ===

JUMP_TABLE: Executing SLOAD (0x54), operation.undefined=false
SLOAD: popped slot=256
SLOAD: Berlin rules, checking cold/warm
SLOAD: is_cold=false, gas_cost=100, gas_remaining=7900
SLOAD: Getting storage value
SLOAD: Got value=0
SLOAD: Pushed value to stack
=== HELPER: Executing opcode 0x55 ===
expected 2457, found 0
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
/Users/williamcory/tevm/main/test/evm/opcodes/test_helpers.zig:237:12: 0x102c90813 in executeOpcode (opcodes-test)
    return try vm.table.execute(frame.pc, interpreter_ptr, state_ptr, opcode_byte);
           ^
/Users/williamcory/tevm/main/src/evm/stack_validation.zig:15:9: 0x102c93cb7 in validate_stack_requirements (opcodes-test)
        return ExecutionError.Error.StackUnderflow;
        ^
/Users/williamcory/tevm/main/src/evm/jump_table.zig:69:5: 0x102c8f59f in execute (opcodes-test)
    try stack_validation.validate_stack_requirements(&frame.stack, operation);
    ^
(45 additional stack frames skipped...)
error: 'storage_comprehensive_test.test.SSTORE: EIP-2200 gas cost scenarios' failed: === HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
=== HELPER: Executing opcode 0x55 ===
/opt/homebrew/Cellar/zig/0.14.0_2/lib/zig/std/testing.zig:580:14: 0x102d28a2b in expect (opcodes-test)
    if (!ok) return error.TestUnexpectedResult;
             ^
/Users/williamcory/tevm/main/test/evm/opcodes/storage_comprehensive_test.zig:275:5: 0x102df8e1b in test.SSTORE: EIP-2200 gas cost scenarios (opcodes-test)
    try testing.expect(gas_update < gas_fresh);
    ^
error: while executing test 'storage_comprehensive_test.test.SSTORE: Overwriting values', the following test command failed:
/Users/williamcory/tevm/main/.zig-cache/o/bd46a1c821ff81eed90fc85cdc538b19/opcodes-test --seed=0x5bc3b26d --cache-dir=/Users/williamcory/tevm/main/.zig-cache --listen=- 
Build Summary: 47/51 steps succeeded; 3 failed; 689/719 tests passed; 2 skipped; 28 failed
test transitive failure
+- run opcodes-test 384/401 passed, 17 failed
+- run vm-opcode-test 69/73 passed, 4 failed
+- run integration-test 33/40 passed, 7 failed
error: the following build command failed with exit code 1:
/Users/williamcory/tevm/main/.zig-cache/o/9a8d3b5243781642296bcfe0d882567e/build /opt/homebrew/Cellar/zig/0.14.0_2/bin/zig /opt/homebrew/Cellar/zig/0.14.0_2/lib/zig /Users/williamcory/tevm/main /Users/williamcory/tevm/main/.zig-cache /Users/williamcory/.cache/zig --seed 0x5bc3b26d -Z0c1a3e7c83e235e9 test
