{"version":3,"sources":["../src/createTsupOptions.js","../src/targets.js","../src/browser.js","../src/js.js","../src/node.js"],"names":[],"mappings":";AAAA,SAAS,oBAAoB;AAC7B,SAAS,YAAY;;;ACErB,IAAM,cAAc,CAAC,QAAQ;AAI7B,IAAM,iBAAiB,CAAC,YAAY,aAAa,UAAU,YAAY,SAAS,SAAS;AASlF,IAAM,UAAU;AAAA;AAAA,EAEtB,IAAI;AAAA;AAAA,EAEJ,MAAM;AAAA;AAAA,EAEN,SAAS;AACV;;;ADVO,IAAM,oBAAoB,CAAC;AAAA,EACjC,QAAQ,CAAC,cAAc;AAAA,EACvB,SAAS;AAAA,EACT,SAAS;AAAA,EACT,SAAS,CAAC,OAAO,KAAK;AACvB,MAAM;AACL,QAAM,EAAE,KAAK,IAAI,KAAK,MAAM,aAAa,KAAK,QAAQ,IAAI,GAAG,cAAc,GAAG,OAAO,CAAC;AAEtF,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA,QAAQ,QAAQ,MAAM;AAAA,IACtB;AAAA,IACA,WAAW;AAAA,IACX,WAAW;AAAA,IACX,WAAW;AAAA,IACX,OAAO;AAAA,IACP,uBAAuB;AAAA,EACxB;AACD;;;AE/BO,IAAM,UAAU,kBAAkB;AAAA,EACxC,QAAQ;AACT,CAAC;;;ACFM,IAAM,KAAK,kBAAkB;AAAA,EACnC,QAAQ;AACT,CAAC;;;ACFM,IAAM,OAAO,kBAAkB;AAAA,EACrC,QAAQ;AACT,CAAC","sourcesContent":["import { readFileSync } from 'node:fs'\nimport { join } from 'node:path'\nimport { targets } from './targets.js'\n\n/**\n * Creates tsup options from params\n * @param {object} options\n * @param {Array<string>} [options.entry] - entry points Defaults to src/index.js\n * @param {string} [options.outDir] - output directory Defaults to dist\n * @param {import('./targets.js').Target} [options.target] - environment to target Defaults to js\n * @param {Array<'cjs' | 'esm'>} [options.format] - module format Defaults to cjs and esm\n * @returns {import('tsup').Options}\n */\nexport const createTsUpOptions = ({\n\tentry = ['src/index.js'],\n\toutDir = 'dist',\n\ttarget = 'js',\n\tformat = ['cjs', 'esm'],\n}) => {\n\tconst { name } = JSON.parse(readFileSync(join(process.cwd(), 'package.json'), 'utf-8'))\n\n\treturn {\n\t\tname,\n\t\tentry,\n\t\toutDir,\n\t\ttarget: targets[target],\n\t\tformat,\n\t\tsplitting: false,\n\t\ttreeshake: true,\n\t\tsourcemap: true,\n\t\tclean: false,\n\t\tskipNodeModulesBundle: true,\n\t}\n}\n","/**\n * @type {import('tsup').Options['target']}\n */\nconst nodeTargets = ['node16']\n/**\n * @type {import('tsup').Options['target']}\n */\nconst browserTargets = ['chrome91', 'firefox90', 'edge91', 'safari15', 'ios15', 'opera77']\n\n/**\n * @typedef {'js' | 'node' | 'browser'} Target\n */\n\n/**\n * @type {Record<Target, Exclude<import('tsup').Options['target'], undefined>>}\n */\nexport const targets = {\n\t// target both node and browser applications\n\tjs: browserTargets,\n\t// target node applications\n\tnode: nodeTargets,\n\t// target browsers\n\tbrowser: browserTargets,\n}\n","import { createTsUpOptions } from './createTsupOptions.js'\n\nexport const browser = createTsUpOptions({\n\ttarget: 'browser',\n})\n","import { createTsUpOptions } from './createTsupOptions.js'\n\nexport const js = createTsUpOptions({\n\ttarget: 'js',\n})\n","import { createTsUpOptions } from './createTsupOptions.js'\n\nexport const node = createTsUpOptions({\n\ttarget: 'node',\n})\n"]}