// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`parse{"type":"Bytes1","value":"0xff","invalidHex":"ff","toBig":"0xffff","toSmall":"0x"} > should return a valid Bytes1 > "0xff" 1`] = `"0xff"`;

exports[`parse{"type":"Bytes1","value":"0xff","invalidHex":"ff","toBig":"0xffff","toSmall":"0x"} > should throw if value is not a valid string for Bytes1 1`] = `
"InvalidBytesFixedError: Received ff is not of correct length for Bytes1. Expected length: 4.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes1","value":"0xff","invalidHex":"ff","toBig":"0xffff","toSmall":"0x"} > should throw if value is not a valid string for Bytes1 2`] = `
"InvalidBytesFixedError: Received 0x is not of correct length for Bytes1. Expected length: 4.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes1","value":"0xff","invalidHex":"ff","toBig":"0xffff","toSmall":"0x"} > should throw if value is not a valid string for Bytes1 3`] = `
"InvalidBytesFixedError: Received 0xffff is not of correct length for Bytes1. Expected length: 4.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes1","value":"0xff","invalidHex":"ff","toBig":"0xffff","toSmall":"0x"} > should throw if value is not a valid string for Bytes1 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes1. Expected length: 4.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes1","value":"0xff","invalidHex":"ff","toBig":"0xffff","toSmall":"0x"} > should throw if value is not a valid string for Bytes1 5`] = `
"InvalidBytesFixedError: Received 255 is not of correct length for Bytes1. Expected length: 4.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes2","value":"0xffaa","invalidHex":"ffaabb","toBig":"0xffffaa","toSmall":"0xff"} > should return a valid Bytes2 > "0xffaa" 1`] = `"0xffaa"`;

exports[`parse{"type":"Bytes2","value":"0xffaa","invalidHex":"ffaabb","toBig":"0xffffaa","toSmall":"0xff"} > should throw if value is not a valid string for Bytes2 1`] = `
"InvalidBytesFixedError: Received ffaabb is not of correct length for Bytes2. Expected length: 6.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes2","value":"0xffaa","invalidHex":"ffaabb","toBig":"0xffffaa","toSmall":"0xff"} > should throw if value is not a valid string for Bytes2 2`] = `
"InvalidBytesFixedError: Received 0xff is not of correct length for Bytes2. Expected length: 6.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes2","value":"0xffaa","invalidHex":"ffaabb","toBig":"0xffffaa","toSmall":"0xff"} > should throw if value is not a valid string for Bytes2 3`] = `
"InvalidBytesFixedError: Received 0xffffaa is not of correct length for Bytes2. Expected length: 6.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes2","value":"0xffaa","invalidHex":"ffaabb","toBig":"0xffffaa","toSmall":"0xff"} > should throw if value is not a valid string for Bytes2 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes2. Expected length: 6.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes2","value":"0xffaa","invalidHex":"ffaabb","toBig":"0xffffaa","toSmall":"0xff"} > should throw if value is not a valid string for Bytes2 5`] = `
"InvalidBytesFixedError: Received 65450 is not of correct length for Bytes2. Expected length: 6.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes3","value":"0xffaabb","invalidHex":"ffaabbcc","toBig":"0xffffaabb","toSmall":"0xffaa"} > should return a valid Bytes3 > "0xffaabb" 1`] = `"0xffaabb"`;

exports[`parse{"type":"Bytes3","value":"0xffaabb","invalidHex":"ffaabbcc","toBig":"0xffffaabb","toSmall":"0xffaa"} > should throw if value is not a valid string for Bytes3 1`] = `
"InvalidBytesFixedError: Received ffaabbcc is not of correct length for Bytes3. Expected length: 8.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes3","value":"0xffaabb","invalidHex":"ffaabbcc","toBig":"0xffffaabb","toSmall":"0xffaa"} > should throw if value is not a valid string for Bytes3 2`] = `
"InvalidBytesFixedError: Received 0xffaa is not of correct length for Bytes3. Expected length: 8.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes3","value":"0xffaabb","invalidHex":"ffaabbcc","toBig":"0xffffaabb","toSmall":"0xffaa"} > should throw if value is not a valid string for Bytes3 3`] = `
"InvalidBytesFixedError: Received 0xffffaabb is not of correct length for Bytes3. Expected length: 8.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes3","value":"0xffaabb","invalidHex":"ffaabbcc","toBig":"0xffffaabb","toSmall":"0xffaa"} > should throw if value is not a valid string for Bytes3 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes3. Expected length: 8.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes3","value":"0xffaabb","invalidHex":"ffaabbcc","toBig":"0xffffaabb","toSmall":"0xffaa"} > should throw if value is not a valid string for Bytes3 5`] = `
"InvalidBytesFixedError: Received 16755387 is not of correct length for Bytes3. Expected length: 8.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes4","value":"0xffaabbcc","invalidHex":"ffaabbccdd","toBig":"0xffffaabbcc","toSmall":"0xffaabb"} > should return a valid Bytes4 > "0xffaabbcc" 1`] = `"0xffaabbcc"`;

exports[`parse{"type":"Bytes4","value":"0xffaabbcc","invalidHex":"ffaabbccdd","toBig":"0xffffaabbcc","toSmall":"0xffaabb"} > should throw if value is not a valid string for Bytes4 1`] = `
"InvalidBytesFixedError: Received ffaabbccdd is not of correct length for Bytes4. Expected length: 10.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes4","value":"0xffaabbcc","invalidHex":"ffaabbccdd","toBig":"0xffffaabbcc","toSmall":"0xffaabb"} > should throw if value is not a valid string for Bytes4 2`] = `
"InvalidBytesFixedError: Received 0xffaabb is not of correct length for Bytes4. Expected length: 10.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes4","value":"0xffaabbcc","invalidHex":"ffaabbccdd","toBig":"0xffffaabbcc","toSmall":"0xffaabb"} > should throw if value is not a valid string for Bytes4 3`] = `
"InvalidBytesFixedError: Received 0xffffaabbcc is not of correct length for Bytes4. Expected length: 10.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes4","value":"0xffaabbcc","invalidHex":"ffaabbccdd","toBig":"0xffffaabbcc","toSmall":"0xffaabb"} > should throw if value is not a valid string for Bytes4 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes4. Expected length: 10.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes4","value":"0xffaabbcc","invalidHex":"ffaabbccdd","toBig":"0xffffaabbcc","toSmall":"0xffaabb"} > should throw if value is not a valid string for Bytes4 5`] = `
"InvalidBytesFixedError: Received 4289379276 is not of correct length for Bytes4. Expected length: 10.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes5","value":"0xffaabbccdd","invalidHex":"ffaabbccddee","toBig":"0xffffaabbccdd","toSmall":"0xffaabbcc"} > should return a valid Bytes5 > "0xffaabbccdd" 1`] = `"0xffaabbccdd"`;

exports[`parse{"type":"Bytes5","value":"0xffaabbccdd","invalidHex":"ffaabbccddee","toBig":"0xffffaabbccdd","toSmall":"0xffaabbcc"} > should throw if value is not a valid string for Bytes5 1`] = `
"InvalidBytesFixedError: Received ffaabbccddee is not of correct length for Bytes5. Expected length: 12.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes5","value":"0xffaabbccdd","invalidHex":"ffaabbccddee","toBig":"0xffffaabbccdd","toSmall":"0xffaabbcc"} > should throw if value is not a valid string for Bytes5 2`] = `
"InvalidBytesFixedError: Received 0xffaabbcc is not of correct length for Bytes5. Expected length: 12.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes5","value":"0xffaabbccdd","invalidHex":"ffaabbccddee","toBig":"0xffffaabbccdd","toSmall":"0xffaabbcc"} > should throw if value is not a valid string for Bytes5 3`] = `
"InvalidBytesFixedError: Received 0xffffaabbccdd is not of correct length for Bytes5. Expected length: 12.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes5","value":"0xffaabbccdd","invalidHex":"ffaabbccddee","toBig":"0xffffaabbccdd","toSmall":"0xffaabbcc"} > should throw if value is not a valid string for Bytes5 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes5. Expected length: 12.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes5","value":"0xffaabbccdd","invalidHex":"ffaabbccddee","toBig":"0xffffaabbccdd","toSmall":"0xffaabbcc"} > should throw if value is not a valid string for Bytes5 5`] = `
"InvalidBytesFixedError: Received 1098081094877 is not of correct length for Bytes5. Expected length: 12.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes6","value":"0xaabbccddeeff","invalidHex":"ffaabbccddeeff00","toBig":"0xffaabbccddeeff","toSmall":"0xaabbccdd"} > should return a valid Bytes6 > "0xaabbccddeeff" 1`] = `"0xaabbccddeeff"`;

exports[`parse{"type":"Bytes6","value":"0xaabbccddeeff","invalidHex":"ffaabbccddeeff00","toBig":"0xffaabbccddeeff","toSmall":"0xaabbccdd"} > should throw if value is not a valid string for Bytes6 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff00 is not of correct length for Bytes6. Expected length: 14.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes6","value":"0xaabbccddeeff","invalidHex":"ffaabbccddeeff00","toBig":"0xffaabbccddeeff","toSmall":"0xaabbccdd"} > should throw if value is not a valid string for Bytes6 2`] = `
"InvalidBytesFixedError: Received 0xaabbccdd is not of correct length for Bytes6. Expected length: 14.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes6","value":"0xaabbccddeeff","invalidHex":"ffaabbccddeeff00","toBig":"0xffaabbccddeeff","toSmall":"0xaabbccdd"} > should throw if value is not a valid string for Bytes6 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff is not of correct length for Bytes6. Expected length: 14.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes6","value":"0xaabbccddeeff","invalidHex":"ffaabbccddeeff00","toBig":"0xffaabbccddeeff","toSmall":"0xaabbccdd"} > should throw if value is not a valid string for Bytes6 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes6. Expected length: 14.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes6","value":"0xaabbccddeeff","invalidHex":"ffaabbccddeeff00","toBig":"0xffaabbccddeeff","toSmall":"0xaabbccdd"} > should throw if value is not a valid string for Bytes6 5`] = `
"InvalidBytesFixedError: Received 187723572702975 is not of correct length for Bytes6. Expected length: 14.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes7","value":"0xaabbccddeeff00","invalidHex":"ffaabbccddeeff0011","toBig":"0xffaabbccddeeff00","toSmall":"0xaabbccddeeff"} > should return a valid Bytes7 > "0xaabbccddeeff00" 1`] = `"0xaabbccddeeff00"`;

exports[`parse{"type":"Bytes7","value":"0xaabbccddeeff00","invalidHex":"ffaabbccddeeff0011","toBig":"0xffaabbccddeeff00","toSmall":"0xaabbccddeeff"} > should throw if value is not a valid string for Bytes7 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff0011 is not of correct length for Bytes7. Expected length: 16.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes7","value":"0xaabbccddeeff00","invalidHex":"ffaabbccddeeff0011","toBig":"0xffaabbccddeeff00","toSmall":"0xaabbccddeeff"} > should throw if value is not a valid string for Bytes7 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff is not of correct length for Bytes7. Expected length: 16.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes7","value":"0xaabbccddeeff00","invalidHex":"ffaabbccddeeff0011","toBig":"0xffaabbccddeeff00","toSmall":"0xaabbccddeeff"} > should throw if value is not a valid string for Bytes7 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff00 is not of correct length for Bytes7. Expected length: 16.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes7","value":"0xaabbccddeeff00","invalidHex":"ffaabbccddeeff0011","toBig":"0xffaabbccddeeff00","toSmall":"0xaabbccddeeff"} > should throw if value is not a valid string for Bytes7 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes7. Expected length: 16.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes7","value":"0xaabbccddeeff00","invalidHex":"ffaabbccddeeff0011","toBig":"0xffaabbccddeeff00","toSmall":"0xaabbccddeeff"} > should throw if value is not a valid string for Bytes7 5`] = `
"InvalidBytesFixedError: Received 48057234611961600 is not of correct length for Bytes7. Expected length: 16.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes8","value":"0xaabbccddeeff0011","invalidHex":"ffaabbccddeeff001122","toBig":"0xffaabbccddeeff0011","toSmall":"0xaabbccddeeff00"} > should return a valid Bytes8 > "0xaabbccddeeff0011" 1`] = `"0xaabbccddeeff0011"`;

exports[`parse{"type":"Bytes8","value":"0xaabbccddeeff0011","invalidHex":"ffaabbccddeeff001122","toBig":"0xffaabbccddeeff0011","toSmall":"0xaabbccddeeff00"} > should throw if value is not a valid string for Bytes8 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff001122 is not of correct length for Bytes8. Expected length: 18.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes8","value":"0xaabbccddeeff0011","invalidHex":"ffaabbccddeeff001122","toBig":"0xffaabbccddeeff0011","toSmall":"0xaabbccddeeff00"} > should throw if value is not a valid string for Bytes8 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff00 is not of correct length for Bytes8. Expected length: 18.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes8","value":"0xaabbccddeeff0011","invalidHex":"ffaabbccddeeff001122","toBig":"0xffaabbccddeeff0011","toSmall":"0xaabbccddeeff00"} > should throw if value is not a valid string for Bytes8 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff0011 is not of correct length for Bytes8. Expected length: 18.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes8","value":"0xaabbccddeeff0011","invalidHex":"ffaabbccddeeff001122","toBig":"0xffaabbccddeeff0011","toSmall":"0xaabbccddeeff00"} > should throw if value is not a valid string for Bytes8 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes8. Expected length: 18.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes8","value":"0xaabbccddeeff0011","invalidHex":"ffaabbccddeeff001122","toBig":"0xffaabbccddeeff0011","toSmall":"0xaabbccddeeff00"} > should throw if value is not a valid string for Bytes8 5`] = `
"InvalidBytesFixedError: Received 12302652060662169617 is not of correct length for Bytes8. Expected length: 18.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes9","value":"0xaabbccddeeff001122","invalidHex":"ffaabbccddeeff00112233","toBig":"0xffaabbccddeeff001122","toSmall":"0xaabbccddeeff0011"} > should return a valid Bytes9 > "0xaabbccddeeff001122" 1`] = `"0xaabbccddeeff001122"`;

exports[`parse{"type":"Bytes9","value":"0xaabbccddeeff001122","invalidHex":"ffaabbccddeeff00112233","toBig":"0xffaabbccddeeff001122","toSmall":"0xaabbccddeeff0011"} > should throw if value is not a valid string for Bytes9 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff00112233 is not of correct length for Bytes9. Expected length: 20.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes9","value":"0xaabbccddeeff001122","invalidHex":"ffaabbccddeeff00112233","toBig":"0xffaabbccddeeff001122","toSmall":"0xaabbccddeeff0011"} > should throw if value is not a valid string for Bytes9 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff0011 is not of correct length for Bytes9. Expected length: 20.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes9","value":"0xaabbccddeeff001122","invalidHex":"ffaabbccddeeff00112233","toBig":"0xffaabbccddeeff001122","toSmall":"0xaabbccddeeff0011"} > should throw if value is not a valid string for Bytes9 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff001122 is not of correct length for Bytes9. Expected length: 20.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes9","value":"0xaabbccddeeff001122","invalidHex":"ffaabbccddeeff00112233","toBig":"0xffaabbccddeeff001122","toSmall":"0xaabbccddeeff0011"} > should throw if value is not a valid string for Bytes9 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes9. Expected length: 20.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes9","value":"0xaabbccddeeff001122","invalidHex":"ffaabbccddeeff00112233","toBig":"0xffaabbccddeeff001122","toSmall":"0xaabbccddeeff0011"} > should throw if value is not a valid string for Bytes9 5`] = `
"InvalidBytesFixedError: Received 3149478927529515421986 is not of correct length for Bytes9. Expected length: 20.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes10","value":"0xaabbccddeeff00112233","invalidHex":"ffaabbccddeeff0011223344","toBig":"0xffaabbccddeeff00112233","toSmall":"0xaabbccddeeff001122"} > should return a valid Bytes10 > "0xaabbccddeeff00112233" 1`] = `"0xaabbccddeeff00112233"`;

exports[`parse{"type":"Bytes10","value":"0xaabbccddeeff00112233","invalidHex":"ffaabbccddeeff0011223344","toBig":"0xffaabbccddeeff00112233","toSmall":"0xaabbccddeeff001122"} > should throw if value is not a valid string for Bytes10 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff0011223344 is not of correct length for Bytes10. Expected length: 22.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes10","value":"0xaabbccddeeff00112233","invalidHex":"ffaabbccddeeff0011223344","toBig":"0xffaabbccddeeff00112233","toSmall":"0xaabbccddeeff001122"} > should throw if value is not a valid string for Bytes10 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff001122 is not of correct length for Bytes10. Expected length: 22.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes10","value":"0xaabbccddeeff00112233","invalidHex":"ffaabbccddeeff0011223344","toBig":"0xffaabbccddeeff00112233","toSmall":"0xaabbccddeeff001122"} > should throw if value is not a valid string for Bytes10 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff00112233 is not of correct length for Bytes10. Expected length: 22.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes10","value":"0xaabbccddeeff00112233","invalidHex":"ffaabbccddeeff0011223344","toBig":"0xffaabbccddeeff00112233","toSmall":"0xaabbccddeeff001122"} > should throw if value is not a valid string for Bytes10 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes10. Expected length: 22.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes10","value":"0xaabbccddeeff00112233","invalidHex":"ffaabbccddeeff0011223344","toBig":"0xffaabbccddeeff00112233","toSmall":"0xaabbccddeeff001122"} > should throw if value is not a valid string for Bytes10 5`] = `
"InvalidBytesFixedError: Received 806266605447555948028467 is not of correct length for Bytes10. Expected length: 22.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes11","value":"0xaabbccddeeff0011223344","invalidHex":"ffaabbccddeeff001122334455","toBig":"0xffaabbccddeeff0011223344","toSmall":"0xaabbccddeeff00112233"} > should return a valid Bytes11 > "0xaabbccddeeff0011223344" 1`] = `"0xaabbccddeeff0011223344"`;

exports[`parse{"type":"Bytes11","value":"0xaabbccddeeff0011223344","invalidHex":"ffaabbccddeeff001122334455","toBig":"0xffaabbccddeeff0011223344","toSmall":"0xaabbccddeeff00112233"} > should throw if value is not a valid string for Bytes11 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff001122334455 is not of correct length for Bytes11. Expected length: 24.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes11","value":"0xaabbccddeeff0011223344","invalidHex":"ffaabbccddeeff001122334455","toBig":"0xffaabbccddeeff0011223344","toSmall":"0xaabbccddeeff00112233"} > should throw if value is not a valid string for Bytes11 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff00112233 is not of correct length for Bytes11. Expected length: 24.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes11","value":"0xaabbccddeeff0011223344","invalidHex":"ffaabbccddeeff001122334455","toBig":"0xffaabbccddeeff0011223344","toSmall":"0xaabbccddeeff00112233"} > should throw if value is not a valid string for Bytes11 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff0011223344 is not of correct length for Bytes11. Expected length: 24.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes11","value":"0xaabbccddeeff0011223344","invalidHex":"ffaabbccddeeff001122334455","toBig":"0xffaabbccddeeff0011223344","toSmall":"0xaabbccddeeff00112233"} > should throw if value is not a valid string for Bytes11 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes11. Expected length: 24.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes11","value":"0xaabbccddeeff0011223344","invalidHex":"ffaabbccddeeff001122334455","toBig":"0xffaabbccddeeff0011223344","toSmall":"0xaabbccddeeff00112233"} > should throw if value is not a valid string for Bytes11 5`] = `
"InvalidBytesFixedError: Received 206404250994574322695287620 is not of correct length for Bytes11. Expected length: 24.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes12","value":"0xaabbccddeeff001122334455","invalidHex":"ffaabbccddeeff00112233445566","toBig":"0xffaabbccddeeff001122334455","toSmall":"0xaabbccddeeff0011223344"} > should return a valid Bytes12 > "0xaabbccddeeff001122334455" 1`] = `"0xaabbccddeeff001122334455"`;

exports[`parse{"type":"Bytes12","value":"0xaabbccddeeff001122334455","invalidHex":"ffaabbccddeeff00112233445566","toBig":"0xffaabbccddeeff001122334455","toSmall":"0xaabbccddeeff0011223344"} > should throw if value is not a valid string for Bytes12 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff00112233445566 is not of correct length for Bytes12. Expected length: 26.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes12","value":"0xaabbccddeeff001122334455","invalidHex":"ffaabbccddeeff00112233445566","toBig":"0xffaabbccddeeff001122334455","toSmall":"0xaabbccddeeff0011223344"} > should throw if value is not a valid string for Bytes12 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff0011223344 is not of correct length for Bytes12. Expected length: 26.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes12","value":"0xaabbccddeeff001122334455","invalidHex":"ffaabbccddeeff00112233445566","toBig":"0xffaabbccddeeff001122334455","toSmall":"0xaabbccddeeff0011223344"} > should throw if value is not a valid string for Bytes12 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff001122334455 is not of correct length for Bytes12. Expected length: 26.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes12","value":"0xaabbccddeeff001122334455","invalidHex":"ffaabbccddeeff00112233445566","toBig":"0xffaabbccddeeff001122334455","toSmall":"0xaabbccddeeff0011223344"} > should throw if value is not a valid string for Bytes12 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes12. Expected length: 26.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes12","value":"0xaabbccddeeff001122334455","invalidHex":"ffaabbccddeeff00112233445566","toBig":"0xffaabbccddeeff001122334455","toSmall":"0xaabbccddeeff0011223344"} > should throw if value is not a valid string for Bytes12 5`] = `
"InvalidBytesFixedError: Received 52839488254611026609993630805 is not of correct length for Bytes12. Expected length: 26.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes13","value":"0xaabbccddeeff00112233445566","invalidHex":"ffaabbccddeeff0011223344556677","toBig":"0xffaabbccddeeff00112233445566","toSmall":"0xaabbccddeeff001122334455"} > should return a valid Bytes13 > "0xaabbccddeeff00112233445566" 1`] = `"0xaabbccddeeff00112233445566"`;

exports[`parse{"type":"Bytes13","value":"0xaabbccddeeff00112233445566","invalidHex":"ffaabbccddeeff0011223344556677","toBig":"0xffaabbccddeeff00112233445566","toSmall":"0xaabbccddeeff001122334455"} > should throw if value is not a valid string for Bytes13 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff0011223344556677 is not of correct length for Bytes13. Expected length: 28.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes13","value":"0xaabbccddeeff00112233445566","invalidHex":"ffaabbccddeeff0011223344556677","toBig":"0xffaabbccddeeff00112233445566","toSmall":"0xaabbccddeeff001122334455"} > should throw if value is not a valid string for Bytes13 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff001122334455 is not of correct length for Bytes13. Expected length: 28.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes13","value":"0xaabbccddeeff00112233445566","invalidHex":"ffaabbccddeeff0011223344556677","toBig":"0xffaabbccddeeff00112233445566","toSmall":"0xaabbccddeeff001122334455"} > should throw if value is not a valid string for Bytes13 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff00112233445566 is not of correct length for Bytes13. Expected length: 28.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes13","value":"0xaabbccddeeff00112233445566","invalidHex":"ffaabbccddeeff0011223344556677","toBig":"0xffaabbccddeeff00112233445566","toSmall":"0xaabbccddeeff001122334455"} > should throw if value is not a valid string for Bytes13 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes13. Expected length: 28.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes13","value":"0xaabbccddeeff00112233445566","invalidHex":"ffaabbccddeeff0011223344556677","toBig":"0xffaabbccddeeff00112233445566","toSmall":"0xaabbccddeeff001122334455"} > should throw if value is not a valid string for Bytes13 5`] = `
"InvalidBytesFixedError: Received 13526908993180422812158369486182 is not of correct length for Bytes13. Expected length: 28.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes14","value":"0xaabbccddeeff0011223344556677","invalidHex":"ffaabbccddeeff001122334455667788","toBig":"0xffaabbccddeeff0011223344556677","toSmall":"0xaabbccddeeff00112233445566"} > should return a valid Bytes14 > "0xaabbccddeeff0011223344556677" 1`] = `"0xaabbccddeeff0011223344556677"`;

exports[`parse{"type":"Bytes14","value":"0xaabbccddeeff0011223344556677","invalidHex":"ffaabbccddeeff001122334455667788","toBig":"0xffaabbccddeeff0011223344556677","toSmall":"0xaabbccddeeff00112233445566"} > should throw if value is not a valid string for Bytes14 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff001122334455667788 is not of correct length for Bytes14. Expected length: 30.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes14","value":"0xaabbccddeeff0011223344556677","invalidHex":"ffaabbccddeeff001122334455667788","toBig":"0xffaabbccddeeff0011223344556677","toSmall":"0xaabbccddeeff00112233445566"} > should throw if value is not a valid string for Bytes14 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff00112233445566 is not of correct length for Bytes14. Expected length: 30.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes14","value":"0xaabbccddeeff0011223344556677","invalidHex":"ffaabbccddeeff001122334455667788","toBig":"0xffaabbccddeeff0011223344556677","toSmall":"0xaabbccddeeff00112233445566"} > should throw if value is not a valid string for Bytes14 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff0011223344556677 is not of correct length for Bytes14. Expected length: 30.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes14","value":"0xaabbccddeeff0011223344556677","invalidHex":"ffaabbccddeeff001122334455667788","toBig":"0xffaabbccddeeff0011223344556677","toSmall":"0xaabbccddeeff00112233445566"} > should throw if value is not a valid string for Bytes14 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes14. Expected length: 30.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes14","value":"0xaabbccddeeff0011223344556677","invalidHex":"ffaabbccddeeff001122334455667788","toBig":"0xffaabbccddeeff0011223344556677","toSmall":"0xaabbccddeeff00112233445566"} > should throw if value is not a valid string for Bytes14 5`] = `
"InvalidBytesFixedError: Received 3462888702254188239912542588462711 is not of correct length for Bytes14. Expected length: 30.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes15","value":"0xaabbccddeeff001122334455667788","invalidHex":"ffaabbccddeeff00112233445566778899","toBig":"0xffaabbccddeeff001122334455667788","toSmall":"0xaabbccddeeff0011223344556677"} > should return a valid Bytes15 > "0xaabbccddeeff001122334455667788" 1`] = `"0xaabbccddeeff001122334455667788"`;

exports[`parse{"type":"Bytes15","value":"0xaabbccddeeff001122334455667788","invalidHex":"ffaabbccddeeff00112233445566778899","toBig":"0xffaabbccddeeff001122334455667788","toSmall":"0xaabbccddeeff0011223344556677"} > should throw if value is not a valid string for Bytes15 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff00112233445566778899 is not of correct length for Bytes15. Expected length: 32.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes15","value":"0xaabbccddeeff001122334455667788","invalidHex":"ffaabbccddeeff00112233445566778899","toBig":"0xffaabbccddeeff001122334455667788","toSmall":"0xaabbccddeeff0011223344556677"} > should throw if value is not a valid string for Bytes15 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff0011223344556677 is not of correct length for Bytes15. Expected length: 32.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes15","value":"0xaabbccddeeff001122334455667788","invalidHex":"ffaabbccddeeff00112233445566778899","toBig":"0xffaabbccddeeff001122334455667788","toSmall":"0xaabbccddeeff0011223344556677"} > should throw if value is not a valid string for Bytes15 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff001122334455667788 is not of correct length for Bytes15. Expected length: 32.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes15","value":"0xaabbccddeeff001122334455667788","invalidHex":"ffaabbccddeeff00112233445566778899","toBig":"0xffaabbccddeeff001122334455667788","toSmall":"0xaabbccddeeff0011223344556677"} > should throw if value is not a valid string for Bytes15 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes15. Expected length: 32.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes15","value":"0xaabbccddeeff001122334455667788","invalidHex":"ffaabbccddeeff00112233445566778899","toBig":"0xffaabbccddeeff001122334455667788","toSmall":"0xaabbccddeeff0011223344556677"} > should throw if value is not a valid string for Bytes15 5`] = `
"InvalidBytesFixedError: Received 886499507777072189417610902646454152 is not of correct length for Bytes15. Expected length: 32.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes16","value":"0xaabbccddeeff00112233445566778899","invalidHex":"ffaabbccddeeff00112233445566778899aa","toBig":"0xffaabbccddeeff00112233445566778899","toSmall":"0xaabbccddeeff001122334455667788"} > should return a valid Bytes16 > "0xaabbccddeeff00112233445566778899" 1`] = `"0xaabbccddeeff00112233445566778899"`;

exports[`parse{"type":"Bytes16","value":"0xaabbccddeeff00112233445566778899","invalidHex":"ffaabbccddeeff00112233445566778899aa","toBig":"0xffaabbccddeeff00112233445566778899","toSmall":"0xaabbccddeeff001122334455667788"} > should throw if value is not a valid string for Bytes16 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff00112233445566778899aa is not of correct length for Bytes16. Expected length: 34.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes16","value":"0xaabbccddeeff00112233445566778899","invalidHex":"ffaabbccddeeff00112233445566778899aa","toBig":"0xffaabbccddeeff00112233445566778899","toSmall":"0xaabbccddeeff001122334455667788"} > should throw if value is not a valid string for Bytes16 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff001122334455667788 is not of correct length for Bytes16. Expected length: 34.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes16","value":"0xaabbccddeeff00112233445566778899","invalidHex":"ffaabbccddeeff00112233445566778899aa","toBig":"0xffaabbccddeeff00112233445566778899","toSmall":"0xaabbccddeeff001122334455667788"} > should throw if value is not a valid string for Bytes16 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff00112233445566778899 is not of correct length for Bytes16. Expected length: 34.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes16","value":"0xaabbccddeeff00112233445566778899","invalidHex":"ffaabbccddeeff00112233445566778899aa","toBig":"0xffaabbccddeeff00112233445566778899","toSmall":"0xaabbccddeeff001122334455667788"} > should throw if value is not a valid string for Bytes16 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes16. Expected length: 34.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes16","value":"0xaabbccddeeff00112233445566778899","invalidHex":"ffaabbccddeeff00112233445566778899aa","toBig":"0xffaabbccddeeff00112233445566778899","toSmall":"0xaabbccddeeff001122334455667788"} > should throw if value is not a valid string for Bytes16 5`] = `
"InvalidBytesFixedError: Received 226943873990930480490908391077492263065 is not of correct length for Bytes16. Expected length: 34.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes17","value":"0xaabbccddeeff00112233445566778899aa","invalidHex":"ffaabbccddeeff00112233445566778899aabb","toBig":"0xffaabbccddeeff00112233445566778899aa","toSmall":"0xaabbccddeeff00112233445566778899"} > should return a valid Bytes17 > "0xaabbccddeeff00112233445566778899aa" 1`] = `"0xaabbccddeeff00112233445566778899aa"`;

exports[`parse{"type":"Bytes17","value":"0xaabbccddeeff00112233445566778899aa","invalidHex":"ffaabbccddeeff00112233445566778899aabb","toBig":"0xffaabbccddeeff00112233445566778899aa","toSmall":"0xaabbccddeeff00112233445566778899"} > should throw if value is not a valid string for Bytes17 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff00112233445566778899aabb is not of correct length for Bytes17. Expected length: 36.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes17","value":"0xaabbccddeeff00112233445566778899aa","invalidHex":"ffaabbccddeeff00112233445566778899aabb","toBig":"0xffaabbccddeeff00112233445566778899aa","toSmall":"0xaabbccddeeff00112233445566778899"} > should throw if value is not a valid string for Bytes17 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff00112233445566778899 is not of correct length for Bytes17. Expected length: 36.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes17","value":"0xaabbccddeeff00112233445566778899aa","invalidHex":"ffaabbccddeeff00112233445566778899aabb","toBig":"0xffaabbccddeeff00112233445566778899aa","toSmall":"0xaabbccddeeff00112233445566778899"} > should throw if value is not a valid string for Bytes17 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff00112233445566778899aa is not of correct length for Bytes17. Expected length: 36.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes17","value":"0xaabbccddeeff00112233445566778899aa","invalidHex":"ffaabbccddeeff00112233445566778899aabb","toBig":"0xffaabbccddeeff00112233445566778899aa","toSmall":"0xaabbccddeeff00112233445566778899"} > should throw if value is not a valid string for Bytes17 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes17. Expected length: 36.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes17","value":"0xaabbccddeeff00112233445566778899aa","invalidHex":"ffaabbccddeeff00112233445566778899aabb","toBig":"0xffaabbccddeeff00112233445566778899aa","toSmall":"0xaabbccddeeff00112233445566778899"} > should throw if value is not a valid string for Bytes17 5`] = `
"InvalidBytesFixedError: Received 58097631741678203005672548115838019344810 is not of correct length for Bytes17. Expected length: 36.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes18","value":"0xaabbccddeeff00112233445566778899aabb","invalidHex":"ffaabbccddeeff00112233445566778899aabbcc","toBig":"0xffaabbccddeeff00112233445566778899aabb","toSmall":"0xaabbccddeeff00112233445566778899aa"} > should return a valid Bytes18 > "0xaabbccddeeff00112233445566778899aabb" 1`] = `"0xaabbccddeeff00112233445566778899aabb"`;

exports[`parse{"type":"Bytes18","value":"0xaabbccddeeff00112233445566778899aabb","invalidHex":"ffaabbccddeeff00112233445566778899aabbcc","toBig":"0xffaabbccddeeff00112233445566778899aabb","toSmall":"0xaabbccddeeff00112233445566778899aa"} > should throw if value is not a valid string for Bytes18 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff00112233445566778899aabbcc is not of correct length for Bytes18. Expected length: 38.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes18","value":"0xaabbccddeeff00112233445566778899aabb","invalidHex":"ffaabbccddeeff00112233445566778899aabbcc","toBig":"0xffaabbccddeeff00112233445566778899aabb","toSmall":"0xaabbccddeeff00112233445566778899aa"} > should throw if value is not a valid string for Bytes18 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff00112233445566778899aa is not of correct length for Bytes18. Expected length: 38.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes18","value":"0xaabbccddeeff00112233445566778899aabb","invalidHex":"ffaabbccddeeff00112233445566778899aabbcc","toBig":"0xffaabbccddeeff00112233445566778899aabb","toSmall":"0xaabbccddeeff00112233445566778899aa"} > should throw if value is not a valid string for Bytes18 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff00112233445566778899aabb is not of correct length for Bytes18. Expected length: 38.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes18","value":"0xaabbccddeeff00112233445566778899aabb","invalidHex":"ffaabbccddeeff00112233445566778899aabbcc","toBig":"0xffaabbccddeeff00112233445566778899aabb","toSmall":"0xaabbccddeeff00112233445566778899aa"} > should throw if value is not a valid string for Bytes18 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes18. Expected length: 38.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes18","value":"0xaabbccddeeff00112233445566778899aabb","invalidHex":"ffaabbccddeeff00112233445566778899aabbcc","toBig":"0xffaabbccddeeff00112233445566778899aabb","toSmall":"0xaabbccddeeff00112233445566778899aa"} > should throw if value is not a valid string for Bytes18 5`] = `
"InvalidBytesFixedError: Received 14872993725869619969452172317654532952271547 is not of correct length for Bytes18. Expected length: 38.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes19","value":"0xaabbccddeeff00112233445566778899aabbcc","invalidHex":"ffaabbccddeeff00112233445566778899aabbccdd","toBig":"0xffaabbccddeeff00112233445566778899aabbcc","toSmall":"0xaabbccddeeff00112233445566778899aabb"} > should return a valid Bytes19 > "0xaabbccddeeff00112233445566778899aabbcc" 1`] = `"0xaabbccddeeff00112233445566778899aabbcc"`;

exports[`parse{"type":"Bytes19","value":"0xaabbccddeeff00112233445566778899aabbcc","invalidHex":"ffaabbccddeeff00112233445566778899aabbccdd","toBig":"0xffaabbccddeeff00112233445566778899aabbcc","toSmall":"0xaabbccddeeff00112233445566778899aabb"} > should throw if value is not a valid string for Bytes19 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff00112233445566778899aabbccdd is not of correct length for Bytes19. Expected length: 40.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes19","value":"0xaabbccddeeff00112233445566778899aabbcc","invalidHex":"ffaabbccddeeff00112233445566778899aabbccdd","toBig":"0xffaabbccddeeff00112233445566778899aabbcc","toSmall":"0xaabbccddeeff00112233445566778899aabb"} > should throw if value is not a valid string for Bytes19 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff00112233445566778899aabb is not of correct length for Bytes19. Expected length: 40.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes19","value":"0xaabbccddeeff00112233445566778899aabbcc","invalidHex":"ffaabbccddeeff00112233445566778899aabbccdd","toBig":"0xffaabbccddeeff00112233445566778899aabbcc","toSmall":"0xaabbccddeeff00112233445566778899aabb"} > should throw if value is not a valid string for Bytes19 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff00112233445566778899aabbcc is not of correct length for Bytes19. Expected length: 40.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes19","value":"0xaabbccddeeff00112233445566778899aabbcc","invalidHex":"ffaabbccddeeff00112233445566778899aabbccdd","toBig":"0xffaabbccddeeff00112233445566778899aabbcc","toSmall":"0xaabbccddeeff00112233445566778899aabb"} > should throw if value is not a valid string for Bytes19 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes19. Expected length: 40.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes19","value":"0xaabbccddeeff00112233445566778899aabbcc","invalidHex":"ffaabbccddeeff00112233445566778899aabbccdd","toBig":"0xffaabbccddeeff00112233445566778899aabbcc","toSmall":"0xaabbccddeeff00112233445566778899aabb"} > should throw if value is not a valid string for Bytes19 5`] = `
"InvalidBytesFixedError: Received 3807486393822622712179756113319560435781516236 is not of correct length for Bytes19. Expected length: 40.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes20","value":"0xaabbccddeeff00112233445566778899aabbccdd","invalidHex":"ffaabbccddeeff00112233445566778899aabbccddeeff","toBig":"0xffaabbccddeeff00112233445566778899aabbccdd","toSmall":"0xaabbccddeeff00112233445566778899aabbcc"} > should return a valid Bytes20 > "0xaabbccddeeff00112233445566778899aabbccdd" 1`] = `"0xaabbccddeeff00112233445566778899aabbccdd"`;

exports[`parse{"type":"Bytes20","value":"0xaabbccddeeff00112233445566778899aabbccdd","invalidHex":"ffaabbccddeeff00112233445566778899aabbccddeeff","toBig":"0xffaabbccddeeff00112233445566778899aabbccdd","toSmall":"0xaabbccddeeff00112233445566778899aabbcc"} > should throw if value is not a valid string for Bytes20 1`] = `
"InvalidBytesFixedError: Received ffaabbccddeeff00112233445566778899aabbccddeeff is not of correct length for Bytes20. Expected length: 42.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes20","value":"0xaabbccddeeff00112233445566778899aabbccdd","invalidHex":"ffaabbccddeeff00112233445566778899aabbccddeeff","toBig":"0xffaabbccddeeff00112233445566778899aabbccdd","toSmall":"0xaabbccddeeff00112233445566778899aabbcc"} > should throw if value is not a valid string for Bytes20 2`] = `
"InvalidBytesFixedError: Received 0xaabbccddeeff00112233445566778899aabbcc is not of correct length for Bytes20. Expected length: 42.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes20","value":"0xaabbccddeeff00112233445566778899aabbccdd","invalidHex":"ffaabbccddeeff00112233445566778899aabbccddeeff","toBig":"0xffaabbccddeeff00112233445566778899aabbccdd","toSmall":"0xaabbccddeeff00112233445566778899aabbcc"} > should throw if value is not a valid string for Bytes20 3`] = `
"InvalidBytesFixedError: Received 0xffaabbccddeeff00112233445566778899aabbccdd is not of correct length for Bytes20. Expected length: 42.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes20","value":"0xaabbccddeeff00112233445566778899aabbccdd","invalidHex":"ffaabbccddeeff00112233445566778899aabbccddeeff","toBig":"0xffaabbccddeeff00112233445566778899aabbccdd","toSmall":"0xaabbccddeeff00112233445566778899aabbcc"} > should throw if value is not a valid string for Bytes20 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes20. Expected length: 42.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes20","value":"0xaabbccddeeff00112233445566778899aabbccdd","invalidHex":"ffaabbccddeeff00112233445566778899aabbccddeeff","toBig":"0xffaabbccddeeff00112233445566778899aabbccdd","toSmall":"0xaabbccddeeff00112233445566778899aabbcc"} > should throw if value is not a valid string for Bytes20 5`] = `
"InvalidBytesFixedError: Received 974716516818591414318017565009807471560068156637 is not of correct length for Bytes20. Expected length: 42.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes21","value":"0xbbccddeeff00112233445566778899aabbccddeeff","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff","toSmall":"0xbbccddeeff00112233445566778899aabbccdd"} > should return a valid Bytes21 > "0xbbccddeeff00112233445566778899aabbccddeeff" 1`] = `"0xbbccddeeff00112233445566778899aabbccddeeff"`;

exports[`parse{"type":"Bytes21","value":"0xbbccddeeff00112233445566778899aabbccddeeff","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff","toSmall":"0xbbccddeeff00112233445566778899aabbccdd"} > should throw if value is not a valid string for Bytes21 1`] = `
"InvalidBytesFixedError: Received ffbbccddeeff00112233445566778899aabbccddeeff00 is not of correct length for Bytes21. Expected length: 44.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes21","value":"0xbbccddeeff00112233445566778899aabbccddeeff","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff","toSmall":"0xbbccddeeff00112233445566778899aabbccdd"} > should throw if value is not a valid string for Bytes21 2`] = `
"InvalidBytesFixedError: Received 0xbbccddeeff00112233445566778899aabbccdd is not of correct length for Bytes21. Expected length: 44.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes21","value":"0xbbccddeeff00112233445566778899aabbccddeeff","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff","toSmall":"0xbbccddeeff00112233445566778899aabbccdd"} > should throw if value is not a valid string for Bytes21 3`] = `
"InvalidBytesFixedError: Received 0xffbbccddeeff00112233445566778899aabbccddeeff is not of correct length for Bytes21. Expected length: 44.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes21","value":"0xbbccddeeff00112233445566778899aabbccddeeff","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff","toSmall":"0xbbccddeeff00112233445566778899aabbccdd"} > should throw if value is not a valid string for Bytes21 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes21. Expected length: 44.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes21","value":"0xbbccddeeff00112233445566778899aabbccddeeff","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff","toSmall":"0xbbccddeeff00112233445566778899aabbccdd"} > should throw if value is not a valid string for Bytes21 5`] = `
"InvalidBytesFixedError: Received 274470389582311928521235220670105440734442443108095 is not of correct length for Bytes21. Expected length: 44.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes22","value":"0xbbccddeeff00112233445566778899aabbccddeeff00","invalidHex":"ffbbccddeeff00112233445566778899bbccddeeff0011","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff"} > should return a valid Bytes22 > "0xbbccddeeff00112233445566778899aabbccddeeff00" 1`] = `"0xbbccddeeff00112233445566778899aabbccddeeff00"`;

exports[`parse{"type":"Bytes22","value":"0xbbccddeeff00112233445566778899aabbccddeeff00","invalidHex":"ffbbccddeeff00112233445566778899bbccddeeff0011","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff"} > should throw if value is not a valid string for Bytes22 1`] = `
"InvalidBytesFixedError: Received ffbbccddeeff00112233445566778899bbccddeeff0011 is not of correct length for Bytes22. Expected length: 46.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes22","value":"0xbbccddeeff00112233445566778899aabbccddeeff00","invalidHex":"ffbbccddeeff00112233445566778899bbccddeeff0011","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff"} > should throw if value is not a valid string for Bytes22 2`] = `
"InvalidBytesFixedError: Received 0xbbccddeeff00112233445566778899aabbccddeeff is not of correct length for Bytes22. Expected length: 46.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes22","value":"0xbbccddeeff00112233445566778899aabbccddeeff00","invalidHex":"ffbbccddeeff00112233445566778899bbccddeeff0011","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff"} > should throw if value is not a valid string for Bytes22 3`] = `
"InvalidBytesFixedError: Received 0xffbbccddeeff00112233445566778899aabbccddeeff00 is not of correct length for Bytes22. Expected length: 46.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes22","value":"0xbbccddeeff00112233445566778899aabbccddeeff00","invalidHex":"ffbbccddeeff00112233445566778899bbccddeeff0011","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff"} > should throw if value is not a valid string for Bytes22 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes22. Expected length: 46.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes22","value":"0xbbccddeeff00112233445566778899aabbccddeeff00","invalidHex":"ffbbccddeeff00112233445566778899bbccddeeff0011","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff"} > should throw if value is not a valid string for Bytes22 5`] = `
"InvalidBytesFixedError: Received 70264419733071853701436216491546992828017265435672320 is not of correct length for Bytes22. Expected length: 46.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes23","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00"} > should return a valid Bytes23 > "0xbbccddeeff00112233445566778899aabbccddeeff0011" 1`] = `"0xbbccddeeff00112233445566778899aabbccddeeff0011"`;

exports[`parse{"type":"Bytes23","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00"} > should throw if value is not a valid string for Bytes23 1`] = `
"InvalidBytesFixedError: Received ffbbccddeeff00112233445566778899aabbccddeeff001122 is not of correct length for Bytes23. Expected length: 48.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes23","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00"} > should throw if value is not a valid string for Bytes23 2`] = `
"InvalidBytesFixedError: Received 0xbbccddeeff00112233445566778899aabbccddeeff00 is not of correct length for Bytes23. Expected length: 48.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes23","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00"} > should throw if value is not a valid string for Bytes23 3`] = `
"InvalidBytesFixedError: Received 0xffbbccddeeff00112233445566778899aabbccddeeff0011 is not of correct length for Bytes23. Expected length: 48.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes23","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00"} > should throw if value is not a valid string for Bytes23 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes23. Expected length: 48.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes23","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00"} > should throw if value is not a valid string for Bytes23 5`] = `
"InvalidBytesFixedError: Received 17987691451666394547567671421836030163972419951532113937 is not of correct length for Bytes23. Expected length: 48.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes24","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011"} > should return a valid Bytes24 > "0xbbccddeeff00112233445566778899aabbccddeeff001122" 1`] = `"0xbbccddeeff00112233445566778899aabbccddeeff001122"`;

exports[`parse{"type":"Bytes24","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011"} > should throw if value is not a valid string for Bytes24 1`] = `
"InvalidBytesFixedError: Received ffbbccddeeff00112233445566778899aabbccddeeff00112233 is not of correct length for Bytes24. Expected length: 50.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes24","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011"} > should throw if value is not a valid string for Bytes24 2`] = `
"InvalidBytesFixedError: Received 0xbbccddeeff00112233445566778899aabbccddeeff0011 is not of correct length for Bytes24. Expected length: 50.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes24","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011"} > should throw if value is not a valid string for Bytes24 3`] = `
"InvalidBytesFixedError: Received 0xffbbccddeeff00112233445566778899aabbccddeeff001122 is not of correct length for Bytes24. Expected length: 50.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes24","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011"} > should throw if value is not a valid string for Bytes24 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes24. Expected length: 50.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes24","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011"} > should throw if value is not a valid string for Bytes24 5`] = `
"InvalidBytesFixedError: Received 4604849011626597004177323883990023721976939507592221167906 is not of correct length for Bytes24. Expected length: 50.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes25","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff0011223344","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122"} > should return a valid Bytes25 > "0xbbccddeeff00112233445566778899aabbccddeeff00112233" 1`] = `"0xbbccddeeff00112233445566778899aabbccddeeff00112233"`;

exports[`parse{"type":"Bytes25","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff0011223344","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122"} > should throw if value is not a valid string for Bytes25 1`] = `
"InvalidBytesFixedError: Received ffbbccddeeff00112233445566778899aabbccddeeff0011223344 is not of correct length for Bytes25. Expected length: 52.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes25","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff0011223344","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122"} > should throw if value is not a valid string for Bytes25 2`] = `
"InvalidBytesFixedError: Received 0xbbccddeeff00112233445566778899aabbccddeeff001122 is not of correct length for Bytes25. Expected length: 52.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes25","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff0011223344","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122"} > should throw if value is not a valid string for Bytes25 3`] = `
"InvalidBytesFixedError: Received 0xffbbccddeeff00112233445566778899aabbccddeeff00112233 is not of correct length for Bytes25. Expected length: 52.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes25","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff0011223344","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122"} > should throw if value is not a valid string for Bytes25 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes25. Expected length: 52.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes25","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff0011223344","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122"} > should throw if value is not a valid string for Bytes25 5`] = `
"InvalidBytesFixedError: Received 1178841346976408833069394914301446072826096513943608618983987 is not of correct length for Bytes25. Expected length: 52.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes26","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122334455","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011223344","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233"} > should return a valid Bytes26 > "0xbbccddeeff00112233445566778899aabbccddeeff0011223344" 1`] = `"0xbbccddeeff00112233445566778899aabbccddeeff0011223344"`;

exports[`parse{"type":"Bytes26","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122334455","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011223344","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233"} > should throw if value is not a valid string for Bytes26 1`] = `
"InvalidBytesFixedError: Received ffbbccddeeff00112233445566778899aabbccddeeff001122334455 is not of correct length for Bytes26. Expected length: 54.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes26","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122334455","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011223344","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233"} > should throw if value is not a valid string for Bytes26 2`] = `
"InvalidBytesFixedError: Received 0xbbccddeeff00112233445566778899aabbccddeeff00112233 is not of correct length for Bytes26. Expected length: 54.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes26","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122334455","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011223344","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233"} > should throw if value is not a valid string for Bytes26 3`] = `
"InvalidBytesFixedError: Received 0xffbbccddeeff00112233445566778899aabbccddeeff0011223344 is not of correct length for Bytes26. Expected length: 54.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes26","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122334455","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011223344","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233"} > should throw if value is not a valid string for Bytes26 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes26. Expected length: 54.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes26","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122334455","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011223344","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233"} > should throw if value is not a valid string for Bytes26 5`] = `
"InvalidBytesFixedError: Received 301783384825960661265765098061170194643480707569563806459900740 is not of correct length for Bytes26. Expected length: 54.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes27","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122334455","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344"} > should return a valid Bytes27 > "0xbbccddeeff00112233445566778899aabbccddeeff001122334455" 1`] = `"0xbbccddeeff00112233445566778899aabbccddeeff001122334455"`;

exports[`parse{"type":"Bytes27","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122334455","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344"} > should throw if value is not a valid string for Bytes27 1`] = `
"InvalidBytesFixedError: Received ffbbccddeeff00112233445566778899aabbccddeeff00112233445566 is not of correct length for Bytes27. Expected length: 56.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes27","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122334455","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344"} > should throw if value is not a valid string for Bytes27 2`] = `
"InvalidBytesFixedError: Received 0xbbccddeeff00112233445566778899aabbccddeeff0011223344 is not of correct length for Bytes27. Expected length: 56.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes27","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122334455","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344"} > should throw if value is not a valid string for Bytes27 3`] = `
"InvalidBytesFixedError: Received 0xffbbccddeeff00112233445566778899aabbccddeeff001122334455 is not of correct length for Bytes27. Expected length: 56.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes27","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122334455","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344"} > should throw if value is not a valid string for Bytes27 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes27. Expected length: 56.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes27","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122334455","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344"} > should throw if value is not a valid string for Bytes27 5`] = `
"InvalidBytesFixedError: Received 77256546515445929284035865103659569828731061137808334453734589525 is not of correct length for Bytes27. Expected length: 56.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes28","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff0011223344556677","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455"} > should return a valid Bytes28 > "0xbbccddeeff00112233445566778899aabbccddeeff00112233445566" 1`] = `"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566"`;

exports[`parse{"type":"Bytes28","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff0011223344556677","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455"} > should throw if value is not a valid string for Bytes28 1`] = `
"InvalidBytesFixedError: Received ffbbccddeeff00112233445566778899aabbccddeeff0011223344556677 is not of correct length for Bytes28. Expected length: 58.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes28","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff0011223344556677","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455"} > should throw if value is not a valid string for Bytes28 2`] = `
"InvalidBytesFixedError: Received 0xbbccddeeff00112233445566778899aabbccddeeff001122334455 is not of correct length for Bytes28. Expected length: 58.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes28","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff0011223344556677","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455"} > should throw if value is not a valid string for Bytes28 3`] = `
"InvalidBytesFixedError: Received 0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566 is not of correct length for Bytes28. Expected length: 58.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes28","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff0011223344556677","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455"} > should throw if value is not a valid string for Bytes28 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes28. Expected length: 58.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes28","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff0011223344556677","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455"} > should throw if value is not a valid string for Bytes28 5`] = `
"InvalidBytesFixedError: Received 19777675907954157896713181466536849876155151651278933620156054918502 is not of correct length for Bytes28. Expected length: 58.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes29","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122334455667788","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011223344556677","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566"} > should return a valid Bytes29 > "0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677" 1`] = `"0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677"`;

exports[`parse{"type":"Bytes29","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122334455667788","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011223344556677","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566"} > should throw if value is not a valid string for Bytes29 1`] = `
"InvalidBytesFixedError: Received ffbbccddeeff00112233445566778899aabbccddeeff001122334455667788 is not of correct length for Bytes29. Expected length: 60.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes29","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122334455667788","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011223344556677","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566"} > should throw if value is not a valid string for Bytes29 2`] = `
"InvalidBytesFixedError: Received 0xbbccddeeff00112233445566778899aabbccddeeff00112233445566 is not of correct length for Bytes29. Expected length: 60.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes29","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122334455667788","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011223344556677","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566"} > should throw if value is not a valid string for Bytes29 3`] = `
"InvalidBytesFixedError: Received 0xffbbccddeeff00112233445566778899aabbccddeeff0011223344556677 is not of correct length for Bytes29. Expected length: 60.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes29","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122334455667788","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011223344556677","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566"} > should throw if value is not a valid string for Bytes29 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes29. Expected length: 60.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes29","value":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff001122334455667788","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff0011223344556677","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566"} > should throw if value is not a valid string for Bytes29 5`] = `
"InvalidBytesFixedError: Received 5063085032436264421558574455433433568295718822727407006759950059136631 is not of correct length for Bytes29. Expected length: 60.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes30","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122334455667788","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677"} > should return a valid Bytes30 > "0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788" 1`] = `"0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788"`;

exports[`parse{"type":"Bytes30","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122334455667788","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677"} > should throw if value is not a valid string for Bytes30 1`] = `
"InvalidBytesFixedError: Received ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899 is not of correct length for Bytes30. Expected length: 62.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes30","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122334455667788","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677"} > should throw if value is not a valid string for Bytes30 2`] = `
"InvalidBytesFixedError: Received 0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677 is not of correct length for Bytes30. Expected length: 62.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes30","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122334455667788","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677"} > should throw if value is not a valid string for Bytes30 3`] = `
"InvalidBytesFixedError: Received 0xffbbccddeeff00112233445566778899aabbccddeeff001122334455667788 is not of correct length for Bytes30. Expected length: 62.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes30","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122334455667788","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677"} > should throw if value is not a valid string for Bytes30 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes30. Expected length: 62.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes30","value":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff001122334455667788","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff0011223344556677"} > should throw if value is not a valid string for Bytes30 5`] = `
"InvalidBytesFixedError: Received 1296149768303683691918995060590958993483704018618216193730547215138977672 is not of correct length for Bytes30. Expected length: 62.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes31","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788"} > should return a valid Bytes31 > "0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899" 1`] = `"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899"`;

exports[`parse{"type":"Bytes31","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788"} > should throw if value is not a valid string for Bytes31 1`] = `
"InvalidBytesFixedError: Received ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa is not of correct length for Bytes31. Expected length: 64.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes31","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788"} > should throw if value is not a valid string for Bytes31 2`] = `
"InvalidBytesFixedError: Received 0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788 is not of correct length for Bytes31. Expected length: 64.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes31","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788"} > should throw if value is not a valid string for Bytes31 3`] = `
"InvalidBytesFixedError: Received 0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899 is not of correct length for Bytes31. Expected length: 64.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes31","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788"} > should throw if value is not a valid string for Bytes31 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes31. Expected length: 64.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes31","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff001122334455667788"} > should throw if value is not a valid string for Bytes31 5`] = `
"InvalidBytesFixedError: Received 331814340685743025131262735511285502331828228766263345595020087075578284185 is not of correct length for Bytes31. Expected length: 64.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes32","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aabb","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899"} > should return a valid Bytes32 > "0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa" 1`] = `"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa"`;

exports[`parse{"type":"Bytes32","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aabb","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899"} > should throw if value is not a valid string for Bytes32 1`] = `
"InvalidBytesFixedError: Received ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aabb is not of correct length for Bytes32. Expected length: 66.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes32","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aabb","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899"} > should throw if value is not a valid string for Bytes32 2`] = `
"InvalidBytesFixedError: Received 0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899 is not of correct length for Bytes32. Expected length: 66.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes32","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aabb","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899"} > should throw if value is not a valid string for Bytes32 3`] = `
"InvalidBytesFixedError: Received 0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa is not of correct length for Bytes32. Expected length: 66.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes32","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aabb","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899"} > should throw if value is not a valid string for Bytes32 4`] = `
"InvalidBytesFixedError: Received invalid is not of correct length for Bytes32. Expected length: 66.
https://tevm.dev/reference/errors"
`;

exports[`parse{"type":"Bytes32","value":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","invalidHex":"ffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aabb","toBig":"0xffbbccddeeff00112233445566778899aabbccddeeff00112233445566778899aa","toSmall":"0xbbccddeeff00112233445566778899aabbccddeeff00112233445566778899"} > should throw if value is not a valid string for Bytes32 5`] = `
"InvalidBytesFixedError: Received 84944471215550214433603260290889088596948026564163416472325142291348040751530 is not of correct length for Bytes32. Expected length: 66.
https://tevm.dev/reference/errors"
`;
