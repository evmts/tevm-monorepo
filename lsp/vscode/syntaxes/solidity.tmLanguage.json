{
  "name": "Solidity",
  "scopeName": "source.solidity",
  "fileTypes": ["sol"],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#types"
    },
    {
      "include": "#declarations"
    },
    {
      "include": "#function-calls"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.solidity",
          "match": "//.*"
        },
        {
          "name": "comment.block.solidity",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.solidity",
          "match": "\\b(if|else|while|do|for|break|continue|return|try|catch|revert|assembly)\\b"
        },
        {
          "name": "keyword.other.solidity",
          "match": "\\b(pragma|import|contract|interface|library|is|struct|enum|event|using|modifier|function|constructor|fallback|receive|error|emit|public|private|external|internal|pure|view|payable|storage|memory|calldata|virtual|override|immutable|constant|anonymous|indexed)\\b"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.solidity",
          "match": "\\b(true|false|this|super|ether|wei|gwei|finney|seconds|minutes|hours|days|weeks|now)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.solidity",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.solidity",
          "match": "\\\\."
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.solidity",
          "match": "\\b(\\d+(\\.\\d+)?([eE][+-]?\\d+)?|0x[a-fA-F0-9]+)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "entity.name.type.solidity",
          "match": "\\b(address|bool|string|bytes|int|uint|fixed|ufixed|mapping|array)\\b"
        },
        {
          "name": "entity.name.type.solidity",
          "match": "\\b(int8|int16|int24|int32|int40|int48|int56|int64|int72|int80|int88|int96|int104|int112|int120|int128|int136|int144|int152|int160|int168|int176|int184|int192|int200|int208|int216|int224|int232|int240|int248|int256)\\b"
        },
        {
          "name": "entity.name.type.solidity",
          "match": "\\b(uint8|uint16|uint24|uint32|uint40|uint48|uint56|uint64|uint72|uint80|uint88|uint96|uint104|uint112|uint120|uint128|uint136|uint144|uint152|uint160|uint168|uint176|uint184|uint192|uint200|uint208|uint216|uint224|uint232|uint240|uint248|uint256)\\b"
        },
        {
          "name": "entity.name.type.solidity",
          "match": "\\b(bytes1|bytes2|bytes3|bytes4|bytes5|bytes6|bytes7|bytes8|bytes9|bytes10|bytes11|bytes12|bytes13|bytes14|bytes15|bytes16|bytes17|bytes18|bytes19|bytes20|bytes21|bytes22|bytes23|bytes24|bytes25|bytes26|bytes27|bytes28|bytes29|bytes30|bytes31|bytes32)\\b"
        }
      ]
    },
    "declarations": {
      "patterns": [
        {
          "match": "\\b(contract|interface|library)\\s+([A-Za-z_][A-Za-z0-9_]*)\\b",
          "captures": {
            "1": { "name": "keyword.other.solidity" },
            "2": { "name": "entity.name.type.class.solidity" }
          }
        },
        {
          "match": "\\b(function)\\s+([A-Za-z_][A-Za-z0-9_]*)\\b",
          "captures": {
            "1": { "name": "keyword.other.solidity" },
            "2": { "name": "entity.name.function.solidity" }
          }
        },
        {
          "match": "\\b(event)\\s+([A-Za-z_][A-Za-z0-9_]*)\\b",
          "captures": {
            "1": { "name": "keyword.other.solidity" },
            "2": { "name": "entity.name.type.event.solidity" }
          }
        },
        {
          "match": "\\b(struct)\\s+([A-Za-z_][A-Za-z0-9_]*)\\b",
          "captures": {
            "1": { "name": "keyword.other.solidity" },
            "2": { "name": "entity.name.type.struct.solidity" }
          }
        },
        {
          "match": "\\b(enum)\\s+([A-Za-z_][A-Za-z0-9_]*)\\b",
          "captures": {
            "1": { "name": "keyword.other.solidity" },
            "2": { "name": "entity.name.type.enum.solidity" }
          }
        }
      ]
    },
    "function-calls": {
      "match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\s*\\(",
      "captures": {
        "1": { "name": "entity.name.function.solidity" }
      }
    }
  }
}