// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`createHandlers should handle tevm_mine 1`] = `
{
  "id": 1,
  "jsonrpc": "2.0",
  "method": "tevm_mine",
  "result": {
    "blockHashes": [
      "0x3201277b6823bbcd45e1a1c4a334c31b083676c70cebb1f386139f6091ae8e49",
    ],
  },
}
`;

exports[`createHandlers should handle eth_chainId 1`] = `
{
  "id": 1,
  "jsonrpc": "2.0",
  "method": "eth_chainId",
  "result": "0x384",
}
`;

exports[`createHandlers should handle eth_call 1`] = `
{
  "error": {
    "code": -32000,
    "data": {
      "errors": [
        
"sender doesn't have enough funds to send tx. The upfront cost is: 210000000 and the sender's account (0x6969696969696969696969696969696969696969) only has: 0 -> block number=0 hash=0x63b5bacdb65c8c9d10e77d77d40bda5b4dc010a4f7e02a10bdea21a2b1b0a454 hf=cancun baseFeePerGas=7 txs=0 uncles=0 -> tx type=2 hash=0x96171020921a6736a4e62d65c40b749609224fe43187d437cb37d19b3c011005 nonce=0 value=0 signed=true hf=cancun maxFeePerGas=7 maxPriorityFeePerGas=0)

Docs: https://tevm.sh/reference/tevm/errors/classes/insufficientfundserror/
Version: 1.1.0.next-73

Docs: https://tevm.sh/reference/tevm/errors/classes/insufficientfundserror/
Details: /reference/tevm/errors/classes/insufficientfundserror/
Version: 1.1.0.next-73"
,
      ],
    },
    "message": 
"sender doesn't have enough funds to send tx. The upfront cost is: 210000000 and the sender's account (0x6969696969696969696969696969696969696969) only has: 0 -> block number=0 hash=0x63b5bacdb65c8c9d10e77d77d40bda5b4dc010a4f7e02a10bdea21a2b1b0a454 hf=cancun baseFeePerGas=7 txs=0 uncles=0 -> tx type=2 hash=0x96171020921a6736a4e62d65c40b749609224fe43187d437cb37d19b3c011005 nonce=0 value=0 signed=true hf=cancun maxFeePerGas=7 maxPriorityFeePerGas=0)

Docs: https://tevm.sh/reference/tevm/errors/classes/insufficientfundserror/
Version: 1.1.0.next-73

Docs: https://tevm.sh/reference/tevm/errors/classes/insufficientfundserror/
Details: /reference/tevm/errors/classes/insufficientfundserror/
Version: 1.1.0.next-73"
,
  },
  "id": 1,
  "jsonrpc": "2.0",
  "method": "eth_call",
}
`;

exports[`createHandlers should handle eth_getBalance 1`] = `
{
  "id": 1,
  "jsonrpc": "2.0",
  "method": "eth_getBalance",
  "result": "0x0",
}
`;

exports[`createHandlers should handle eth_estimateGas 1`] = `
{
  "error": {
    "code": -32000,
    "data": {
      "errors": [
        
"sender doesn't have enough funds to send tx. The upfront cost is: 210000000 and the sender's account (0x6969696969696969696969696969696969696969) only has: 0 -> block number=0 hash=0x63b5bacdb65c8c9d10e77d77d40bda5b4dc010a4f7e02a10bdea21a2b1b0a454 hf=cancun baseFeePerGas=7 txs=0 uncles=0 -> tx type=2 hash=0x96171020921a6736a4e62d65c40b749609224fe43187d437cb37d19b3c011005 nonce=0 value=0 signed=true hf=cancun maxFeePerGas=7 maxPriorityFeePerGas=0)

Docs: https://tevm.sh/reference/tevm/errors/classes/insufficientfundserror/
Version: 1.1.0.next-73

Docs: https://tevm.sh/reference/tevm/errors/classes/insufficientfundserror/
Details: /reference/tevm/errors/classes/insufficientfundserror/
Version: 1.1.0.next-73"
,
      ],
    },
    "message": 
"sender doesn't have enough funds to send tx. The upfront cost is: 210000000 and the sender's account (0x6969696969696969696969696969696969696969) only has: 0 -> block number=0 hash=0x63b5bacdb65c8c9d10e77d77d40bda5b4dc010a4f7e02a10bdea21a2b1b0a454 hf=cancun baseFeePerGas=7 txs=0 uncles=0 -> tx type=2 hash=0x96171020921a6736a4e62d65c40b749609224fe43187d437cb37d19b3c011005 nonce=0 value=0 signed=true hf=cancun maxFeePerGas=7 maxPriorityFeePerGas=0)

Docs: https://tevm.sh/reference/tevm/errors/classes/insufficientfundserror/
Version: 1.1.0.next-73

Docs: https://tevm.sh/reference/tevm/errors/classes/insufficientfundserror/
Details: /reference/tevm/errors/classes/insufficientfundserror/
Version: 1.1.0.next-73"
,
  },
  "id": 1,
  "jsonrpc": "2.0",
  "method": "eth_estimateGas",
}
`;

exports[`createHandlers should handle tevm_contract 1`] = `
{
  "error": {
    "code": "MethodNotSupported",
    "message": 
"UnsupportedMethodError: tevm_contract is not supported. Encode the contract arguments and use tevm_call instead.

Docs: https://tevm.sh/reference/tevm/errors/classes/methodnotsupportederror/
Version: 1.1.0.next-73"
,
  },
  "id": 1,
  "jsonrpc": "2.0",
  "method": "tevm_contract",
}
`;

exports[`createHandlers should handle eth_mining 1`] = `
{
  "id": 1,
  "jsonrpc": "2.0",
  "method": "eth_mining",
  "result": false,
}
`;

exports[`createHandlers should handle eth_syncing 1`] = `
{
  "id": 1,
  "jsonrpc": "2.0",
  "method": "eth_syncing",
  "result": false,
}
`;
