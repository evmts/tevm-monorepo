// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`validateContractParams > should return InvalidAbiError for invalid ABI 1`] = `
[
  [InvalidAbiError: Expected array, received number

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidabierror/
Version: 1.1.0.next-73],
]
`;

exports[`validateContractParams > should return InvalidAddressError for invalid address 1`] = `
[
  [InvalidToError: Invalid Address not an address

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidtoerror/
Version: 1.1.0.next-73],
  [InvalidAddress: Invalid Address not an address

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidaddresserror/
Version: 1.1.0.next-73],
]
`;

exports[`validateContractParams > should return InvalidArgsError for invalid args 1`] = `
[
  [InvalidParams: Expected array, received string

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidargserror/
Version: 1.1.0.next-73],
]
`;

exports[`validateContractParams > should return InvalidBytecodeError for invalid code 1`] = `
[
  [InvalidBytecodeError: Expected string, received number

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidbytecodeerror/
Version: 1.1.0.next-73],
]
`;

exports[`validateContractParams > should return InvalidBytecodeError for invalid deployedBytecode 1`] = `
[
  [InvalidBytecodeError: Expected string, received number

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidbytecodeerror/
Version: 1.1.0.next-73],
]
`;

exports[`validateContractParams > should return InvalidFunctionNameError for invalid function name 1`] = `
[
  [InvalidFunctionNameError: Expected string, received number

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidfunctionnameerror/
Version: 1.1.0.next-73],
]
`;

exports[`validateContractParams > should return multiple errors for multiple invalid fields 1`] = `
[
  [InvalidToError: Invalid Address not an address

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidtoerror/
Version: 1.1.0.next-73],
  [InvalidBytecodeError: Expected string, received number

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidbytecodeerror/
Version: 1.1.0.next-73],
  [InvalidAbiError: Expected array, received number

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidabierror/
Version: 1.1.0.next-73],
  [InvalidFunctionNameError: Expected string, received number

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidfunctionnameerror/
Version: 1.1.0.next-73],
  [InvalidAddress: Invalid Address not an address

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidaddresserror/
Version: 1.1.0.next-73],
]
`;

exports[`validateContractParams > should validate that createTransaction and blockOverrideSet cannot be used together 1`] = `
[
  [InvalidParams: Cannot have stateOverrideSet or blockOverrideSet for createTransaction

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidparamserror/
Version: 1.1.0.next-73],
]
`;

exports[`validateContractParams > should validate that createTransaction and stateOverrideSet cannot be used together 1`] = `
[
  [InvalidParams: [
  {
    "code": "custom",
    "message": "Invalid Address 0x1234",
    "path": [
      "stateOverrideSet",
      "0x1234"
    ]
  }
]

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidparamserror/
Version: 1.1.0.next-73],
  [InvalidParams: Cannot have stateOverrideSet or blockOverrideSet for createTransaction

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidparamserror/
Version: 1.1.0.next-73],
]
`;

exports[`validateContractParams > should validate that either code or to is provided 1`] = `
[
  [InvalidParams: Must have either code or to

Docs: https://tevm.sh/reference/tevm/errors/classes/invalidparamserror/
Version: 1.1.0.next-73],
]
`;
